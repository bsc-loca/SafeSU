
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite -- Symbiotic EDA Edition [20190521A ] |
 |                                                                            |
 |  Copyright (C) 2012 - 2019 Symbiotic GmbH                                  |
 |                                                                            |
 |  Licensed to: Symbiotic EDA Eval License Program                           |
 |  Licensee contact: office@symbioticeda.com                                 |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+472 (git sha1 c907899, clang 3.8.0-2ubuntu4 -fPIC -Os)

[license] Signature verified.
[license] License cache is hot.

-- Running command `read -define YOSYS_4' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.

-- Executing script file `yosys_45.ys' --

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../hdl/AXI_PMU.sv'

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv'

4. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../submodules/MCCU/hdl/MCCU.sv'

5. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../submodules/RDC/hdl/RDC.sv'

6. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
Adding Verilog module 'AXI_PMU' to elaboration queue.
Running hier_tree::Elaborate().
VERIFIC-WARNING [VERI-1927] ../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:843: port 'watermark_o' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] ../../hdl/AXI_PMU.sv:11: compiling module 'AXI_PMU'
VERIFIC-INFO [VERI-1018] ../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:24: compiling module 'AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'
VERIFIC-INFO [VERI-1018] ../../submodules/MCCU/hdl/MCCU.sv:21: compiling module 'MCCU(N_CORES=4)'
VERIFIC-INFO [VERI-1018] ../../submodules/RDC/hdl/RDC.sv:18: compiling module 'RDC(CORE_EVENTS=4)'
Importing module AXI_PMU.
Importing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Importing module MCCU(N_CORES=4).
Importing module RDC(CORE_EVENTS=4).

7. Executing PREP pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \AXI_PMU
Used module:     \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)
Used module:         \RDC(CORE_EVENTS=4)
Used module:         \MCCU(N_CORES=4)

7.1.2. Analyzing design hierarchy..
Top module:  \AXI_PMU
Used module:     \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)
Used module:         \RDC(CORE_EVENTS=4)
Used module:         \MCCU(N_CORES=4)
Removed 0 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.2.3. Executing PROC_INIT pass (extract init attributes).

7.2.4. Executing PROC_ARST pass (detect async resets in processes).

7.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

7.2.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module RDC(CORE_EVENTS=4).
Optimizing module MCCU(N_CORES=4).
<suppressed ~4 debug messages>
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
<suppressed ~40 debug messages>
Optimizing module AXI_PMU.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \AXI_PMU..
Removed 23 unused cells and 720 unused wires.
<suppressed ~88 debug messages>

7.5. Executing CHECK pass (checking for obvious problems).
checking module AXI_PMU..
checking module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
checking module MCCU(N_CORES=4)..
checking module RDC(CORE_EVENTS=4)..
found and reported 0 problems.

7.6. Executing OPT pass (performing simple optimizations).

7.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

7.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$i1011$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$886.
    dead port 1/2 on $mux $verific$i1012$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$887.
    dead port 1/2 on $mux $verific$i1013$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$888.
    dead port 1/2 on $mux $verific$i1014$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$889.
    dead port 1/2 on $mux $verific$i1015$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$890.
    dead port 1/2 on $mux $verific$i1016$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$891.
    dead port 1/2 on $mux $verific$i1017$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$892.
    dead port 1/2 on $mux $verific$i1018$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$893.
    dead port 1/2 on $mux $verific$i1019$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$894.
    dead port 1/2 on $mux $verific$i1020$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$895.
    dead port 1/2 on $mux $verific$i1021$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$896.
    dead port 1/2 on $mux $verific$i1022$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$897.
    dead port 1/2 on $mux $verific$i1023$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$898.
    dead port 1/2 on $mux $verific$i1024$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$899.
    dead port 1/2 on $mux $verific$i1025$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$900.
    dead port 1/2 on $mux $verific$i1026$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$901.
    dead port 1/2 on $mux $verific$i1027$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$902.
    dead port 1/2 on $mux $verific$i1045$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$906.
    dead port 1/2 on $mux $verific$i1046$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$907.
    dead port 1/2 on $mux $verific$i1047$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$908.
    dead port 1/2 on $mux $verific$i1048$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$909.
    dead port 1/2 on $mux $verific$i1049$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$910.
    dead port 1/2 on $mux $verific$i1050$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$911.
    dead port 1/2 on $mux $verific$i1051$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$912.
    dead port 1/2 on $mux $verific$i1052$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$913.
    dead port 1/2 on $mux $verific$i1053$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$914.
    dead port 1/2 on $mux $verific$i1054$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$915.
    dead port 1/2 on $mux $verific$i1055$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$916.
    dead port 1/2 on $mux $verific$i1056$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$917.
    dead port 1/2 on $mux $verific$i1057$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$918.
    dead port 1/2 on $mux $verific$i1058$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$919.
    dead port 1/2 on $mux $verific$i1059$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$920.
    dead port 1/2 on $mux $verific$i1060$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$921.
    dead port 1/2 on $mux $verific$i1079$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$925.
    dead port 1/2 on $mux $verific$i1080$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$926.
    dead port 1/2 on $mux $verific$i1081$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$927.
    dead port 1/2 on $mux $verific$i1082$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$928.
    dead port 1/2 on $mux $verific$i1083$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$929.
    dead port 1/2 on $mux $verific$i1084$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$930.
    dead port 1/2 on $mux $verific$i1085$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$931.
    dead port 1/2 on $mux $verific$i1086$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$932.
    dead port 1/2 on $mux $verific$i1087$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$933.
    dead port 1/2 on $mux $verific$i1088$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$934.
    dead port 1/2 on $mux $verific$i1089$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$935.
    dead port 1/2 on $mux $verific$i1090$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$936.
    dead port 1/2 on $mux $verific$i1091$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$937.
    dead port 1/2 on $mux $verific$i1092$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$938.
    dead port 1/2 on $mux $verific$i1093$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$939.
    dead port 1/2 on $mux $verific$i1113$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$943.
    dead port 1/2 on $mux $verific$i1114$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$944.
    dead port 1/2 on $mux $verific$i1115$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$945.
    dead port 1/2 on $mux $verific$i1116$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$946.
    dead port 1/2 on $mux $verific$i1117$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$947.
    dead port 1/2 on $mux $verific$i1118$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$948.
    dead port 1/2 on $mux $verific$i1119$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$949.
    dead port 1/2 on $mux $verific$i1120$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$950.
    dead port 1/2 on $mux $verific$i1121$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$951.
    dead port 1/2 on $mux $verific$i1122$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$952.
    dead port 1/2 on $mux $verific$i1123$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$953.
    dead port 1/2 on $mux $verific$i1124$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$954.
    dead port 1/2 on $mux $verific$i1125$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$955.
    dead port 1/2 on $mux $verific$i1126$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$956.
    dead port 1/2 on $mux $verific$i1147$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$960.
    dead port 1/2 on $mux $verific$i1148$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$961.
    dead port 1/2 on $mux $verific$i1149$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$962.
    dead port 1/2 on $mux $verific$i1150$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$963.
    dead port 1/2 on $mux $verific$i1151$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$964.
    dead port 1/2 on $mux $verific$i1152$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$965.
    dead port 1/2 on $mux $verific$i1153$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$966.
    dead port 1/2 on $mux $verific$i1154$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$967.
    dead port 1/2 on $mux $verific$i1155$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$968.
    dead port 1/2 on $mux $verific$i1156$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$969.
    dead port 1/2 on $mux $verific$i1157$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$970.
    dead port 1/2 on $mux $verific$i1158$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$971.
    dead port 1/2 on $mux $verific$i1159$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$972.
    dead port 1/2 on $mux $verific$i1181$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$976.
    dead port 1/2 on $mux $verific$i1182$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$977.
    dead port 1/2 on $mux $verific$i1183$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$978.
    dead port 1/2 on $mux $verific$i1184$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$979.
    dead port 1/2 on $mux $verific$i1185$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$980.
    dead port 1/2 on $mux $verific$i1186$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$981.
    dead port 1/2 on $mux $verific$i1187$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$982.
    dead port 1/2 on $mux $verific$i1188$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$983.
    dead port 1/2 on $mux $verific$i1189$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$984.
    dead port 1/2 on $mux $verific$i1190$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$985.
    dead port 1/2 on $mux $verific$i1191$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$986.
    dead port 1/2 on $mux $verific$i1192$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$987.
    dead port 1/2 on $mux $verific$i1215$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$991.
    dead port 1/2 on $mux $verific$i1216$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$992.
    dead port 1/2 on $mux $verific$i1217$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$993.
    dead port 1/2 on $mux $verific$i1218$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$994.
    dead port 1/2 on $mux $verific$i1219$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$995.
    dead port 1/2 on $mux $verific$i1220$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$996.
    dead port 1/2 on $mux $verific$i1221$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$997.
    dead port 1/2 on $mux $verific$i1222$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$998.
    dead port 1/2 on $mux $verific$i1223$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$999.
    dead port 1/2 on $mux $verific$i1224$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1000.
    dead port 1/2 on $mux $verific$i1225$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1001.
    dead port 1/2 on $mux $verific$i1249$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1005.
    dead port 1/2 on $mux $verific$i1250$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1006.
    dead port 1/2 on $mux $verific$i1251$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1007.
    dead port 1/2 on $mux $verific$i1252$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1008.
    dead port 1/2 on $mux $verific$i1253$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1009.
    dead port 1/2 on $mux $verific$i1254$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1010.
    dead port 1/2 on $mux $verific$i1255$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1011.
    dead port 1/2 on $mux $verific$i1256$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1012.
    dead port 1/2 on $mux $verific$i1257$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1013.
    dead port 1/2 on $mux $verific$i1258$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1014.
    dead port 1/2 on $mux $verific$i1283$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1018.
    dead port 1/2 on $mux $verific$i1284$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1019.
    dead port 1/2 on $mux $verific$i1285$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1020.
    dead port 1/2 on $mux $verific$i1286$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1021.
    dead port 1/2 on $mux $verific$i1287$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1022.
    dead port 1/2 on $mux $verific$i1288$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1023.
    dead port 1/2 on $mux $verific$i1289$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1024.
    dead port 1/2 on $mux $verific$i1290$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1025.
    dead port 1/2 on $mux $verific$i1291$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1026.
    dead port 1/2 on $mux $verific$i1317$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1030.
    dead port 1/2 on $mux $verific$i1318$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1031.
    dead port 1/2 on $mux $verific$i1319$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1032.
    dead port 1/2 on $mux $verific$i1320$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1033.
    dead port 1/2 on $mux $verific$i1321$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1034.
    dead port 1/2 on $mux $verific$i1322$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1035.
    dead port 1/2 on $mux $verific$i1323$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1036.
    dead port 1/2 on $mux $verific$i1324$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1037.
    dead port 1/2 on $mux $verific$i1351$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1041.
    dead port 1/2 on $mux $verific$i1352$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1042.
    dead port 1/2 on $mux $verific$i1353$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1043.
    dead port 1/2 on $mux $verific$i1354$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1044.
    dead port 1/2 on $mux $verific$i1355$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1045.
    dead port 1/2 on $mux $verific$i1356$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1046.
    dead port 1/2 on $mux $verific$i1357$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1047.
    dead port 1/2 on $mux $verific$i1385$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1051.
    dead port 1/2 on $mux $verific$i1386$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1052.
    dead port 1/2 on $mux $verific$i1387$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1053.
    dead port 1/2 on $mux $verific$i1388$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1054.
    dead port 1/2 on $mux $verific$i1389$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1055.
    dead port 1/2 on $mux $verific$i1390$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1056.
    dead port 1/2 on $mux $verific$i1419$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1060.
    dead port 1/2 on $mux $verific$i1420$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1061.
    dead port 1/2 on $mux $verific$i1421$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1062.
    dead port 1/2 on $mux $verific$i1422$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1063.
    dead port 1/2 on $mux $verific$i1423$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1064.
    dead port 1/2 on $mux $verific$i1453$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1068.
    dead port 1/2 on $mux $verific$i1454$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1069.
    dead port 1/2 on $mux $verific$i1455$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1070.
    dead port 1/2 on $mux $verific$i1456$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1071.
    dead port 1/2 on $mux $verific$i1487$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1075.
    dead port 1/2 on $mux $verific$i1488$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1076.
    dead port 1/2 on $mux $verific$i1489$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1077.
    dead port 1/2 on $mux $verific$i1521$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1081.
    dead port 1/2 on $mux $verific$i1522$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1082.
    dead port 1/2 on $mux $verific$i1555$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1086.
    dead port 1/2 on $mux $verific$i977$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$865.
    dead port 1/2 on $mux $verific$i978$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$866.
    dead port 1/2 on $mux $verific$i979$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$867.
    dead port 1/2 on $mux $verific$i980$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$868.
    dead port 1/2 on $mux $verific$i981$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$869.
    dead port 1/2 on $mux $verific$i982$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$870.
    dead port 1/2 on $mux $verific$i983$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$871.
    dead port 1/2 on $mux $verific$i984$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$872.
    dead port 1/2 on $mux $verific$i985$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$873.
    dead port 1/2 on $mux $verific$i986$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$874.
    dead port 1/2 on $mux $verific$i987$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$875.
    dead port 1/2 on $mux $verific$i988$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$876.
    dead port 1/2 on $mux $verific$i989$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$877.
    dead port 1/2 on $mux $verific$i990$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$878.
    dead port 1/2 on $mux $verific$i991$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$879.
    dead port 1/2 on $mux $verific$i992$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$880.
    dead port 1/2 on $mux $verific$i993$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$881.
    dead port 1/2 on $mux $verific$i994$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$882.
    dead port 1/2 on $mux $verific$mux_7877$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1089.
    dead port 1/2 on $mux $verific$mux_7878$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1085.
    dead port 1/2 on $mux $verific$mux_7879$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1080.
    dead port 1/2 on $mux $verific$mux_7880$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1074.
    dead port 1/2 on $mux $verific$mux_7881$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1067.
    dead port 1/2 on $mux $verific$mux_7882$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1059.
    dead port 1/2 on $mux $verific$mux_7883$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1050.
    dead port 1/2 on $mux $verific$mux_7884$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1040.
    dead port 1/2 on $mux $verific$mux_7885$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1029.
    dead port 1/2 on $mux $verific$mux_7886$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1017.
    dead port 1/2 on $mux $verific$mux_7887$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1004.
    dead port 1/2 on $mux $verific$mux_7888$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$990.
    dead port 1/2 on $mux $verific$mux_7889$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$975.
    dead port 1/2 on $mux $verific$mux_7890$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$959.
    dead port 1/2 on $mux $verific$mux_7891$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$942.
    dead port 1/2 on $mux $verific$mux_7892$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$924.
    dead port 1/2 on $mux $verific$mux_7893$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$905.
    dead port 1/2 on $mux $verific$mux_7894$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$885.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 189 multiplexer ports.
<suppressed ~137 debug messages>

7.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
    New input vector for $reduce_or cell $verific$reduce_or_6262$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:609$1373: { \slv_reg[24] [0] \slv_reg[24] [1] \slv_reg[24] [2] \slv_reg[24] [3] \slv_reg[24] [4] \slv_reg[24] [5] \slv_reg[24] [6] \slv_reg[24] [7] \slv_reg[24] [8] \slv_reg[24] [9] \slv_reg[24] [10] \slv_reg[24] [11] \slv_reg[24] [12] \slv_reg[24] [13] \slv_reg[24] [14] \slv_reg[24] [15] \slv_reg[24] [16] \slv_reg[24] [17] \slv_reg[24] [18] \slv_reg[24] [19] \slv_reg[24] [20] \slv_reg[24] [21] \slv_reg[24] [22] \slv_reg[24] [23] \slv_reg[24] [24] \slv_reg[24] [25] \slv_reg[24] [26] \slv_reg[24] [27] \slv_reg[24] [28] \slv_reg[24] [29] \slv_reg[24] [30] \slv_reg[24] [31] }
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
    New input vector for $reduce_or cell $verific$reduce_or_662$../../submodules/RDC/hdl/RDC.sv:140$2568: { \interruption_vector_int[0] [0] \interruption_vector_int[0] [1] \interruption_vector_int[0] [2] \interruption_vector_int[0] [3] \interruption_vector_int[1] [0] \interruption_vector_int[1] [1] \interruption_vector_int[1] [2] \interruption_vector_int[1] [3] \interruption_vector_int[2] [0] \interruption_vector_int[2] [1] \interruption_vector_int[2] [2] \interruption_vector_int[2] [3] \interruption_vector_int[3] [0] \interruption_vector_int[3] [1] \interruption_vector_int[3] [2] \interruption_vector_int[3] [3] }
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 2 changes.

7.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \q_2 = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Promoting init spec \q = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Promoting init spec \generated_overflow.j = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Promoting init spec \generated_overflow.overflow_bit.a = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Promoting init spec \generated_int_overflow.j = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Promoting init spec \i = 0 to constant driver in module RDC(CORE_EVENTS=4).
Promoted 6 init specs to constant drivers.

7.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..
Removed 0 unused cells and 206 unused wires.
<suppressed ~1 debug messages>

7.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

7.6.9. Rerunning OPT passes. (Maybe there is more to do..)

7.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

7.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 0 changes.

7.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

7.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

7.6.16. Finished OPT passes. (There is nothing left to do.)

7.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$LessThan_3607$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:541$1188 ($lt).
Removed top 4 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3610$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1191 ($eq).
Removed top 3 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3612$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1193 ($eq).
Removed top 3 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3614$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1195 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3616$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1197 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3618$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1199 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3620$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1201 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3622$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1203 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3624$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1205 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3626$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1207 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3628$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1209 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3630$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1211 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3632$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1213 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3634$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1215 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3636$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1217 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$equal_3638$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1219 ($eq).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_3683$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1259 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_3815$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1265 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_3947$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1271 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_4079$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1277 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_4211$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1283 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_4343$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1289 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_4475$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1295 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_4607$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1301 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_4739$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1307 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_4871$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1313 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5003$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1319 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5135$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1325 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5267$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1331 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5399$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1337 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5531$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1343 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5663$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1349 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5795$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1355 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_5927$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1361 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6059$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1367 ($add).
Removed top 32 bits (of 64) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$LessThan_6343$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:647$1415 ($lt).
Removed top 14 bits (of 64) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$LessThan_6343$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:647$1415 ($lt).
Removed top 1 bits (of 33) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6346$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1418 ($add).
Removed top 2 bits (of 34) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6347$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1419 ($add).
Removed top 3 bits (of 35) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6348$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1420 ($add).
Removed top 4 bits (of 36) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6349$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1421 ($add).
Removed top 5 bits (of 37) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6350$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1422 ($add).
Removed top 6 bits (of 38) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6351$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1423 ($add).
Removed top 7 bits (of 39) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6352$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1424 ($add).
Removed top 8 bits (of 40) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6353$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1425 ($add).
Removed top 9 bits (of 41) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6354$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1426 ($add).
Removed top 10 bits (of 42) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6355$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1427 ($add).
Removed top 11 bits (of 43) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6356$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1428 ($add).
Removed top 12 bits (of 44) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6357$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1429 ($add).
Removed top 13 bits (of 45) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6358$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1430 ($add).
Removed top 14 bits (of 46) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6359$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1431 ($add).
Removed top 15 bits (of 47) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6360$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1432 ($add).
Removed top 16 bits (of 48) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6361$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1433 ($add).
Removed top 17 bits (of 49) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).$verific$add_6362$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1434 ($add).
Removed top 27 bits (of 32) from wire AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).decode_read.read_address.
Removed top 14 bits (of 64) from wire AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).generated_quota.suma.
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_114$../../submodules/MCCU/hdl/MCCU.sv:185$2135 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_251$../../submodules/MCCU/hdl/MCCU.sv:198$2139 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_526$../../submodules/MCCU/hdl/MCCU.sv:185$2150 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_663$../../submodules/MCCU/hdl/MCCU.sv:198$2154 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_938$../../submodules/MCCU/hdl/MCCU.sv:185$2165 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_1075$../../submodules/MCCU/hdl/MCCU.sv:198$2169 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_1350$../../submodules/MCCU/hdl/MCCU.sv:185$2180 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4).$verific$LessThan_1487$../../submodules/MCCU/hdl/MCCU.sv:198$2183 ($lt).
Removed top 1 bits (of 9) from port A of cell MCCU(N_CORES=4).$verific$add_1654$../../submodules/MCCU/hdl/MCCU.sv:220$2191 ($add).
Removed top 2 bits (of 10) from port A of cell MCCU(N_CORES=4).$verific$add_1655$../../submodules/MCCU/hdl/MCCU.sv:220$2192 ($add).
Removed top 1 bits (of 9) from port A of cell MCCU(N_CORES=4).$verific$add_1657$../../submodules/MCCU/hdl/MCCU.sv:220$2194 ($add).
Removed top 2 bits (of 10) from port A of cell MCCU(N_CORES=4).$verific$add_1658$../../submodules/MCCU/hdl/MCCU.sv:220$2195 ($add).
Removed top 1 bits (of 9) from port A of cell MCCU(N_CORES=4).$verific$add_1660$../../submodules/MCCU/hdl/MCCU.sv:220$2197 ($add).
Removed top 2 bits (of 10) from port A of cell MCCU(N_CORES=4).$verific$add_1661$../../submodules/MCCU/hdl/MCCU.sv:220$2198 ($add).
Removed top 1 bits (of 9) from port A of cell MCCU(N_CORES=4).$verific$add_1663$../../submodules/MCCU/hdl/MCCU.sv:220$2200 ($add).
Removed top 2 bits (of 10) from port A of cell MCCU(N_CORES=4).$verific$add_1664$../../submodules/MCCU/hdl/MCCU.sv:220$2201 ($add).
Removed top 53 bits (of 256) from FF cell MCCU(N_CORES=4).$verific$ccc_suma_int_reg$../../submodules/MCCU/hdl/MCCU.sv:247$2206 ($dff).
Removed top 53 bits (of 64) from port B of cell MCCU(N_CORES=4).$verific$LessThan_114$../../submodules/MCCU/hdl/MCCU.sv:185$2135 ($lt).
Removed top 21 bits (of 32) from port B of cell MCCU(N_CORES=4).$verific$sub_115$../../submodules/MCCU/hdl/MCCU.sv:189$2136 ($sub).
Removed top 53 bits (of 64) from port B of cell MCCU(N_CORES=4).$verific$LessThan_251$../../submodules/MCCU/hdl/MCCU.sv:198$2139 ($lt).
Removed top 21 bits (of 32) from port B of cell MCCU(N_CORES=4).$verific$sub_252$../../submodules/MCCU/hdl/MCCU.sv:202$2140 ($sub).
Removed top 53 bits (of 64) from wire MCCU(N_CORES=4).ccc_suma_int[0].
Removed top 1 bits (of 8) from wire MCCU(N_CORES=4).events_weights_int[3][3].
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_7$../../submodules/RDC/hdl/RDC.sv:79$2418 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_44$../../submodules/RDC/hdl/RDC.sv:79$2425 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_81$../../submodules/RDC/hdl/RDC.sv:79$2432 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_118$../../submodules/RDC/hdl/RDC.sv:79$2439 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_155$../../submodules/RDC/hdl/RDC.sv:79$2446 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_192$../../submodules/RDC/hdl/RDC.sv:79$2453 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_229$../../submodules/RDC/hdl/RDC.sv:79$2460 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_266$../../submodules/RDC/hdl/RDC.sv:79$2467 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_303$../../submodules/RDC/hdl/RDC.sv:79$2474 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_340$../../submodules/RDC/hdl/RDC.sv:79$2481 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_377$../../submodules/RDC/hdl/RDC.sv:79$2488 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_414$../../submodules/RDC/hdl/RDC.sv:79$2495 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_451$../../submodules/RDC/hdl/RDC.sv:79$2502 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_488$../../submodules/RDC/hdl/RDC.sv:79$2509 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_525$../../submodules/RDC/hdl/RDC.sv:79$2516 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(CORE_EVENTS=4).$verific$add_562$../../submodules/RDC/hdl/RDC.sv:79$2523 ($add).

7.8. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

7.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..
Removed 0 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

7.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.11. Executing OPT pass (performing simple optimizations).

7.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

7.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

7.11.5. Finished fast OPT passes.

7.12. Printing statistics.

=== AXI_PMU ===

   Number of wires:                 45
   Number of wire bits:            145
   Number of public wires:          45
   Number of public wire bits:     145
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)      1

=== AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4) ===

   Number of wires:                544
   Number of wire bits:          10061
   Number of public wires:         153
   Number of public wire bits:    3222
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                466
     $add                           37
     $and                           56
     $dff                           47
     $eq                            63
     $logic_not                      1
     $lt                             2
     $mux                          248
     $not                            7
     $or                             2
     $reduce_or                      1
     MCCU(N_CORES=4)                 1
     RDC(CORE_EVENTS=4)              1

=== MCCU(N_CORES=4) ===

   Number of wires:                124
   Number of wire bits:           2509
   Number of public wires:          36
   Number of public wire bits:     997
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $add                           12
     $and                           16
     $dff                            2
     $lt                             8
     $mux                           43
     $not                            5
     $sub                            8

=== RDC(CORE_EVENTS=4) ===

   Number of wires:                232
   Number of wire bits:           1624
   Number of public wires:          47
   Number of public wire bits:     613
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                233
     $add                           16
     $and                           16
     $dff                           34
     $eq                            16
     $le                            16
     $lt                            16
     $mux                          116
     $or                             2
     $reduce_or                      1

=== design hierarchy ===

   AXI_PMU                           1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)      1
       MCCU(N_CORES=4)               1
       RDC(CORE_EVENTS=4)            1

   Number of wires:                945
   Number of wire bits:          14339
   Number of public wires:         281
   Number of public wire bits:    4977
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                791
     $add                           65
     $and                           88
     $dff                           83
     $eq                            79
     $le                            16
     $logic_not                      1
     $lt                            26
     $mux                          407
     $not                           12
     $or                             4
     $reduce_or                      2
     $sub                            8

7.13. Executing CHECK pass (checking for obvious problems).
checking module AXI_PMU..
checking module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
checking module MCCU(N_CORES=4)..
checking module RDC(CORE_EVENTS=4)..
found and reported 0 problems.

8. Executing PROC pass (convert processes to netlists).

8.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.3. Executing PROC_INIT pass (extract init attributes).

8.4. Executing PROC_ARST pass (detect async resets in processes).

8.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.6. Executing PROC_DLATCH pass (convert process syncs to latches).

8.7. Executing PROC_DFF pass (convert process syncs to FFs).

8.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $verific$slv_reg[32]_reg$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:429$1122 ($dff) from module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Removing $verific$slv_reg[33]_reg$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:429$1123 ($dff) from module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Removing $verific$slv_reg[34]_reg$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:429$1124 ($dff) from module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Removing $verific$slv_reg[35]_reg$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:429$1125 ($dff) from module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Replaced 4 DFF cells.

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

9.9. Rerunning OPT passes. (Maybe there is more to do..)

9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~133 debug messages>

9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 0 changes.

9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

9.13. Executing OPT_RMDFF pass (remove dff with constant values).

9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

9.16. Finished OPT passes. (There is nothing left to do.)

10. Executing FSM pass (extract and optimize FSM).

10.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).axi_bresp as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).axi_rresp as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~133 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 0 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

11.6. Executing OPT_RMDFF pass (remove dff with constant values).

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

11.9. Finished OPT passes. (There is nothing left to do.)

12. Executing MEMORY pass.

12.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

12.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

12.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

12.5. Executing MEMORY_COLLECT pass (generating $mem cells).

12.6. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~133 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

13.6. Executing OPT_RMDFF pass (remove dff with constant values).

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

13.9. Finished OPT passes. (There is nothing left to do.)

14. Executing TECHMAP pass (map to technology primitives).

14.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=34 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=34\Y_WIDTH=35 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=35\Y_WIDTH=36 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=36\Y_WIDTH=37 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=37\Y_WIDTH=38 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=38\Y_WIDTH=39 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=39\Y_WIDTH=40 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=40\Y_WIDTH=41 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=41\Y_WIDTH=42 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=42\Y_WIDTH=43 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=43\Y_WIDTH=44 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=44\Y_WIDTH=45 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=45\Y_WIDTH=46 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=46\Y_WIDTH=47 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=47\Y_WIDTH=48 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=48\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=49\Y_WIDTH=50 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=50\Y_WIDTH=50 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=34 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=35 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=36 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=37 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=38 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=39 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=40 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=41 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=42 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=43 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=44 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=45 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=46 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=47 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=48 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=49 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=50 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=11\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=9\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=64 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
No more expansions possible.
<suppressed ~18794 debug messages>

15. Executing OPT pass (performing simple optimizations).

15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
<suppressed ~6879 debug messages>
Optimizing module MCCU(N_CORES=4).
<suppressed ~2677 debug messages>
Optimizing module RDC(CORE_EVENTS=4).
<suppressed ~1264 debug messages>

15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
<suppressed ~669 debug messages>
Finding identical cells in module `\MCCU(N_CORES=4)'.
<suppressed ~7098 debug messages>
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
<suppressed ~1008 debug messages>
Removed a total of 2925 cells.

15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 0 changes.

15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

15.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$32813 ($_DFF_P_) from module MCCU(N_CORES=4).
Replaced 1 DFF cells.

15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..
Removed 2875 unused cells and 7207 unused wires.
<suppressed ~2878 debug messages>

15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
<suppressed ~138 debug messages>
Optimizing module RDC(CORE_EVENTS=4).

15.9. Rerunning OPT passes. (Maybe there is more to do..)

15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MCCU(N_CORES=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC(CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
  Optimizing cells in module \MCCU(N_CORES=4).
  Optimizing cells in module \RDC(CORE_EVENTS=4).
Performed a total of 0 changes.

15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Finding identical cells in module `\MCCU(N_CORES=4)'.
Finding identical cells in module `\RDC(CORE_EVENTS=4)'.
Removed a total of 0 cells.

15.13. Executing OPT_RMDFF pass (remove dff with constant values).

15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)..
Finding unused cells or wires in module \MCCU(N_CORES=4)..
Finding unused cells or wires in module \RDC(CORE_EVENTS=4)..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4).
Optimizing module MCCU(N_CORES=4).
Optimizing module RDC(CORE_EVENTS=4).

15.16. Finished OPT passes. (There is nothing left to do.)

16. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=10.32) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\AXI_PMU':
Mapping DFF cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)':
  mapped 1076 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\MCCU(N_CORES=4)':
  mapped 172 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\RDC(CORE_EVENTS=4)':
  mapped 273 $_DFF_P_ cells to \DFFPOSX1 cells.

17. Executing ABC pass (technology mapping using ABC).

17.1. Extracting gate netlist of module `\AXI_PMU' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

17.2. Extracting gate netlist of module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)' to `<abc-temp-dir>/input.blif'..
Extracted 13752 gates and 14901 wires to a netlist network with 1147 inputs and 1079 outputs.

17.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   9290 (  9.5 %)   Cap =  5.7 ff (  7.4 %)   Area =    25695.58 ( 85.3 %)   Delay =  4746.06 ps  ( 13.2 %)               
ABC: Path  0 --      73 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    2234 : 1    8 BUFX4   A =   2.82  Df =  59.3  -17.5 ps  S =  31.9 ps  Cin =  3.9 ff  Cout =  24.0 ff  Cmax = 999.3 ff  G =  594  
ABC: Path  2 --    2822 : 1    7 INVX8   A =   3.29  Df =  75.5   -9.6 ps  S =  14.3 ps  Cin = 10.1 ff  Cout =  16.1 ff  Cmax =2082.0 ff  G =  158  
ABC: Path  3 --    7387 : 3   10 NOR3X1  A =   2.82  Df = 163.7  -31.4 ps  S = 133.4 ps  Cin =  3.1 ff  Cout =  19.8 ff  Cmax =  96.9 ff  G =  623  
ABC: Path  4 --    7433 : 2    3 NAND2X1 A =   1.88  Df = 219.3  -28.0 ps  S =  69.5 ps  Cin =  2.0 ff  Cout =  10.3 ff  Cmax =   0.0 ff  G =  502  
ABC: Path  5 --    7499 : 2    2 OR2X2   A =   2.82  Df = 274.3  -23.9 ps  S =  28.0 ps  Cin =  2.3 ff  Cout =   7.7 ff  Cmax = 519.7 ff  G =  323  
ABC: Path  6 --    7502 : 3    2 OAI21X1 A =   2.82  Df = 335.2  -56.6 ps  S =  67.9 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path  7 --    7505 : 3    2 AOI21X1 A =   2.82  Df = 374.4  -37.1 ps  S =  56.7 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path  8 --    7507 : 3    2 OAI21X1 A =   2.82  Df = 436.2  -64.5 ps  S =  67.1 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path  9 --    7541 : 2    4 XNOR2X1 A =   4.69  Df = 510.9  -22.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.3 ff  Cmax = 228.3 ff  G =  235  
ABC: Path 10 --    7542 : 2    2 XOR2X1  A =   4.69  Df = 587.0  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 11 --    7653 : 2    4 XNOR2X1 A =   4.69  Df = 675.1  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 12 --    7654 : 2    2 XOR2X1  A =   4.69  Df = 751.3  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 13 --    7810 : 2    4 XNOR2X1 A =   4.69  Df = 837.8  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 14 --    7811 : 2    2 XOR2X1  A =   4.69  Df = 913.7  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 15 --    7927 : 2    4 XNOR2X1 A =   4.69  Df =1000.3  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 16 --    7928 : 2    2 XOR2X1  A =   4.69  Df =1076.2  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 17 --    8173 : 2    4 XNOR2X1 A =   4.69  Df =1164.3  -32.8 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 18 --    8174 : 2    2 XOR2X1  A =   4.69  Df =1240.4  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 19 --    8318 : 2    4 XNOR2X1 A =   4.69  Df =1327.0  -31.3 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 20 --    8599 : 2    2 XOR2X1  A =   4.69  Df =1402.9  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 21 --    8670 : 2    4 XNOR2X1 A =   4.69  Df =1491.0  -31.1 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 22 --    8671 : 2    2 XOR2X1  A =   4.69  Df =1567.2  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 23 --    8836 : 2    4 XNOR2X1 A =   4.69  Df =1655.2  -31.1 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 24 --    8837 : 2    2 XOR2X1  A =   4.69  Df =1731.4  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 25 --    9094 : 2    4 XNOR2X1 A =   4.69  Df =1819.4  -31.1 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 26 --    9354 : 2    2 XOR2X1  A =   4.69  Df =1895.6  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 27 --    9392 : 2    4 XNOR2X1 A =   4.69  Df =1982.1  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 28 --    9542 : 2    2 XOR2X1  A =   4.69  Df =2058.1  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 29 --    9574 : 2    4 XNOR2X1 A =   4.69  Df =2146.1  -29.3 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 30 --    9575 : 2    2 XOR2X1  A =   4.69  Df =2222.3  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 31 --    9789 : 2    4 XNOR2X1 A =   4.69  Df =2310.4  -29.3 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 32 --    9790 : 2    2 XOR2X1  A =   4.69  Df =2386.6  -25.5 ps  S =  71.3 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 33 --   10088 : 2    4 XNOR2X1 A =   4.69  Df =2473.1  -27.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 34 --   10089 : 2    2 XOR2X1  A =   4.69  Df =2549.1  -25.6 ps  S =  71.3 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 35 --   10303 : 2    4 XNOR2X1 A =   4.69  Df =2635.6  -25.9 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 36 --   10304 : 2    2 XOR2X1  A =   4.69  Df =2711.6  -25.6 ps  S =  71.3 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 37 --   10518 : 2    4 XNOR2X1 A =   4.69  Df =2799.7  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 38 --   10519 : 2    2 XOR2X1  A =   4.69  Df =2875.9  -25.5 ps  S =  71.3 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 39 --   10739 : 2    4 XNOR2X1 A =   4.69  Df =2962.4  -24.2 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 40 --   10740 : 2    2 XOR2X1  A =   4.69  Df =3038.4  -25.6 ps  S =  71.3 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 41 --   10742 : 3    2 AOI21X1 A =   2.82  Df =3086.7  -17.7 ps  S =  56.5 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 42 --   10744 : 3    2 OAI21X1 A =   2.82  Df =3150.3  -46.1 ps  S =  71.5 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 43 --   10746 : 3    2 AOI21X1 A =   2.82  Df =3193.4  -48.2 ps  S =  39.4 ps  Cin =  2.6 ff  Cout =   4.8 ff  Cmax =   0.0 ff  G =  182  
ABC: Path 44 --   10748 : 3    2 OAI21X1 A =   2.82  Df =3253.4  -77.6 ps  S =  67.1 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path 45 --   10755 : 3    2 AOI21X1 A =   2.82  Df =3292.4  -43.1 ps  S =  56.7 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 46 --   10757 : 3    2 OAI21X1 A =   2.82  Df =3356.1  -71.6 ps  S =  71.5 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 47 --   10759 : 3    2 AOI21X1 A =   2.82  Df =3404.5  -44.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 48 --   10761 : 3    2 OAI21X1 A =   2.82  Df =3468.1  -72.3 ps  S =  71.5 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 49 --   10763 : 3    2 AOI21X1 A =   2.82  Df =3516.4  -44.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 50 --   10765 : 3    2 OAI21X1 A =   2.82  Df =3580.0  -72.3 ps  S =  71.5 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 51 --   10767 : 3    2 AOI21X1 A =   2.82  Df =3628.4  -44.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 52 --   10769 : 3    2 OAI21X1 A =   2.82  Df =3690.1  -71.4 ps  S =  68.9 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path 53 --   10776 : 3    2 AOI21X1 A =   2.82  Df =3729.5  -43.3 ps  S =  56.7 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 54 --   10778 : 3    2 OAI21X1 A =   2.82  Df =3793.2  -71.8 ps  S =  71.5 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 55 --   10780 : 3    2 AOI21X1 A =   2.82  Df =3841.6  -44.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 56 --   10782 : 3    2 OAI21X1 A =   2.82  Df =3905.2  -72.3 ps  S =  71.5 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 57 --   10784 : 3    2 AOI21X1 A =   2.82  Df =3953.5  -44.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 58 --   10786 : 3    2 OAI21X1 A =   2.82  Df =4017.1  -72.3 ps  S =  71.5 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 59 --   10788 : 3    2 AOI21X1 A =   2.82  Df =4065.5  -44.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 60 --   10790 : 3    2 OAI21X1 A =   2.82  Df =4129.3  -72.4 ps  S =  71.9 ps  Cin =  2.5 ff  Cout =   8.4 ff  Cmax = 229.4 ff  G =  329  
ABC: Path 61 --   10792 : 3    2 AOI21X1 A =   2.82  Df =4177.8  -11.7 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 62 --   10794 : 3    2 OAI21X1 A =   2.82  Df =4241.6  -40.1 ps  S =  70.8 ps  Cin =  2.5 ff  Cout =   8.4 ff  Cmax = 229.4 ff  G =  329  
ABC: Path 63 --   10796 : 3    2 AOI21X1 A =   2.82  Df =4289.1  -28.8 ps  S =  54.1 ps  Cin =  2.6 ff  Cout =   7.8 ff  Cmax =   0.0 ff  G =  293  
ABC: Path 64 --   10798 : 3    2 OAI21X1 A =   2.82  Df =4352.4  -57.5 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 65 --   10806 : 2    2 XNOR2X1 A =   4.69  Df =4426.2  -26.4 ps  S =  66.3 ps  Cin =  5.1 ff  Cout =   8.0 ff  Cmax = 228.3 ff  G =  147  
ABC: Path 66 --   10807 : 2    2 XOR2X1  A =   4.69  Df =4498.5  -25.4 ps  S =  69.1 ps  Cin =  5.3 ff  Cout =   7.7 ff  Cmax = 223.3 ff  G =  141  
ABC: Path 67 --   11016 : 3    2 AOI21X1 A =   2.82  Df =4537.9   -3.4 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 68 --   11258 : 3    2 OAI21X1 A =   2.82  Df =4601.5  -21.1 ps  S =  69.2 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 69 --   11259 : 2    2 XNOR2X1 A =   4.69  Df =4664.9  -20.3 ps  S =  51.1 ps  Cin =  5.1 ff  Cout =   4.9 ff  Cmax = 228.3 ff  G =   93  
ABC: Path 70 --   11261 : 3    1 OAI21X1 A =   2.82  Df =4689.5   -1.3 ps  S =  40.9 ps  Cin =  2.5 ff  Cout =   2.4 ff  Cmax = 229.4 ff  G =   95  
ABC: Path 71 --   11262 : 3    1 AOI21X1 A =   2.82  Df =4709.5   -1.6 ps  S =  29.5 ps  Cin =  2.6 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =  103  
ABC: Path 72 --   11515 : 3    1 OAI21X1 A =   2.82  Df =4746.1   -7.7 ps  S =  31.6 ps  Cin =  2.5 ff  Cout =   0.0 ff  Cmax = 229.4 ff  G =    0  
ABC: Start-point = pi72 (\S_AXI_ARESETN_i).  End-point = po1077 (\int_quota_o).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:     1116
ABC RESULTS:            AND2X2 cells:       11
ABC RESULTS:           AOI21X1 cells:      775
ABC RESULTS:           AOI22X1 cells:      540
ABC RESULTS:             BUFX2 cells:      692
ABC RESULTS:             BUFX4 cells:        1
ABC RESULTS:             INVX1 cells:      189
ABC RESULTS:             INVX8 cells:        1
ABC RESULTS:            MUX2X1 cells:      348
ABC RESULTS:           NAND2X1 cells:     1093
ABC RESULTS:           NAND3X1 cells:      573
ABC RESULTS:            NOR2X1 cells:     1241
ABC RESULTS:            NOR3X1 cells:      397
ABC RESULTS:           OAI21X1 cells:      963
ABC RESULTS:             OR2X1 cells:      249
ABC RESULTS:             OR2X2 cells:        1
ABC RESULTS:           XNOR2X1 cells:      729
ABC RESULTS:            XOR2X1 cells:      371
ABC RESULTS:        internal signals:    12675
ABC RESULTS:           input signals:     1147
ABC RESULTS:          output signals:     1079
Removing temp directory.

17.3. Extracting gate netlist of module `\MCCU(N_CORES=4)' to `<abc-temp-dir>/input.blif'..
Extracted 3679 gates and 4131 wires to a netlist network with 450 inputs and 176 outputs.

17.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   2598 ( 10.8 %)   Cap =  5.2 ff (  6.1 %)   Area =     6765.43 ( 87.7 %)   Delay =   988.96 ps  (  5.5 %)               
ABC: Path  0 --     409 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    2080 : 1    4 BUFX4   A =   2.82  Df =  55.8  -20.6 ps  S =  21.8 ps  Cin =  3.9 ff  Cout =  15.6 ff  Cmax = 999.3 ff  G =  380  
ABC: Path  2 --    2112 : 2    3 XNOR2X1 A =   4.69  Df = 129.9  -31.2 ps  S =  77.4 ps  Cin =  5.1 ff  Cout =  10.2 ff  Cmax = 228.3 ff  G =  195  
ABC: Path  3 --    2254 : 3    2 OAI21X1 A =   2.82  Df = 182.9  -17.3 ps  S =  54.9 ps  Cin =  2.5 ff  Cout =   5.0 ff  Cmax = 229.4 ff  G =  199  
ABC: Path  4 --    2261 : 3    2 NAND3X1 A =   2.35  Df = 207.8   -3.0 ps  S =  49.3 ps  Cin =  2.7 ff  Cout =   5.0 ff  Cmax =   0.0 ff  G =  183  
ABC: Path  5 --    2265 : 3    3 NAND3X1 A =   2.35  Df = 258.1  -25.0 ps  S =  64.0 ps  Cin =  2.7 ff  Cout =   7.9 ff  Cmax =   0.0 ff  G =  292  
ABC: Path  6 --    2288 : 3    2 NAND3X1 A =   2.35  Df = 286.3   -7.6 ps  S =  52.5 ps  Cin =  2.7 ff  Cout =   5.7 ff  Cmax =   0.0 ff  G =  210  
ABC: Path  7 --    2290 : 3    3 NAND3X1 A =   2.35  Df = 334.2  -27.9 ps  S =  58.9 ps  Cin =  2.7 ff  Cout =   7.0 ff  Cmax =   0.0 ff  G =  257  
ABC: Path  8 --    2316 : 3    2 NAND3X1 A =   2.35  Df = 361.2  -10.4 ps  S =  52.6 ps  Cin =  2.7 ff  Cout =   5.7 ff  Cmax =   0.0 ff  G =  210  
ABC: Path  9 --    2317 : 3    3 NAND3X1 A =   2.35  Df = 411.4  -31.9 ps  S =  62.4 ps  Cin =  2.7 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  282  
ABC: Path 10 --    2344 : 3    1 NAND3X1 A =   2.35  Df = 434.7  -18.8 ps  S =  40.1 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  108  
ABC: Path 11 --    2345 : 3    3 NAND3X1 A =   2.35  Df = 484.1  -41.9 ps  S =  63.6 ps  Cin =  2.7 ff  Cout =   7.9 ff  Cmax =   0.0 ff  G =  292  
ABC: Path 12 --    2359 : 3    5 NAND3X1 A =   2.35  Df = 528.4   -8.8 ps  S = 101.0 ps  Cin =  2.7 ff  Cout =  16.0 ff  Cmax =   0.0 ff  G =  585  
ABC: Path 13 --    2386 : 3    4 NOR3X1  A =   2.82  Df = 586.2   -7.8 ps  S =  87.8 ps  Cin =  3.1 ff  Cout =  10.2 ff  Cmax =  96.9 ff  G =  319  
ABC: Path 14 --    2437 : 3    4 NAND3X1 A =   2.35  Df = 653.3  -21.1 ps  S =  90.4 ps  Cin =  2.7 ff  Cout =  13.7 ff  Cmax =   0.0 ff  G =  498  
ABC: Path 15 --    2460 : 3    4 NOR3X1  A =   2.82  Df = 714.1  -16.2 ps  S = 103.5 ps  Cin =  3.1 ff  Cout =  12.9 ff  Cmax =  96.9 ff  G =  399  
ABC: Path 16 --    2482 : 3    7 NAND3X1 A =   2.35  Df = 805.5  -48.8 ps  S = 113.3 ps  Cin =  2.7 ff  Cout =  18.5 ff  Cmax =   0.0 ff  G =  689  
ABC: Path 17 --    2532 : 3    3 NOR3X1  A =   2.82  Df = 869.0  -49.5 ps  S =  92.1 ps  Cin =  3.1 ff  Cout =  11.1 ff  Cmax =  96.9 ff  G =  344  
ABC: Path 18 --    2545 : 2    1 XNOR2X1 A =   4.69  Df = 923.5  -17.4 ps  S =  40.4 ps  Cin =  5.1 ff  Cout =   2.8 ff  Cmax = 228.3 ff  G =   54  
ABC: Path 19 --    2549 : 4    1 AOI22X1 A =   3.29  Df = 959.1  -10.0 ps  S =  47.4 ps  Cin =  2.8 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =   97  
ABC: Path 20 --    2551 : 3    1 AOI21X1 A =   2.82  Df = 989.0  -10.4 ps  S =  16.1 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi408 (\ccc_suma_int[0] [2]).  End-point = po125 ($verific$n3322$2101 [125]).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:      126
ABC RESULTS:           AOI21X1 cells:      304
ABC RESULTS:           AOI22X1 cells:       62
ABC RESULTS:             BUFX2 cells:      116
ABC RESULTS:             BUFX4 cells:        2
ABC RESULTS:             INVX1 cells:      162
ABC RESULTS:             INVX2 cells:        1
ABC RESULTS:           NAND2X1 cells:      568
ABC RESULTS:           NAND3X1 cells:      166
ABC RESULTS:            NOR2X1 cells:      139
ABC RESULTS:            NOR3X1 cells:       83
ABC RESULTS:           OAI21X1 cells:      387
ABC RESULTS:             OR2X1 cells:      187
ABC RESULTS:             OR2X2 cells:        4
ABC RESULTS:           XNOR2X1 cells:      169
ABC RESULTS:            XOR2X1 cells:      118
ABC RESULTS:          _const0_ cells:        4
ABC RESULTS:        internal signals:     3505
ABC RESULTS:           input signals:      450
ABC RESULTS:          output signals:      176
Removing temp directory.

17.4. Extracting gate netlist of module `\RDC(CORE_EVENTS=4)' to `<abc-temp-dir>/input.blif'..
Extracted 2658 gates and 3079 wires to a netlist network with 419 inputs and 274 outputs.

17.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   1714 ( 25.3 %)   Cap =  4.7 ff (  6.2 %)   Area =     4350.88 ( 86.5 %)   Delay =   426.62 ps  ( 10.9 %)               
ABC: Path  0 --     116 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    1106 : 1    5 BUFX4   A =   2.82  Df =  55.8  -21.1 ps  S =  21.1 ps  Cin =  3.9 ff  Cout =  15.1 ff  Cmax = 999.3 ff  G =  373  
ABC: Path  2 --    2331 : 3    1 OAI21X1 A =   2.82  Df = 409.6  -33.6 ps  S =  44.1 ps  Cin =  2.5 ff  Cout =   2.4 ff  Cmax = 229.4 ff  G =   95  
ABC: Path  3 --    2332 : 3    1 AOI21X1 A =   2.82  Df = 426.6  -34.1 ps  S =  16.4 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi115 (\max_value[14] [2]).  End-point = po252 ($verific$n2118$2408 [2]).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:      130
ABC RESULTS:            AND2X2 cells:        6
ABC RESULTS:           AOI21X1 cells:      239
ABC RESULTS:           AOI22X1 cells:      150
ABC RESULTS:             BUFX2 cells:       91
ABC RESULTS:             BUFX4 cells:       30
ABC RESULTS:             INVX1 cells:      311
ABC RESULTS:             INVX2 cells:        2
ABC RESULTS:            MUX2X1 cells:       61
ABC RESULTS:           NAND2X1 cells:      135
ABC RESULTS:           NAND3X1 cells:       84
ABC RESULTS:            NOR2X1 cells:       84
ABC RESULTS:            NOR3X1 cells:       14
ABC RESULTS:           OAI21X1 cells:      212
ABC RESULTS:             OR2X1 cells:       69
ABC RESULTS:             OR2X2 cells:        1
ABC RESULTS:           XNOR2X1 cells:       88
ABC RESULTS:            XOR2X1 cells:        7
ABC RESULTS:        internal signals:     2386
ABC RESULTS:           input signals:      419
ABC RESULTS:          output signals:      274
Removing temp directory.

18. Printing statistics.

=== AXI_PMU ===

   Number of wires:                 45
   Number of wire bits:            145
   Number of public wires:          45
   Number of public wire bits:     145
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)      1

   Area for cell type \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4) is unknown!

=== AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4) ===

   Number of wires:              14474
   Number of wire bits:          27515
   Number of public wires:         153
   Number of public wire bits:    3222
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10368
     AND2X1                       1116
     AND2X2                         11
     AOI21X1                       775
     AOI22X1                       540
     BUFX2                         692
     BUFX4                           1
     DFFPOSX1                     1076
     INVX1                         189
     INVX8                           1
     MCCU(N_CORES=4)                 1
     MUX2X1                        348
     NAND2X1                      1093
     NAND3X1                       573
     NOR2X1                       1241
     NOR3X1                        397
     OAI21X1                       963
     OR2X1                         249
     OR2X2                           1
     RDC(CORE_EVENTS=4)              1
     XNOR2X1                       729
     XOR2X1                        371

   Area for cell type \MCCU(N_CORES=4) is unknown!
   Area for cell type \RDC(CORE_EVENTS=4) is unknown!

   Chip area for module '\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)': 34280.018500

=== MCCU(N_CORES=4) ===

   Number of wires:               4362
   Number of wire bits:           9199
   Number of public wires:          36
   Number of public wire bits:     997
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2766
     AND2X1                        126
     AOI21X1                       304
     AOI22X1                        62
     BUFX2                         116
     BUFX4                           2
     DFFPOSX1                      172
     INVX1                         162
     INVX2                           1
     NAND2X1                       568
     NAND3X1                       166
     NOR2X1                        139
     NOR3X1                         83
     OAI21X1                       387
     OR2X1                         187
     OR2X2                           4
     XNOR2X1                       169
     XOR2X1                        118

   Chip area for module '\MCCU(N_CORES=4)': 8137.662000

=== RDC(CORE_EVENTS=4) ===

   Number of wires:               3136
   Number of wire bits:           5835
   Number of public wires:          47
   Number of public wire bits:     613
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1987
     AND2X1                        130
     AND2X2                          6
     AOI21X1                       239
     AOI22X1                       150
     BUFX2                          91
     BUFX4                          30
     DFFPOSX1                      273
     INVX1                         311
     INVX2                           2
     MUX2X1                         61
     NAND2X1                       135
     NAND3X1                        84
     NOR2X1                         84
     NOR3X1                         14
     OAI21X1                       212
     OR2X1                          69
     OR2X2                           1
     XNOR2X1                        88
     XOR2X1                          7

   Chip area for module '\RDC(CORE_EVENTS=4)': 6528.901600

=== design hierarchy ===

   AXI_PMU                           1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)      1
       MCCU(N_CORES=4)               1
       RDC(CORE_EVENTS=4)            1

   Number of wires:              22017
   Number of wire bits:          42694
   Number of public wires:         281
   Number of public wire bits:    4977
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              15119
     AND2X1                       1372
     AND2X2                         17
     AOI21X1                      1318
     AOI22X1                       752
     BUFX2                         899
     BUFX4                          33
     DFFPOSX1                     1521
     INVX1                         662
     INVX2                           3
     INVX8                           1
     MUX2X1                        409
     NAND2X1                      1796
     NAND3X1                       823
     NOR2X1                       1464
     NOR3X1                        494
     OAI21X1                      1562
     OR2X1                         505
     OR2X2                           6
     XNOR2X1                       986
     XOR2X1                        496

   Chip area for top module '\AXI_PMU': 48946.582100

Warning: Driver-driver conflict for $verific$n3451$2102 [202] between cell $auto$simplemap.cc:420:simplemap_dff$32824.D and constant 1'0 in MCCU(N_CORES=4): Resolved using constant.
Warning: Driver-driver conflict for $verific$n3451$2102 [138] between cell $auto$simplemap.cc:420:simplemap_dff$32760.D and constant 1'0 in MCCU(N_CORES=4): Resolved using constant.
Warning: Driver-driver conflict for $verific$n3451$2102 [74] between cell $auto$simplemap.cc:420:simplemap_dff$32696.D and constant 1'0 in MCCU(N_CORES=4): Resolved using constant.
Warning: Driver-driver conflict for $verific$n3451$2102 [10] between cell $auto$simplemap.cc:420:simplemap_dff$32632.D and constant 1'0 in MCCU(N_CORES=4): Resolved using constant.
Removed 0 unused cells and 8145 unused wires.

19. Executing Verilog backend.
Dumping module `\AXI_PMU'.
Dumping module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=4)'.
Dumping module `\MCCU(N_CORES=4)'.
Dumping module `\RDC(CORE_EVENTS=4)'.

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: 09fe40f0f5
CPU: user 11.53s system 0.07s, MEM: 251.67 MB total, 134.06 MB resident
Yosys 0.8+472 (git sha1 c907899, clang 3.8.0-2ubuntu4 -fPIC -Os)
Time spent: 21% 39x opt_merge (2 sec), 12% 39x opt_clean (1 sec), ...
