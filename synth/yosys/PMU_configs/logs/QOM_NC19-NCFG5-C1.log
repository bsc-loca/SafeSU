
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite -- Symbiotic EDA Edition [20190521A ] |
 |                                                                            |
 |  Copyright (C) 2012 - 2019 Symbiotic GmbH                                  |
 |                                                                            |
 |  Licensed to: Symbiotic EDA Eval License Program                           |
 |  Licensee contact: office@symbioticeda.com                                 |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+472 (git sha1 c907899, clang 3.8.0-2ubuntu4 -fPIC -Os)

[license] Signature verified.
[license] License cache is hot.

-- Running command `read -define YOSYS_1' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.

-- Executing script file `yosys_45.ys' --

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../hdl/AXI_PMU.sv'

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv'

4. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../submodules/MCCU/hdl/MCCU.sv'

5. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../submodules/RDC/hdl/RDC.sv'

6. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
Adding Verilog module 'AXI_PMU' to elaboration queue.
Running hier_tree::Elaborate().
VERIFIC-WARNING [VERI-1927] ../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:843: port 'watermark_o' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] ../../hdl/AXI_PMU.sv:11: compiling module 'AXI_PMU'
VERIFIC-WARNING [VERI-1216] ../../hdl/AXI_PMU.sv:172: index 1 is out of range [0:0] for 'MCCU_int_o'
VERIFIC-INFO [VERI-1018] ../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:24: compiling module 'AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'
VERIFIC-INFO [VERI-1018] ../../submodules/MCCU/hdl/MCCU.sv:21: compiling module 'MCCU(N_CORES=1)'
VERIFIC-INFO [VERI-1018] ../../submodules/RDC/hdl/RDC.sv:18: compiling module 'RDC(N_CORES=1,CORE_EVENTS=4)'
Importing module AXI_PMU.
Importing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Importing module MCCU(N_CORES=1).
Importing module RDC(N_CORES=1,CORE_EVENTS=4).

7. Executing PREP pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \AXI_PMU
Used module:     \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)
Used module:         \RDC(N_CORES=1,CORE_EVENTS=4)
Used module:         \MCCU(N_CORES=1)

7.1.2. Analyzing design hierarchy..
Top module:  \AXI_PMU
Used module:     \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)
Used module:         \RDC(N_CORES=1,CORE_EVENTS=4)
Used module:         \MCCU(N_CORES=1)
Removed 0 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.2.3. Executing PROC_INIT pass (extract init attributes).

7.2.4. Executing PROC_ARST pass (detect async resets in processes).

7.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

7.2.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).
Optimizing module MCCU(N_CORES=1).
<suppressed ~4 debug messages>
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
<suppressed ~31 debug messages>
Optimizing module AXI_PMU.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \AXI_PMU..
Removed 9 unused cells and 286 unused wires.
<suppressed ~44 debug messages>

7.5. Executing CHECK pass (checking for obvious problems).
checking module AXI_PMU..
checking module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
checking module MCCU(N_CORES=1)..
checking module RDC(N_CORES=1,CORE_EVENTS=4)..
found and reported 0 problems.

7.6. Executing OPT pass (performing simple optimizations).

7.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

7.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$i1011$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$872.
    dead port 1/2 on $mux $verific$i1012$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$873.
    dead port 1/2 on $mux $verific$i1013$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$874.
    dead port 1/2 on $mux $verific$i1014$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$875.
    dead port 1/2 on $mux $verific$i1015$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$876.
    dead port 1/2 on $mux $verific$i1016$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$877.
    dead port 1/2 on $mux $verific$i1017$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$878.
    dead port 1/2 on $mux $verific$i1018$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$879.
    dead port 1/2 on $mux $verific$i1019$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$880.
    dead port 1/2 on $mux $verific$i1020$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$881.
    dead port 1/2 on $mux $verific$i1021$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$882.
    dead port 1/2 on $mux $verific$i1022$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$883.
    dead port 1/2 on $mux $verific$i1023$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$884.
    dead port 1/2 on $mux $verific$i1024$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$885.
    dead port 1/2 on $mux $verific$i1025$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$886.
    dead port 1/2 on $mux $verific$i1026$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$887.
    dead port 1/2 on $mux $verific$i1027$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$888.
    dead port 1/2 on $mux $verific$i1045$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$892.
    dead port 1/2 on $mux $verific$i1046$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$893.
    dead port 1/2 on $mux $verific$i1047$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$894.
    dead port 1/2 on $mux $verific$i1048$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$895.
    dead port 1/2 on $mux $verific$i1049$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$896.
    dead port 1/2 on $mux $verific$i1050$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$897.
    dead port 1/2 on $mux $verific$i1051$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$898.
    dead port 1/2 on $mux $verific$i1052$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$899.
    dead port 1/2 on $mux $verific$i1053$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$900.
    dead port 1/2 on $mux $verific$i1054$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$901.
    dead port 1/2 on $mux $verific$i1055$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$902.
    dead port 1/2 on $mux $verific$i1056$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$903.
    dead port 1/2 on $mux $verific$i1057$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$904.
    dead port 1/2 on $mux $verific$i1058$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$905.
    dead port 1/2 on $mux $verific$i1059$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$906.
    dead port 1/2 on $mux $verific$i1060$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$907.
    dead port 1/2 on $mux $verific$i1079$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$911.
    dead port 1/2 on $mux $verific$i1080$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$912.
    dead port 1/2 on $mux $verific$i1081$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$913.
    dead port 1/2 on $mux $verific$i1082$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$914.
    dead port 1/2 on $mux $verific$i1083$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$915.
    dead port 1/2 on $mux $verific$i1084$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$916.
    dead port 1/2 on $mux $verific$i1085$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$917.
    dead port 1/2 on $mux $verific$i1086$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$918.
    dead port 1/2 on $mux $verific$i1087$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$919.
    dead port 1/2 on $mux $verific$i1088$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$920.
    dead port 1/2 on $mux $verific$i1089$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$921.
    dead port 1/2 on $mux $verific$i1090$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$922.
    dead port 1/2 on $mux $verific$i1091$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$923.
    dead port 1/2 on $mux $verific$i1092$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$924.
    dead port 1/2 on $mux $verific$i1093$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$925.
    dead port 1/2 on $mux $verific$i1113$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$929.
    dead port 1/2 on $mux $verific$i1114$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$930.
    dead port 1/2 on $mux $verific$i1115$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$931.
    dead port 1/2 on $mux $verific$i1116$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$932.
    dead port 1/2 on $mux $verific$i1117$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$933.
    dead port 1/2 on $mux $verific$i1118$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$934.
    dead port 1/2 on $mux $verific$i1119$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$935.
    dead port 1/2 on $mux $verific$i1120$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$936.
    dead port 1/2 on $mux $verific$i1121$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$937.
    dead port 1/2 on $mux $verific$i1122$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$938.
    dead port 1/2 on $mux $verific$i1123$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$939.
    dead port 1/2 on $mux $verific$i1124$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$940.
    dead port 1/2 on $mux $verific$i1125$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$941.
    dead port 1/2 on $mux $verific$i1126$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$942.
    dead port 1/2 on $mux $verific$i1147$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$946.
    dead port 1/2 on $mux $verific$i1148$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$947.
    dead port 1/2 on $mux $verific$i1149$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$948.
    dead port 1/2 on $mux $verific$i1150$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$949.
    dead port 1/2 on $mux $verific$i1151$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$950.
    dead port 1/2 on $mux $verific$i1152$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$951.
    dead port 1/2 on $mux $verific$i1153$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$952.
    dead port 1/2 on $mux $verific$i1154$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$953.
    dead port 1/2 on $mux $verific$i1155$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$954.
    dead port 1/2 on $mux $verific$i1156$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$955.
    dead port 1/2 on $mux $verific$i1157$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$956.
    dead port 1/2 on $mux $verific$i1158$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$957.
    dead port 1/2 on $mux $verific$i1159$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$958.
    dead port 1/2 on $mux $verific$i1181$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$962.
    dead port 1/2 on $mux $verific$i1182$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$963.
    dead port 1/2 on $mux $verific$i1183$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$964.
    dead port 1/2 on $mux $verific$i1184$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$965.
    dead port 1/2 on $mux $verific$i1185$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$966.
    dead port 1/2 on $mux $verific$i1186$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$967.
    dead port 1/2 on $mux $verific$i1187$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$968.
    dead port 1/2 on $mux $verific$i1188$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$969.
    dead port 1/2 on $mux $verific$i1189$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$970.
    dead port 1/2 on $mux $verific$i1190$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$971.
    dead port 1/2 on $mux $verific$i1191$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$972.
    dead port 1/2 on $mux $verific$i1192$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$973.
    dead port 1/2 on $mux $verific$i1215$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$977.
    dead port 1/2 on $mux $verific$i1216$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$978.
    dead port 1/2 on $mux $verific$i1217$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$979.
    dead port 1/2 on $mux $verific$i1218$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$980.
    dead port 1/2 on $mux $verific$i1219$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$981.
    dead port 1/2 on $mux $verific$i1220$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$982.
    dead port 1/2 on $mux $verific$i1221$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$983.
    dead port 1/2 on $mux $verific$i1222$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$984.
    dead port 1/2 on $mux $verific$i1223$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$985.
    dead port 1/2 on $mux $verific$i1224$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$986.
    dead port 1/2 on $mux $verific$i1225$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$987.
    dead port 1/2 on $mux $verific$i1249$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$991.
    dead port 1/2 on $mux $verific$i1250$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$992.
    dead port 1/2 on $mux $verific$i1251$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$993.
    dead port 1/2 on $mux $verific$i1252$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$994.
    dead port 1/2 on $mux $verific$i1253$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$995.
    dead port 1/2 on $mux $verific$i1254$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$996.
    dead port 1/2 on $mux $verific$i1255$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$997.
    dead port 1/2 on $mux $verific$i1256$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$998.
    dead port 1/2 on $mux $verific$i1257$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$999.
    dead port 1/2 on $mux $verific$i1258$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1000.
    dead port 1/2 on $mux $verific$i1283$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1004.
    dead port 1/2 on $mux $verific$i1284$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1005.
    dead port 1/2 on $mux $verific$i1285$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1006.
    dead port 1/2 on $mux $verific$i1286$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1007.
    dead port 1/2 on $mux $verific$i1287$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1008.
    dead port 1/2 on $mux $verific$i1288$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1009.
    dead port 1/2 on $mux $verific$i1289$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1010.
    dead port 1/2 on $mux $verific$i1290$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1011.
    dead port 1/2 on $mux $verific$i1291$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1012.
    dead port 1/2 on $mux $verific$i1317$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1016.
    dead port 1/2 on $mux $verific$i1318$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1017.
    dead port 1/2 on $mux $verific$i1319$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1018.
    dead port 1/2 on $mux $verific$i1320$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1019.
    dead port 1/2 on $mux $verific$i1321$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1020.
    dead port 1/2 on $mux $verific$i1322$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1021.
    dead port 1/2 on $mux $verific$i1323$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1022.
    dead port 1/2 on $mux $verific$i1324$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1023.
    dead port 1/2 on $mux $verific$i1351$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1027.
    dead port 1/2 on $mux $verific$i1352$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1028.
    dead port 1/2 on $mux $verific$i1353$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1029.
    dead port 1/2 on $mux $verific$i1354$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1030.
    dead port 1/2 on $mux $verific$i1355$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1031.
    dead port 1/2 on $mux $verific$i1356$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1032.
    dead port 1/2 on $mux $verific$i1357$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1033.
    dead port 1/2 on $mux $verific$i1385$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1037.
    dead port 1/2 on $mux $verific$i1386$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1038.
    dead port 1/2 on $mux $verific$i1387$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1039.
    dead port 1/2 on $mux $verific$i1388$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1040.
    dead port 1/2 on $mux $verific$i1389$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1041.
    dead port 1/2 on $mux $verific$i1390$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1042.
    dead port 1/2 on $mux $verific$i1419$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1046.
    dead port 1/2 on $mux $verific$i1420$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1047.
    dead port 1/2 on $mux $verific$i1421$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1048.
    dead port 1/2 on $mux $verific$i1422$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1049.
    dead port 1/2 on $mux $verific$i1423$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1050.
    dead port 1/2 on $mux $verific$i1453$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1054.
    dead port 1/2 on $mux $verific$i1454$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1055.
    dead port 1/2 on $mux $verific$i1455$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1056.
    dead port 1/2 on $mux $verific$i1456$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1057.
    dead port 1/2 on $mux $verific$i1487$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1061.
    dead port 1/2 on $mux $verific$i1488$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1062.
    dead port 1/2 on $mux $verific$i1489$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1063.
    dead port 1/2 on $mux $verific$i1521$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1067.
    dead port 1/2 on $mux $verific$i1522$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1068.
    dead port 1/2 on $mux $verific$i1555$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1072.
    dead port 1/2 on $mux $verific$i977$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$851.
    dead port 1/2 on $mux $verific$i978$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$852.
    dead port 1/2 on $mux $verific$i979$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$853.
    dead port 1/2 on $mux $verific$i980$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$854.
    dead port 1/2 on $mux $verific$i981$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$855.
    dead port 1/2 on $mux $verific$i982$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$856.
    dead port 1/2 on $mux $verific$i983$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$857.
    dead port 1/2 on $mux $verific$i984$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$858.
    dead port 1/2 on $mux $verific$i985$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$859.
    dead port 1/2 on $mux $verific$i986$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$860.
    dead port 1/2 on $mux $verific$i987$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$861.
    dead port 1/2 on $mux $verific$i988$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$862.
    dead port 1/2 on $mux $verific$i989$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$863.
    dead port 1/2 on $mux $verific$i990$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$864.
    dead port 1/2 on $mux $verific$i991$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$865.
    dead port 1/2 on $mux $verific$i992$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$866.
    dead port 1/2 on $mux $verific$i993$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$867.
    dead port 1/2 on $mux $verific$i994$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$868.
    dead port 1/2 on $mux $verific$mux_6868$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1075.
    dead port 1/2 on $mux $verific$mux_6869$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1071.
    dead port 1/2 on $mux $verific$mux_6870$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1066.
    dead port 1/2 on $mux $verific$mux_6871$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1060.
    dead port 1/2 on $mux $verific$mux_6872$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1053.
    dead port 1/2 on $mux $verific$mux_6873$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1045.
    dead port 1/2 on $mux $verific$mux_6874$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1036.
    dead port 1/2 on $mux $verific$mux_6875$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1026.
    dead port 1/2 on $mux $verific$mux_6876$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1015.
    dead port 1/2 on $mux $verific$mux_6877$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1003.
    dead port 1/2 on $mux $verific$mux_6878$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$990.
    dead port 1/2 on $mux $verific$mux_6879$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$976.
    dead port 1/2 on $mux $verific$mux_6880$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$961.
    dead port 1/2 on $mux $verific$mux_6881$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$945.
    dead port 1/2 on $mux $verific$mux_6882$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$928.
    dead port 1/2 on $mux $verific$mux_6883$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$910.
    dead port 1/2 on $mux $verific$mux_6884$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$891.
    dead port 1/2 on $mux $verific$mux_6885$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$871.
Running muxtree optimizer on module \MCCU(N_CORES=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=1,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 189 multiplexer ports.
<suppressed ~85 debug messages>

7.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
    New input vector for $reduce_or cell $verific$reduce_or_5574$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:609$1337: { \slv_reg[24] [0] \slv_reg[24] [1] \slv_reg[24] [2] \slv_reg[24] [3] \slv_reg[24] [4] \slv_reg[24] [5] \slv_reg[24] [6] \slv_reg[24] [7] \slv_reg[24] [8] \slv_reg[24] [9] \slv_reg[24] [10] \slv_reg[24] [11] \slv_reg[24] [12] \slv_reg[24] [13] \slv_reg[24] [14] \slv_reg[24] [15] \slv_reg[24] [16] \slv_reg[24] [17] \slv_reg[24] [18] \slv_reg[24] [19] \slv_reg[24] [20] \slv_reg[24] [21] \slv_reg[24] [22] \slv_reg[24] [23] \slv_reg[24] [24] \slv_reg[24] [25] \slv_reg[24] [26] \slv_reg[24] [27] \slv_reg[24] [28] \slv_reg[24] [29] \slv_reg[24] [30] \slv_reg[24] [31] }
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
  Optimizing cells in module \MCCU(N_CORES=1).
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
    New input vector for $reduce_or cell $verific$reduce_or_179$../../submodules/RDC/hdl/RDC.sv:140$1719: { \interruption_vector_int[0] [0] \interruption_vector_int[0] [1] \interruption_vector_int[0] [2] \interruption_vector_int[0] [3] }
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
Performed a total of 2 changes.

7.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \q_2 = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Promoting init spec \q = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Promoting init spec \generated_overflow.j = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Promoting init spec \generated_overflow.overflow_bit.a = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Promoting init spec \generated_int_overflow.j = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Promoting init spec \i = 0 to constant driver in module RDC(N_CORES=1,CORE_EVENTS=4).
Promoted 6 init specs to constant drivers.

7.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..
Removed 0 unused cells and 206 unused wires.
<suppressed ~1 debug messages>

7.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

7.6.9. Rerunning OPT passes. (Maybe there is more to do..)

7.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=1,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

7.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
  Optimizing cells in module \MCCU(N_CORES=1).
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
Performed a total of 0 changes.

7.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

7.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

7.6.16. Finished OPT passes. (There is nothing left to do.)

7.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$LessThan_2919$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:541$1152 ($lt).
Removed top 4 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2922$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1155 ($eq).
Removed top 3 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2924$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1157 ($eq).
Removed top 3 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2926$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1159 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2928$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1161 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2930$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1163 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2932$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1165 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2934$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1167 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2936$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1169 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2938$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1171 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2940$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1173 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2942$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1175 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2944$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1177 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2946$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1179 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2948$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1181 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$equal_2950$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1183 ($eq).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_2995$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1223 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_3127$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1229 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_3259$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1235 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_3391$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1241 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_3523$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1247 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_3655$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1253 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_3787$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1259 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_3919$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1265 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4051$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1271 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4183$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1277 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4315$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1283 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4447$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1289 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4579$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1295 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4711$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1301 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4843$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1307 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_4975$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1313 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5107$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1319 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5239$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1325 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5371$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1331 ($add).
Removed top 32 bits (of 64) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$LessThan_5655$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:647$1379 ($lt).
Removed top 14 bits (of 64) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$LessThan_5655$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:647$1379 ($lt).
Removed top 1 bits (of 33) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5658$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1382 ($add).
Removed top 2 bits (of 34) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5659$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1383 ($add).
Removed top 3 bits (of 35) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5660$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1384 ($add).
Removed top 4 bits (of 36) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5661$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1385 ($add).
Removed top 5 bits (of 37) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5662$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1386 ($add).
Removed top 6 bits (of 38) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5663$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1387 ($add).
Removed top 7 bits (of 39) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5664$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1388 ($add).
Removed top 8 bits (of 40) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5665$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1389 ($add).
Removed top 9 bits (of 41) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5666$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1390 ($add).
Removed top 10 bits (of 42) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5667$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1391 ($add).
Removed top 11 bits (of 43) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5668$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1392 ($add).
Removed top 12 bits (of 44) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5669$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1393 ($add).
Removed top 13 bits (of 45) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5670$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1394 ($add).
Removed top 14 bits (of 46) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5671$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1395 ($add).
Removed top 15 bits (of 47) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5672$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1396 ($add).
Removed top 16 bits (of 48) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5673$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1397 ($add).
Removed top 17 bits (of 49) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).$verific$add_5674$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1398 ($add).
Removed top 27 bits (of 32) from wire AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).decode_read.read_address.
Removed top 14 bits (of 64) from wire AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).generated_quota.suma.
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=1).$verific$LessThan_21$../../submodules/MCCU/hdl/MCCU.sv:185$1595 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=1).$verific$LessThan_34$../../submodules/MCCU/hdl/MCCU.sv:198$1599 ($lt).
Removed top 1 bits (of 9) from port A of cell MCCU(N_CORES=1).$verific$add_46$../../submodules/MCCU/hdl/MCCU.sv:220$1607 ($add).
Removed top 2 bits (of 10) from port A of cell MCCU(N_CORES=1).$verific$add_47$../../submodules/MCCU/hdl/MCCU.sv:220$1608 ($add).
Removed top 53 bits (of 64) from FF cell MCCU(N_CORES=1).$verific$ccc_suma_int_reg$../../submodules/MCCU/hdl/MCCU.sv:247$1613 ($dff).
Removed top 53 bits (of 64) from port B of cell MCCU(N_CORES=1).$verific$LessThan_21$../../submodules/MCCU/hdl/MCCU.sv:185$1595 ($lt).
Removed top 21 bits (of 32) from port B of cell MCCU(N_CORES=1).$verific$sub_22$../../submodules/MCCU/hdl/MCCU.sv:189$1596 ($sub).
Removed top 53 bits (of 64) from port B of cell MCCU(N_CORES=1).$verific$LessThan_34$../../submodules/MCCU/hdl/MCCU.sv:198$1599 ($lt).
Removed top 21 bits (of 32) from port B of cell MCCU(N_CORES=1).$verific$sub_35$../../submodules/MCCU/hdl/MCCU.sv:202$1600 ($sub).
Removed top 53 bits (of 64) from wire MCCU(N_CORES=1).ccc_suma_int[0].
Removed top 2 bits (of 8) from wire MCCU(N_CORES=1).events_weights_int[0][3].
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=1,CORE_EVENTS=4).$verific$add_7$../../submodules/RDC/hdl/RDC.sv:79$1677 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=1,CORE_EVENTS=4).$verific$add_44$../../submodules/RDC/hdl/RDC.sv:79$1684 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=1,CORE_EVENTS=4).$verific$add_81$../../submodules/RDC/hdl/RDC.sv:79$1691 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=1,CORE_EVENTS=4).$verific$add_118$../../submodules/RDC/hdl/RDC.sv:79$1698 ($add).

7.8. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

7.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..
Removed 0 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

7.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.11. Executing OPT pass (performing simple optimizations).

7.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

7.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

7.11.5. Finished fast OPT passes.

7.12. Printing statistics.

=== AXI_PMU ===

   Number of wires:                 45
   Number of wire bits:            142
   Number of public wires:          45
   Number of public wire bits:     142
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)      1

=== AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5) ===

   Number of wires:                507
   Number of wire bits:           9231
   Number of public wires:         120
   Number of public wire bits:    2520
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                458
     $add                           37
     $and                           56
     $dff                           43
     $eq                            63
     $logic_not                      1
     $lt                             2
     $mux                          244
     $not                            7
     $or                             2
     $reduce_or                      1
     MCCU(N_CORES=1)                 1
     RDC(N_CORES=1,CORE_EVENTS=4)      1

=== MCCU(N_CORES=1) ===

   Number of wires:                 43
   Number of wire bits:            651
   Number of public wires:          18
   Number of public wire bits:     306
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $add                            3
     $and                            4
     $dff                            2
     $lt                             2
     $mux                           13
     $not                            2
     $sub                            2

=== RDC(N_CORES=1,CORE_EVENTS=4) ===

   Number of wires:                 70
   Number of wire bits:            436
   Number of public wires:          20
   Number of public wire bits:     181
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 65
     $add                            4
     $and                            4
     $dff                           10
     $eq                             4
     $le                             4
     $lt                             4
     $mux                           32
     $or                             2
     $reduce_or                      1

=== design hierarchy ===

   AXI_PMU                           1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)      1
       MCCU(N_CORES=1)               1
       RDC(N_CORES=1,CORE_EVENTS=4)      1

   Number of wires:                665
   Number of wire bits:          10460
   Number of public wires:         203
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                549
     $add                           44
     $and                           64
     $dff                           55
     $eq                            67
     $le                             4
     $logic_not                      1
     $lt                             8
     $mux                          289
     $not                            9
     $or                             4
     $reduce_or                      2
     $sub                            2

7.13. Executing CHECK pass (checking for obvious problems).
checking module AXI_PMU..
checking module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
checking module MCCU(N_CORES=1)..
checking module RDC(N_CORES=1,CORE_EVENTS=4)..
found and reported 0 problems.

8. Executing PROC pass (convert processes to netlists).

8.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.3. Executing PROC_INIT pass (extract init attributes).

8.4. Executing PROC_ARST pass (detect async resets in processes).

8.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.6. Executing PROC_DLATCH pass (convert process syncs to latches).

8.7. Executing PROC_DFF pass (convert process syncs to FFs).

8.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=1,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
  Optimizing cells in module \MCCU(N_CORES=1).
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing FSM pass (extract and optimize FSM).

10.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).axi_bresp as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).axi_rresp as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=1,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
  Optimizing cells in module \MCCU(N_CORES=1).
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
Performed a total of 0 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

11.6. Executing OPT_RMDFF pass (remove dff with constant values).

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

11.9. Finished OPT passes. (There is nothing left to do.)

12. Executing MEMORY pass.

12.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

12.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

12.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

12.5. Executing MEMORY_COLLECT pass (generating $mem cells).

12.6. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU(N_CORES=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=1,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
  Optimizing cells in module \MCCU(N_CORES=1).
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

13.6. Executing OPT_RMDFF pass (remove dff with constant values).

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

13.9. Finished OPT passes. (There is nothing left to do.)

14. Executing TECHMAP pass (map to technology primitives).

14.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=34 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=34\Y_WIDTH=35 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=35\Y_WIDTH=36 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=36\Y_WIDTH=37 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=37\Y_WIDTH=38 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=38\Y_WIDTH=39 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=39\Y_WIDTH=40 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=40\Y_WIDTH=41 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=41\Y_WIDTH=42 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=42\Y_WIDTH=43 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=43\Y_WIDTH=44 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=44\Y_WIDTH=45 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=45\Y_WIDTH=46 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=46\Y_WIDTH=47 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=47\Y_WIDTH=48 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=48\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=49\Y_WIDTH=50 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=50\Y_WIDTH=50 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=34 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=35 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=36 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=37 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=38 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=39 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=40 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=41 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=42 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=43 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=44 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=45 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=46 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=47 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=48 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=49 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=50 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=11\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=9\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
No more expansions possible.
<suppressed ~13697 debug messages>

15. Executing OPT pass (performing simple optimizations).

15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
<suppressed ~6879 debug messages>
Optimizing module MCCU(N_CORES=1).
<suppressed ~556 debug messages>
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).
<suppressed ~316 debug messages>

15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
<suppressed ~669 debug messages>
Finding identical cells in module `\MCCU(N_CORES=1)'.
<suppressed ~189 debug messages>
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
<suppressed ~252 debug messages>
Removed a total of 370 cells.

15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MCCU(N_CORES=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC(N_CORES=1,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
  Optimizing cells in module \MCCU(N_CORES=1).
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
Performed a total of 0 changes.

15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

15.6. Executing OPT_RMDFF pass (remove dff with constant values).

15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..
Removed 1969 unused cells and 3753 unused wires.
<suppressed ~1972 debug messages>

15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

15.9. Rerunning OPT passes. (Maybe there is more to do..)

15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MCCU(N_CORES=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC(N_CORES=1,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
  Optimizing cells in module \MCCU(N_CORES=1).
  Optimizing cells in module \RDC(N_CORES=1,CORE_EVENTS=4).
Performed a total of 0 changes.

15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Finding identical cells in module `\MCCU(N_CORES=1)'.
Finding identical cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)'.
Removed a total of 0 cells.

15.13. Executing OPT_RMDFF pass (remove dff with constant values).

15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)..
Finding unused cells or wires in module \MCCU(N_CORES=1)..
Finding unused cells or wires in module \RDC(N_CORES=1,CORE_EVENTS=4)..

15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5).
Optimizing module MCCU(N_CORES=1).
Optimizing module RDC(N_CORES=1,CORE_EVENTS=4).

15.16. Finished OPT passes. (There is nothing left to do.)

16. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=10.32) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\AXI_PMU':
Mapping DFF cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)':
  mapped 1076 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\MCCU(N_CORES=1)':
  mapped 43 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\RDC(N_CORES=1,CORE_EVENTS=4)':
  mapped 69 $_DFF_P_ cells to \DFFPOSX1 cells.

17. Executing ABC pass (technology mapping using ABC).

17.1. Extracting gate netlist of module `\AXI_PMU' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

17.2. Extracting gate netlist of module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)' to `<abc-temp-dir>/input.blif'..
Extracted 13752 gates and 14905 wires to a netlist network with 1151 inputs and 1079 outputs.

17.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   9153 ( 10.1 %)   Cap =  5.7 ff (  7.4 %)   Area =    25500.82 ( 85.1 %)   Delay =  4750.92 ps  ( 18.9 %)               
ABC: Path  0 --      43 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    2231 : 1    7 BUFX4   A =   2.82  Df =  55.6  -20.8 ps  S =  21.1 ps  Cin =  3.9 ff  Cout =  15.1 ff  Cmax = 999.3 ff  G =  366  
ABC: Path  2 --    2232 : 1    3 INVX2   A =   1.88  Df =  74.9  -14.2 ps  S =  12.1 ps  Cin =  2.7 ff  Cout =   7.6 ff  Cmax = 518.7 ff  G =  283  
ABC: Path  3 --    7445 : 3    7 NOR3X1  A =   2.82  Df = 148.2  -19.4 ps  S = 106.5 ps  Cin =  3.1 ff  Cout =  13.7 ff  Cmax =  96.9 ff  G =  431  
ABC: Path  4 --    7492 : 2    4 NAND2X1 A =   1.88  Df = 201.1  -13.2 ps  S =  79.1 ps  Cin =  2.0 ff  Cout =  12.2 ff  Cmax =   0.0 ff  G =  595  
ABC: Path  5 --    7493 : 2    2 XOR2X1  A =   4.69  Df = 272.3  -27.6 ps  S =  71.0 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path  6 --    7589 : 2    4 XNOR2X1 A =   4.69  Df = 358.9  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path  7 --    7665 : 2    2 XOR2X1  A =   4.69  Df = 434.8  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path  8 --    7698 : 2    4 XNOR2X1 A =   4.69  Df = 522.9  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path  9 --    7808 : 2    2 XOR2X1  A =   4.69  Df = 599.1  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 10 --    7842 : 2    4 XNOR2X1 A =   4.69  Df = 687.1  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 11 --    7925 : 2    2 XOR2X1  A =   4.69  Df = 763.3  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 12 --    7959 : 2    4 XNOR2X1 A =   4.69  Df = 851.3  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 13 --    8109 : 2    2 XOR2X1  A =   4.69  Df = 927.5  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 14 --    8143 : 2    4 XNOR2X1 A =   4.69  Df =1015.6  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 15 --    8317 : 2    2 XOR2X1  A =   4.69  Df =1091.7  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 16 --    8349 : 2    4 XNOR2X1 A =   4.69  Df =1178.3  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 17 --    8350 : 2    2 XOR2X1  A =   4.69  Df =1254.2  -25.6 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 18 --    8764 : 2    4 XNOR2X1 A =   4.69  Df =1342.3  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 19 --    8908 : 2    2 XOR2X1  A =   4.69  Df =1418.4  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 20 --    8936 : 2    4 XNOR2X1 A =   4.69  Df =1506.5  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 21 --    9093 : 2    2 XOR2X1  A =   4.69  Df =1582.7  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 22 --    9129 : 2    4 XNOR2X1 A =   4.69  Df =1670.7  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 23 --    9270 : 2    2 XOR2X1  A =   4.69  Df =1746.9  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 24 --    9304 : 2    4 XNOR2X1 A =   4.69  Df =1835.0  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 25 --    9434 : 2    2 XOR2X1  A =   4.69  Df =1911.2  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 26 --    9499 : 2    4 XNOR2X1 A =   4.69  Df =1999.2  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 27 --    9500 : 2    2 XOR2X1  A =   4.69  Df =2075.4  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 28 --    9669 : 2    4 XNOR2X1 A =   4.69  Df =2163.4  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 29 --    9920 : 2    2 XOR2X1  A =   4.69  Df =2239.6  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 30 --    9954 : 2    4 XNOR2X1 A =   4.69  Df =2327.7  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 31 --   10191 : 2    2 XOR2X1  A =   4.69  Df =2403.9  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 32 --   10225 : 2    4 XNOR2X1 A =   4.69  Df =2491.9  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 33 --   10387 : 2    2 XOR2X1  A =   4.69  Df =2568.1  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 34 --   10421 : 2    4 XNOR2X1 A =   4.69  Df =2656.1  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 35 --   10578 : 2    2 XOR2X1  A =   4.69  Df =2732.3  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 36 --   10612 : 2    4 XNOR2X1 A =   4.69  Df =2820.4  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 37 --   10988 : 2    2 XOR2X1  A =   4.69  Df =2896.5  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 38 --   11024 : 2    2 XNOR2X1 A =   4.69  Df =2972.3  -26.6 ps  S =  68.9 ps  Cin =  5.1 ff  Cout =   8.6 ff  Cmax = 228.3 ff  G =  163  
ABC: Path 39 --   11025 : 2    3 XOR2X1  A =   4.69  Df =3047.0  -26.3 ps  S =  72.1 ps  Cin =  5.3 ff  Cout =   8.4 ff  Cmax = 223.3 ff  G =  153  
ABC: Path 40 --   11027 : 3    2 OAI21X1 A =   2.82  Df =3084.7   -1.5 ps  S =  67.0 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path 41 --   11032 : 3    2 AOI21X1 A =   2.82  Df =3142.4  -20.2 ps  S =  56.7 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 42 --   11034 : 3    2 OAI21X1 A =   2.82  Df =3184.1   -7.3 ps  S =  66.5 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path 43 --   11039 : 3    2 AOI21X1 A =   2.82  Df =3235.5  -12.6 ps  S =  56.8 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 44 --   11041 : 3    2 OAI21X1 A =   2.82  Df =3286.5  -15.7 ps  S =  69.3 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 45 --   11043 : 3    2 AOI21X1 A =   2.82  Df =3334.3  -10.3 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 46 --   11045 : 3    2 OAI21X1 A =   2.82  Df =3396.1  -37.6 ps  S =  67.7 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path 47 --   11051 : 3    2 AOI21X1 A =   2.82  Df =3435.2  -18.6 ps  S =  56.7 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 48 --   11053 : 3    2 OAI21X1 A =   2.82  Df =3498.8  -47.0 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 49 --   11055 : 3    2 AOI21X1 A =   2.82  Df =3546.9  -26.6 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 50 --   11057 : 3    2 OAI21X1 A =   2.82  Df =3610.5  -54.9 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 51 --   11059 : 3    2 AOI21X1 A =   2.82  Df =3658.5  -26.6 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 52 --   11061 : 3    2 OAI21X1 A =   2.82  Df =3722.1  -44.8 ps  S =  69.3 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 53 --   11063 : 3    2 AOI21X1 A =   2.82  Df =3769.9  -28.0 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 54 --   11065 : 3    2 OAI21X1 A =   2.82  Df =3831.7  -39.0 ps  S =  66.4 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  304  
ABC: Path 55 --   11071 : 3    2 AOI21X1 A =   2.82  Df =3870.7  -18.8 ps  S =  57.1 ps  Cin =  2.6 ff  Cout =   8.5 ff  Cmax =   0.0 ff  G =  315  
ABC: Path 56 --   11073 : 3    2 OAI21X1 A =   2.82  Df =3934.3  -37.9 ps  S =  69.0 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 57 --   11075 : 3    2 AOI21X1 A =   2.82  Df =3982.0  -25.7 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 58 --   11077 : 3    2 OAI21X1 A =   2.82  Df =4045.6  -39.3 ps  S =  69.1 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 59 --   11079 : 3    2 AOI21X1 A =   2.82  Df =4093.4  -25.4 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 60 --   11081 : 3    2 OAI21X1 A =   2.82  Df =4157.0  -39.0 ps  S =  69.1 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 61 --   11083 : 3    2 AOI21X1 A =   2.82  Df =4204.7  -26.8 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 62 --   11085 : 3    2 OAI21X1 A =   2.82  Df =4268.3  -38.7 ps  S =  69.1 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 63 --   11087 : 3    2 AOI21X1 A =   2.82  Df =4310.4  -23.2 ps  S =  37.2 ps  Cin =  2.6 ff  Cout =   4.3 ff  Cmax =   0.0 ff  G =  167  
ABC: Path 64 --   11088 : 2    3 OR2X2   A =   2.82  Df =4362.3  -18.9 ps  S =  22.0 ps  Cin =  2.3 ff  Cout =   6.0 ff  Cmax = 519.7 ff  G =  252  
ABC: Path 65 --   11089 : 2    1 NAND2X1 A =   1.88  Df =4377.0  -14.8 ps  S =  37.2 ps  Cin =  2.0 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =  135  
ABC: Path 66 --   11091 : 3    2 AOI21X1 A =   2.82  Df =4417.1   -1.5 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 67 --   11093 : 3    2 OAI21X1 A =   2.82  Df =4481.0  -30.0 ps  S =  69.5 ps  Cin =  2.5 ff  Cout =   8.4 ff  Cmax = 229.4 ff  G =  329  
ABC: Path 68 --   11095 : 3    2 AOI21X1 A =   2.82  Df =4528.9  -24.5 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 69 --   11097 : 3    2 OAI21X1 A =   2.82  Df =4592.4  -48.3 ps  S =  69.3 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 70 --   11099 : 3    3 AOI21X1 A =   2.82  Df =4644.3  -39.5 ps  S =  67.7 ps  Cin =  2.6 ff  Cout =  10.7 ff  Cmax =   0.0 ff  G =  402  
ABC: Path 71 --   11100 : 2    1 XNOR2X1 A =   4.69  Df =4694.4  -16.6 ps  S =  36.4 ps  Cin =  5.1 ff  Cout =   1.9 ff  Cmax = 228.3 ff  G =   36  
ABC: Path 72 --   11101 : 2    1 AND2X2  A =   2.82  Df =4728.4  -10.9 ps  S =  11.1 ps  Cin =  1.8 ff  Cout =   2.7 ff  Cmax = 505.1 ff  G =  146  
ABC: Path 73 --   11382 : 3    1 OAI21X1 A =   2.82  Df =4750.9  -11.2 ps  S =  33.0 ps  Cin =  2.5 ff  Cout =   0.0 ff  Cmax = 229.4 ff  G =    0  
ABC: Start-point = pi42 (\S_AXI_ARESETN_i).  End-point = po1077 (\int_quota_o).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:     1147
ABC RESULTS:            AND2X2 cells:       43
ABC RESULTS:           AOI21X1 cells:      834
ABC RESULTS:           AOI22X1 cells:      559
ABC RESULTS:             BUFX2 cells:      718
ABC RESULTS:             BUFX4 cells:       13
ABC RESULTS:             INVX1 cells:      196
ABC RESULTS:             INVX2 cells:        1
ABC RESULTS:            MUX2X1 cells:      344
ABC RESULTS:           NAND2X1 cells:      957
ABC RESULTS:           NAND3X1 cells:      600
ABC RESULTS:            NOR2X1 cells:     1046
ABC RESULTS:            NOR3X1 cells:      413
ABC RESULTS:           OAI21X1 cells:      976
ABC RESULTS:             OR2X1 cells:      204
ABC RESULTS:             OR2X2 cells:        4
ABC RESULTS:           XNOR2X1 cells:      762
ABC RESULTS:            XOR2X1 cells:      336
ABC RESULTS:        internal signals:    12675
ABC RESULTS:           input signals:     1151
ABC RESULTS:          output signals:     1079
Removing temp directory.

17.3. Extracting gate netlist of module `\MCCU(N_CORES=1)' to `<abc-temp-dir>/input.blif'..
Extracted 1066 gates and 1182 wires to a netlist network with 114 inputs and 44 outputs.

17.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    682 ( 10.9 %)   Cap =  5.2 ff (  5.2 %)   Area =     1766.45 ( 89.4 %)   Delay =   916.62 ps  ( 17.7 %)               
ABC: Path  0 --     106 : 0    3 pi      A =   0.00  Df =  31.4   -7.9 ps  S =  40.1 ps  Cin =  0.0 ff  Cout =  12.7 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     296 : 2    3 XNOR2X1 A =   4.69  Df = 108.5  -30.4 ps  S =  77.4 ps  Cin =  5.1 ff  Cout =  10.4 ff  Cmax = 228.3 ff  G =  199  
ABC: Path  2 --     370 : 3    2 OAI21X1 A =   2.82  Df = 182.9  -38.6 ps  S =  54.9 ps  Cin =  2.5 ff  Cout =   5.0 ff  Cmax = 229.4 ff  G =  199  
ABC: Path  3 --     377 : 3    2 NAND3X1 A =   2.35  Df = 207.8  -24.3 ps  S =  49.4 ps  Cin =  2.7 ff  Cout =   5.0 ff  Cmax =   0.0 ff  G =  183  
ABC: Path  4 --     392 : 3    2 NAND3X1 A =   2.35  Df = 249.0  -42.0 ps  S =  49.3 ps  Cin =  2.7 ff  Cout =   5.0 ff  Cmax =   0.0 ff  G =  183  
ABC: Path  5 --     406 : 3    2 NAND3X1 A =   2.35  Df = 272.6  -24.4 ps  S =  49.4 ps  Cin =  2.7 ff  Cout =   5.0 ff  Cmax =   0.0 ff  G =  183  
ABC: Path  6 --     407 : 3    3 NAND3X1 A =   2.35  Df = 322.7  -46.4 ps  S =  63.2 ps  Cin =  2.7 ff  Cout =   7.9 ff  Cmax =   0.0 ff  G =  287  
ABC: Path  7 --     425 : 3    1 NAND3X1 A =   2.35  Df = 346.3  -33.2 ps  S =  39.7 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  108  
ABC: Path  8 --     426 : 3    3 NAND3X1 A =   2.35  Df = 395.0  -56.2 ps  S =  63.4 ps  Cin =  2.7 ff  Cout =   7.8 ff  Cmax =   0.0 ff  G =  285  
ABC: Path  9 --     450 : 3    2 NAND3X1 A =   2.35  Df = 423.1  -38.9 ps  S =  52.8 ps  Cin =  2.7 ff  Cout =   5.7 ff  Cmax =   0.0 ff  G =  210  
ABC: Path 10 --     452 : 3    3 NAND3X1 A =   2.35  Df = 471.1  -59.2 ps  S =  59.0 ps  Cin =  2.7 ff  Cout =   7.0 ff  Cmax =   0.0 ff  G =  257  
ABC: Path 11 --     470 : 3    6 NAND3X1 A =   2.35  Df = 518.3  -23.0 ps  S = 111.7 ps  Cin =  2.7 ff  Cout =  18.3 ff  Cmax =   0.0 ff  G =  671  
ABC: Path 12 --     552 : 3    4 NOR3X1  A =   2.82  Df = 577.2  -20.2 ps  S =  89.2 ps  Cin =  3.1 ff  Cout =  10.2 ff  Cmax =  96.9 ff  G =  319  
ABC: Path 13 --     575 : 3    4 NAND3X1 A =   2.35  Df = 618.6   -0.8 ps  S =  71.0 ps  Cin =  2.7 ff  Cout =   9.5 ff  Cmax =   0.0 ff  G =  352  
ABC: Path 14 --     593 : 3    5 NOR3X1  A =   2.82  Df = 680.0   -6.5 ps  S =  97.0 ps  Cin =  3.1 ff  Cout =  12.3 ff  Cmax =  96.9 ff  G =  383  
ABC: Path 15 --     647 : 3    4 NAND3X1 A =   2.35  Df = 750.7  -21.6 ps  S =  91.5 ps  Cin =  2.7 ff  Cout =  14.0 ff  Cmax =   0.0 ff  G =  512  
ABC: Path 16 --     666 : 2    1 OR2X2   A =   2.82  Df = 809.2  -25.4 ps  S =  24.8 ps  Cin =  2.3 ff  Cout =   5.6 ff  Cmax = 519.7 ff  G =  229  
ABC: Path 17 --     667 : 2    1 XNOR2X1 A =   4.69  Df = 861.6  -18.7 ps  S =  41.8 ps  Cin =  5.1 ff  Cout =   2.9 ff  Cmax = 228.3 ff  G =   54  
ABC: Path 18 --     668 : 4    1 AOI22X1 A =   3.29  Df = 886.7   -6.0 ps  S =  47.5 ps  Cin =  2.8 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =   97  
ABC: Path 19 --     670 : 3    1 AOI21X1 A =   2.82  Df = 916.6   -6.4 ps  S =  16.2 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi105 (\ccc_suma_int[0] [2]).  End-point = po30 ($verific$n847$1585 [30]).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       39
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:           AOI21X1 cells:       82
ABC RESULTS:           AOI22X1 cells:        7
ABC RESULTS:             BUFX2 cells:       36
ABC RESULTS:             INVX1 cells:       38
ABC RESULTS:           NAND2X1 cells:      145
ABC RESULTS:           NAND3X1 cells:       61
ABC RESULTS:            NOR2X1 cells:       37
ABC RESULTS:            NOR3X1 cells:       25
ABC RESULTS:           OAI21X1 cells:      104
ABC RESULTS:             OR2X1 cells:       32
ABC RESULTS:             OR2X2 cells:        4
ABC RESULTS:           XNOR2X1 cells:       43
ABC RESULTS:            XOR2X1 cells:       27
ABC RESULTS:          _const0_ cells:        1
ABC RESULTS:        internal signals:     1024
ABC RESULTS:           input signals:      114
ABC RESULTS:          output signals:       44
Removing temp directory.

17.4. Extracting gate netlist of module `\RDC(N_CORES=1,CORE_EVENTS=4)' to `<abc-temp-dir>/input.blif'..
Extracted 666 gates and 775 wires to a netlist network with 107 inputs and 70 outputs.

17.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    488 ( 20.3 %)   Cap =  4.7 ff (  8.4 %)   Area =     1223.00 ( 82.2 %)   Delay =   393.65 ps  ( 22.3 %)               
ABC: Path  0 --      10 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     309 : 1    9 BUFX4   A =   2.82  Df =  58.3  -18.7 ps  S =  28.7 ps  Cin =  3.9 ff  Cout =  21.3 ff  Cmax = 999.3 ff  G =  530  
ABC: Path  2 --     479 : 4    1 AOI22X1 A =   3.29  Df = 106.9  -29.4 ps  S =  49.8 ps  Cin =  2.8 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  108  
ABC: Path  3 --     482 : 3    1 NOR3X1  A =   2.82  Df = 152.1   -8.7 ps  S =  51.2 ps  Cin =  3.1 ff  Cout =   2.7 ff  Cmax =  96.9 ff  G =   85  
ABC: Path  4 --     485 : 3    1 OAI21X1 A =   2.82  Df = 200.3  -29.6 ps  S =  44.0 ps  Cin =  2.5 ff  Cout =   2.9 ff  Cmax = 229.4 ff  G =  116  
ABC: Path  5 --     486 : 4    1 AOI22X1 A =   3.29  Df = 225.0  -26.2 ps  S =  47.5 ps  Cin =  2.8 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =   95  
ABC: Path  6 --     489 : 3    7 OAI21X1 A =   2.82  Df = 329.7  -77.9 ps  S = 122.6 ps  Cin =  2.5 ff  Cout =  19.8 ff  Cmax = 229.4 ff  G =  775  
ABC: Path  7 --     491 : 3    1 NAND3X1 A =   2.35  Df = 369.8  -72.4 ps  S =  38.3 ps  Cin =  2.7 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =  101  
ABC: Path  8 --     492 : 3    1 AOI21X1 A =   2.82  Df = 393.7  -41.7 ps  S =  16.3 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi9 (\max_value[1] [0]).  End-point = po30 ($verific$n634$1664 [0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       48
ABC RESULTS:            AND2X2 cells:        4
ABC RESULTS:           AOI21X1 cells:       72
ABC RESULTS:           AOI22X1 cells:       31
ABC RESULTS:             BUFX2 cells:       19
ABC RESULTS:             BUFX4 cells:        8
ABC RESULTS:             INVX1 cells:       72
ABC RESULTS:            MUX2X1 cells:        9
ABC RESULTS:           NAND2X1 cells:       51
ABC RESULTS:           NAND3X1 cells:       37
ABC RESULTS:            NOR2X1 cells:       18
ABC RESULTS:            NOR3X1 cells:        6
ABC RESULTS:           OAI21X1 cells:       54
ABC RESULTS:             OR2X1 cells:       31
ABC RESULTS:             OR2X2 cells:        3
ABC RESULTS:           XNOR2X1 cells:       24
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:      598
ABC RESULTS:           input signals:      107
ABC RESULTS:          output signals:       70
Removing temp directory.

18. Printing statistics.

=== AXI_PMU ===

   Number of wires:                 45
   Number of wire bits:            142
   Number of public wires:          45
   Number of public wire bits:     142
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)      1

   Area for cell type \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5) is unknown!

=== AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5) ===

   Number of wires:              14308
   Number of wire bits:          26680
   Number of public wires:         120
   Number of public wire bits:    2520
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10231
     AND2X1                       1147
     AND2X2                         43
     AOI21X1                       834
     AOI22X1                       559
     BUFX2                         718
     BUFX4                          13
     DFFPOSX1                     1076
     INVX1                         196
     INVX2                           1
     MCCU(N_CORES=1)                 1
     MUX2X1                        344
     NAND2X1                       957
     NAND3X1                       600
     NOR2X1                       1046
     NOR3X1                        413
     OAI21X1                       976
     OR2X1                         204
     OR2X2                           4
     RDC(N_CORES=1,CORE_EVENTS=4)      1
     XNOR2X1                       762
     XOR2X1                        336

   Area for cell type \MCCU(N_CORES=1) is unknown!
   Area for cell type \RDC(N_CORES=1,CORE_EVENTS=4) is unknown!

   Chip area for module '\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)': 34085.259000

=== MCCU(N_CORES=1) ===

   Number of wires:               1162
   Number of wire bits:           2440
   Number of public wires:          18
   Number of public wire bits:     306
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                724
     AND2X1                         39
     AND2X2                          1
     AOI21X1                        82
     AOI22X1                         7
     BUFX2                          36
     DFFPOSX1                       43
     INVX1                          38
     NAND2X1                       145
     NAND3X1                        61
     NOR2X1                         37
     NOR3X1                         25
     OAI21X1                       104
     OR2X1                          32
     OR2X2                           4
     XNOR2X1                        43
     XOR2X1                         27

   Chip area for module '\MCCU(N_CORES=1)': 2109.503500

=== RDC(N_CORES=1,CORE_EVENTS=4) ===

   Number of wires:                858
   Number of wire bits:           1549
   Number of public wires:          20
   Number of public wire bits:     181
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                557
     AND2X1                         48
     AND2X2                          4
     AOI21X1                        72
     AOI22X1                        31
     BUFX2                          19
     BUFX4                           8
     DFFPOSX1                       69
     INVX1                          72
     MUX2X1                          9
     NAND2X1                        51
     NAND3X1                        37
     NOR2X1                         18
     NOR3X1                          6
     OAI21X1                        54
     OR2X1                          31
     OR2X2                           3
     XNOR2X1                        24
     XOR2X1                          1

   Chip area for module '\RDC(N_CORES=1,CORE_EVENTS=4)': 1773.484700

=== design hierarchy ===

   AXI_PMU                           1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)      1
       MCCU(N_CORES=1)               1
       RDC(N_CORES=1,CORE_EVENTS=4)      1

   Number of wires:              16373
   Number of wire bits:          30811
   Number of public wires:         203
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11510
     AND2X1                       1234
     AND2X2                         48
     AOI21X1                       988
     AOI22X1                       597
     BUFX2                         773
     BUFX4                          21
     DFFPOSX1                     1188
     INVX1                         306
     INVX2                           1
     MUX2X1                        353
     NAND2X1                      1153
     NAND3X1                       698
     NOR2X1                       1101
     NOR3X1                        444
     OAI21X1                      1134
     OR2X1                         267
     OR2X2                          11
     XNOR2X1                       829
     XOR2X1                        364

   Chip area for top module '\AXI_PMU': 37968.247200

Warning: Driver-driver conflict for $verific$n880$1586 [10] between cell $auto$simplemap.cc:420:simplemap_dff$30759.D and constant 1'0 in MCCU(N_CORES=1): Resolved using constant.
Removed 0 unused cells and 5852 unused wires.

19. Executing Verilog backend.
Dumping module `\AXI_PMU'.
Dumping module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5)'.
Dumping module `\MCCU(N_CORES=1)'.
Dumping module `\RDC(N_CORES=1,CORE_EVENTS=4)'.

Warnings: 3 unique messages, 3 total
End of script. Logfile hash: 401fee4627
CPU: user 8.37s system 0.07s, MEM: 227.14 MB total, 108.03 MB resident
Yosys 0.8+472 (git sha1 c907899, clang 3.8.0-2ubuntu4 -fPIC -Os)
Time spent: 16% 37x opt_merge (1 sec), 13% 37x opt_clean (1 sec), ...
