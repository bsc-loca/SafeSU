
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite -- Symbiotic EDA Edition [20190521A ] |
 |                                                                            |
 |  Copyright (C) 2012 - 2019 Symbiotic GmbH                                  |
 |                                                                            |
 |  Licensed to: Symbiotic EDA Eval License Program                           |
 |  Licensee contact: office@symbioticeda.com                                 |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+472 (git sha1 c907899, clang 3.8.0-2ubuntu4 -fPIC -Os)

[license] Signature verified.
[license] License cache is hot.

-- Running command `read -define YOSYS_2' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.

-- Executing script file `yosys_45.ys' --

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../hdl/AXI_PMU.sv'

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv'

4. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../submodules/MCCU/hdl/MCCU.sv'

5. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../submodules/RDC/hdl/RDC.sv'

6. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr19_SW_Release, released at Wed May  1 16:05:25 2019.
Adding Verilog module 'AXI_PMU' to elaboration queue.
Running hier_tree::Elaborate().
VERIFIC-WARNING [VERI-1927] ../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:843: port 'watermark_o' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] ../../hdl/AXI_PMU.sv:11: compiling module 'AXI_PMU'
VERIFIC-INFO [VERI-1018] ../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:24: compiling module 'AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'
VERIFIC-INFO [VERI-1018] ../../submodules/MCCU/hdl/MCCU.sv:21: compiling module 'MCCU'
VERIFIC-INFO [VERI-1018] ../../submodules/RDC/hdl/RDC.sv:18: compiling module 'RDC(N_CORES=2,CORE_EVENTS=4)'
Importing module AXI_PMU.
Importing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Importing module MCCU.
Importing module RDC(N_CORES=2,CORE_EVENTS=4).

7. Executing PREP pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \AXI_PMU
Used module:     \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)
Used module:         \RDC(N_CORES=2,CORE_EVENTS=4)
Used module:         \MCCU

7.1.2. Analyzing design hierarchy..
Top module:  \AXI_PMU
Used module:     \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)
Used module:         \RDC(N_CORES=2,CORE_EVENTS=4)
Used module:         \MCCU
Removed 0 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.2.3. Executing PROC_INIT pass (extract init attributes).

7.2.4. Executing PROC_ARST pass (detect async resets in processes).

7.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

7.2.7. Executing PROC_DFF pass (convert process syncs to FFs).

7.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).
Optimizing module MCCU.
<suppressed ~4 debug messages>
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
<suppressed ~34 debug messages>
Optimizing module AXI_PMU.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \AXI_PMU..
Removed 17 unused cells and 432 unused wires.
<suppressed ~62 debug messages>

7.5. Executing CHECK pass (checking for obvious problems).
checking module AXI_PMU..
checking module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
checking module MCCU..
checking module RDC(N_CORES=2,CORE_EVENTS=4)..
found and reported 0 problems.

7.6. Executing OPT pass (performing simple optimizations).

7.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

7.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$i1011$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$876.
    dead port 1/2 on $mux $verific$i1012$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$877.
    dead port 1/2 on $mux $verific$i1013$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$878.
    dead port 1/2 on $mux $verific$i1014$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$879.
    dead port 1/2 on $mux $verific$i1015$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$880.
    dead port 1/2 on $mux $verific$i1016$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$881.
    dead port 1/2 on $mux $verific$i1017$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$882.
    dead port 1/2 on $mux $verific$i1018$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$883.
    dead port 1/2 on $mux $verific$i1019$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$884.
    dead port 1/2 on $mux $verific$i1020$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$885.
    dead port 1/2 on $mux $verific$i1021$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$886.
    dead port 1/2 on $mux $verific$i1022$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$887.
    dead port 1/2 on $mux $verific$i1023$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$888.
    dead port 1/2 on $mux $verific$i1024$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$889.
    dead port 1/2 on $mux $verific$i1025$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$890.
    dead port 1/2 on $mux $verific$i1026$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$891.
    dead port 1/2 on $mux $verific$i1027$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$892.
    dead port 1/2 on $mux $verific$i1045$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$896.
    dead port 1/2 on $mux $verific$i1046$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$897.
    dead port 1/2 on $mux $verific$i1047$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$898.
    dead port 1/2 on $mux $verific$i1048$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$899.
    dead port 1/2 on $mux $verific$i1049$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$900.
    dead port 1/2 on $mux $verific$i1050$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$901.
    dead port 1/2 on $mux $verific$i1051$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$902.
    dead port 1/2 on $mux $verific$i1052$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$903.
    dead port 1/2 on $mux $verific$i1053$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$904.
    dead port 1/2 on $mux $verific$i1054$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$905.
    dead port 1/2 on $mux $verific$i1055$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$906.
    dead port 1/2 on $mux $verific$i1056$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$907.
    dead port 1/2 on $mux $verific$i1057$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$908.
    dead port 1/2 on $mux $verific$i1058$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$909.
    dead port 1/2 on $mux $verific$i1059$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$910.
    dead port 1/2 on $mux $verific$i1060$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$911.
    dead port 1/2 on $mux $verific$i1079$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$915.
    dead port 1/2 on $mux $verific$i1080$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$916.
    dead port 1/2 on $mux $verific$i1081$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$917.
    dead port 1/2 on $mux $verific$i1082$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$918.
    dead port 1/2 on $mux $verific$i1083$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$919.
    dead port 1/2 on $mux $verific$i1084$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$920.
    dead port 1/2 on $mux $verific$i1085$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$921.
    dead port 1/2 on $mux $verific$i1086$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$922.
    dead port 1/2 on $mux $verific$i1087$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$923.
    dead port 1/2 on $mux $verific$i1088$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$924.
    dead port 1/2 on $mux $verific$i1089$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$925.
    dead port 1/2 on $mux $verific$i1090$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$926.
    dead port 1/2 on $mux $verific$i1091$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$927.
    dead port 1/2 on $mux $verific$i1092$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$928.
    dead port 1/2 on $mux $verific$i1093$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$929.
    dead port 1/2 on $mux $verific$i1113$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$933.
    dead port 1/2 on $mux $verific$i1114$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$934.
    dead port 1/2 on $mux $verific$i1115$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$935.
    dead port 1/2 on $mux $verific$i1116$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$936.
    dead port 1/2 on $mux $verific$i1117$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$937.
    dead port 1/2 on $mux $verific$i1118$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$938.
    dead port 1/2 on $mux $verific$i1119$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$939.
    dead port 1/2 on $mux $verific$i1120$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$940.
    dead port 1/2 on $mux $verific$i1121$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$941.
    dead port 1/2 on $mux $verific$i1122$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$942.
    dead port 1/2 on $mux $verific$i1123$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$943.
    dead port 1/2 on $mux $verific$i1124$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$944.
    dead port 1/2 on $mux $verific$i1125$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$945.
    dead port 1/2 on $mux $verific$i1126$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$946.
    dead port 1/2 on $mux $verific$i1147$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$950.
    dead port 1/2 on $mux $verific$i1148$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$951.
    dead port 1/2 on $mux $verific$i1149$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$952.
    dead port 1/2 on $mux $verific$i1150$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$953.
    dead port 1/2 on $mux $verific$i1151$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$954.
    dead port 1/2 on $mux $verific$i1152$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$955.
    dead port 1/2 on $mux $verific$i1153$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$956.
    dead port 1/2 on $mux $verific$i1154$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$957.
    dead port 1/2 on $mux $verific$i1155$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$958.
    dead port 1/2 on $mux $verific$i1156$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$959.
    dead port 1/2 on $mux $verific$i1157$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$960.
    dead port 1/2 on $mux $verific$i1158$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$961.
    dead port 1/2 on $mux $verific$i1159$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$962.
    dead port 1/2 on $mux $verific$i1181$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$966.
    dead port 1/2 on $mux $verific$i1182$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$967.
    dead port 1/2 on $mux $verific$i1183$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$968.
    dead port 1/2 on $mux $verific$i1184$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$969.
    dead port 1/2 on $mux $verific$i1185$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$970.
    dead port 1/2 on $mux $verific$i1186$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$971.
    dead port 1/2 on $mux $verific$i1187$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$972.
    dead port 1/2 on $mux $verific$i1188$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$973.
    dead port 1/2 on $mux $verific$i1189$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$974.
    dead port 1/2 on $mux $verific$i1190$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$975.
    dead port 1/2 on $mux $verific$i1191$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$976.
    dead port 1/2 on $mux $verific$i1192$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$977.
    dead port 1/2 on $mux $verific$i1215$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$981.
    dead port 1/2 on $mux $verific$i1216$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$982.
    dead port 1/2 on $mux $verific$i1217$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$983.
    dead port 1/2 on $mux $verific$i1218$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$984.
    dead port 1/2 on $mux $verific$i1219$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$985.
    dead port 1/2 on $mux $verific$i1220$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$986.
    dead port 1/2 on $mux $verific$i1221$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$987.
    dead port 1/2 on $mux $verific$i1222$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$988.
    dead port 1/2 on $mux $verific$i1223$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$989.
    dead port 1/2 on $mux $verific$i1224$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$990.
    dead port 1/2 on $mux $verific$i1225$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$991.
    dead port 1/2 on $mux $verific$i1249$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$995.
    dead port 1/2 on $mux $verific$i1250$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$996.
    dead port 1/2 on $mux $verific$i1251$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$997.
    dead port 1/2 on $mux $verific$i1252$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$998.
    dead port 1/2 on $mux $verific$i1253$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$999.
    dead port 1/2 on $mux $verific$i1254$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1000.
    dead port 1/2 on $mux $verific$i1255$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1001.
    dead port 1/2 on $mux $verific$i1256$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1002.
    dead port 1/2 on $mux $verific$i1257$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1003.
    dead port 1/2 on $mux $verific$i1258$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1004.
    dead port 1/2 on $mux $verific$i1283$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1008.
    dead port 1/2 on $mux $verific$i1284$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1009.
    dead port 1/2 on $mux $verific$i1285$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1010.
    dead port 1/2 on $mux $verific$i1286$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1011.
    dead port 1/2 on $mux $verific$i1287$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1012.
    dead port 1/2 on $mux $verific$i1288$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1013.
    dead port 1/2 on $mux $verific$i1289$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1014.
    dead port 1/2 on $mux $verific$i1290$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1015.
    dead port 1/2 on $mux $verific$i1291$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1016.
    dead port 1/2 on $mux $verific$i1317$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1020.
    dead port 1/2 on $mux $verific$i1318$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1021.
    dead port 1/2 on $mux $verific$i1319$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1022.
    dead port 1/2 on $mux $verific$i1320$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1023.
    dead port 1/2 on $mux $verific$i1321$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1024.
    dead port 1/2 on $mux $verific$i1322$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1025.
    dead port 1/2 on $mux $verific$i1323$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1026.
    dead port 1/2 on $mux $verific$i1324$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1027.
    dead port 1/2 on $mux $verific$i1351$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1031.
    dead port 1/2 on $mux $verific$i1352$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1032.
    dead port 1/2 on $mux $verific$i1353$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1033.
    dead port 1/2 on $mux $verific$i1354$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1034.
    dead port 1/2 on $mux $verific$i1355$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1035.
    dead port 1/2 on $mux $verific$i1356$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1036.
    dead port 1/2 on $mux $verific$i1357$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1037.
    dead port 1/2 on $mux $verific$i1385$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1041.
    dead port 1/2 on $mux $verific$i1386$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1042.
    dead port 1/2 on $mux $verific$i1387$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1043.
    dead port 1/2 on $mux $verific$i1388$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1044.
    dead port 1/2 on $mux $verific$i1389$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1045.
    dead port 1/2 on $mux $verific$i1390$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1046.
    dead port 1/2 on $mux $verific$i1419$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1050.
    dead port 1/2 on $mux $verific$i1420$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1051.
    dead port 1/2 on $mux $verific$i1421$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1052.
    dead port 1/2 on $mux $verific$i1422$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1053.
    dead port 1/2 on $mux $verific$i1423$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1054.
    dead port 1/2 on $mux $verific$i1453$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1058.
    dead port 1/2 on $mux $verific$i1454$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1059.
    dead port 1/2 on $mux $verific$i1455$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1060.
    dead port 1/2 on $mux $verific$i1456$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1061.
    dead port 1/2 on $mux $verific$i1487$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1065.
    dead port 1/2 on $mux $verific$i1488$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1066.
    dead port 1/2 on $mux $verific$i1489$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1067.
    dead port 1/2 on $mux $verific$i1521$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1071.
    dead port 1/2 on $mux $verific$i1522$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1072.
    dead port 1/2 on $mux $verific$i1555$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1076.
    dead port 1/2 on $mux $verific$i977$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$855.
    dead port 1/2 on $mux $verific$i978$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$856.
    dead port 1/2 on $mux $verific$i979$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$857.
    dead port 1/2 on $mux $verific$i980$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$858.
    dead port 1/2 on $mux $verific$i981$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$859.
    dead port 1/2 on $mux $verific$i982$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$860.
    dead port 1/2 on $mux $verific$i983$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$861.
    dead port 1/2 on $mux $verific$i984$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$862.
    dead port 1/2 on $mux $verific$i985$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$863.
    dead port 1/2 on $mux $verific$i986$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$864.
    dead port 1/2 on $mux $verific$i987$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$865.
    dead port 1/2 on $mux $verific$i988$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$866.
    dead port 1/2 on $mux $verific$i989$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$867.
    dead port 1/2 on $mux $verific$i990$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$868.
    dead port 1/2 on $mux $verific$i991$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$869.
    dead port 1/2 on $mux $verific$i992$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$870.
    dead port 1/2 on $mux $verific$i993$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$871.
    dead port 1/2 on $mux $verific$i994$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$872.
    dead port 1/2 on $mux $verific$mux_7207$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1079.
    dead port 1/2 on $mux $verific$mux_7208$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1075.
    dead port 1/2 on $mux $verific$mux_7209$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1070.
    dead port 1/2 on $mux $verific$mux_7210$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1064.
    dead port 1/2 on $mux $verific$mux_7211$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1057.
    dead port 1/2 on $mux $verific$mux_7212$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1049.
    dead port 1/2 on $mux $verific$mux_7213$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1040.
    dead port 1/2 on $mux $verific$mux_7214$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1030.
    dead port 1/2 on $mux $verific$mux_7215$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1019.
    dead port 1/2 on $mux $verific$mux_7216$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$1007.
    dead port 1/2 on $mux $verific$mux_7217$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$994.
    dead port 1/2 on $mux $verific$mux_7218$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$980.
    dead port 1/2 on $mux $verific$mux_7219$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$965.
    dead port 1/2 on $mux $verific$mux_7220$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$949.
    dead port 1/2 on $mux $verific$mux_7221$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$932.
    dead port 1/2 on $mux $verific$mux_7222$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$914.
    dead port 1/2 on $mux $verific$mux_7223$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$895.
    dead port 1/2 on $mux $verific$mux_7224$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:424$875.
Running muxtree optimizer on module \MCCU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=2,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 189 multiplexer ports.
<suppressed ~101 debug messages>

7.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
    New input vector for $reduce_or cell $verific$reduce_or_5806$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:609$1349: { \slv_reg[24] [0] \slv_reg[24] [1] \slv_reg[24] [2] \slv_reg[24] [3] \slv_reg[24] [4] \slv_reg[24] [5] \slv_reg[24] [6] \slv_reg[24] [7] \slv_reg[24] [8] \slv_reg[24] [9] \slv_reg[24] [10] \slv_reg[24] [11] \slv_reg[24] [12] \slv_reg[24] [13] \slv_reg[24] [14] \slv_reg[24] [15] \slv_reg[24] [16] \slv_reg[24] [17] \slv_reg[24] [18] \slv_reg[24] [19] \slv_reg[24] [20] \slv_reg[24] [21] \slv_reg[24] [22] \slv_reg[24] [23] \slv_reg[24] [24] \slv_reg[24] [25] \slv_reg[24] [26] \slv_reg[24] [27] \slv_reg[24] [28] \slv_reg[24] [29] \slv_reg[24] [30] \slv_reg[24] [31] }
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
  Optimizing cells in module \MCCU.
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
    New input vector for $reduce_or cell $verific$reduce_or_340$../../submodules/RDC/hdl/RDC.sv:140$2002: { \interruption_vector_int[0] [0] \interruption_vector_int[0] [1] \interruption_vector_int[0] [2] \interruption_vector_int[0] [3] \interruption_vector_int[1] [0] \interruption_vector_int[1] [1] \interruption_vector_int[1] [2] \interruption_vector_int[1] [3] }
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
Performed a total of 2 changes.

7.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \q_2 = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Promoting init spec \q = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Promoting init spec \generated_overflow.j = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Promoting init spec \generated_overflow.overflow_bit.a = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Promoting init spec \generated_int_overflow.j = 0 to constant driver in module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Promoting init spec \i = 0 to constant driver in module RDC(N_CORES=2,CORE_EVENTS=4).
Promoted 6 init specs to constant drivers.

7.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..
Removed 0 unused cells and 206 unused wires.
<suppressed ~1 debug messages>

7.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

7.6.9. Rerunning OPT passes. (Maybe there is more to do..)

7.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=2,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

7.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
  Optimizing cells in module \MCCU.
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
Performed a total of 0 changes.

7.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

7.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

7.6.16. Finished OPT passes. (There is nothing left to do.)

7.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$LessThan_3151$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:541$1164 ($lt).
Removed top 4 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3154$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1167 ($eq).
Removed top 3 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3156$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1169 ($eq).
Removed top 3 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3158$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1171 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3160$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1173 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3162$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1175 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3164$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1177 ($eq).
Removed top 2 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3166$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1179 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3168$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1181 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3170$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1183 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3172$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1185 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3174$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1187 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3176$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1189 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3178$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1191 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3180$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1193 ($eq).
Removed top 1 bits (of 5) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$equal_3182$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:543$1195 ($eq).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_3227$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1235 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_3359$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1241 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_3491$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1247 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_3623$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1253 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_3755$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1259 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_3887$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1265 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4019$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1271 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4151$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1277 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4283$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1283 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4415$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1289 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4547$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1295 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4679$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1301 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4811$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1307 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_4943$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1313 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5075$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1319 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5207$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1325 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5339$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1331 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5471$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1337 ($add).
Removed top 31 bits (of 32) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5603$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:586$1343 ($add).
Removed top 32 bits (of 64) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$LessThan_5887$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:647$1391 ($lt).
Removed top 14 bits (of 64) from port B of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$LessThan_5887$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:647$1391 ($lt).
Removed top 1 bits (of 33) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5890$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1394 ($add).
Removed top 2 bits (of 34) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5891$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1395 ($add).
Removed top 3 bits (of 35) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5892$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1396 ($add).
Removed top 4 bits (of 36) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5893$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1397 ($add).
Removed top 5 bits (of 37) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5894$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1398 ($add).
Removed top 6 bits (of 38) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5895$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1399 ($add).
Removed top 7 bits (of 39) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5896$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1400 ($add).
Removed top 8 bits (of 40) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5897$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1401 ($add).
Removed top 9 bits (of 41) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5898$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1402 ($add).
Removed top 10 bits (of 42) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5899$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1403 ($add).
Removed top 11 bits (of 43) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5900$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1404 ($add).
Removed top 12 bits (of 44) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5901$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1405 ($add).
Removed top 13 bits (of 45) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5902$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1406 ($add).
Removed top 14 bits (of 46) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5903$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1407 ($add).
Removed top 15 bits (of 47) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5904$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1408 ($add).
Removed top 16 bits (of 48) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5905$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1409 ($add).
Removed top 17 bits (of 49) from port A of cell AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).$verific$add_5906$../../hdl/AXI_PMU_interface_v1_0_S00_AXI.sv:655$1410 ($add).
Removed top 27 bits (of 32) from wire AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).decode_read.read_address.
Removed top 14 bits (of 64) from wire AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).generated_quota.suma.
Removed top 32 bits (of 64) from port A of cell MCCU.$verific$LessThan_114$../../submodules/MCCU/hdl/MCCU.sv:185$1775 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU.$verific$LessThan_251$../../submodules/MCCU/hdl/MCCU.sv:198$1779 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU.$verific$LessThan_526$../../submodules/MCCU/hdl/MCCU.sv:185$1790 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU.$verific$LessThan_663$../../submodules/MCCU/hdl/MCCU.sv:198$1793 ($lt).
Removed top 1 bits (of 9) from port A of cell MCCU.$verific$add_830$../../submodules/MCCU/hdl/MCCU.sv:220$1801 ($add).
Removed top 2 bits (of 10) from port A of cell MCCU.$verific$add_831$../../submodules/MCCU/hdl/MCCU.sv:220$1802 ($add).
Removed top 1 bits (of 9) from port A of cell MCCU.$verific$add_833$../../submodules/MCCU/hdl/MCCU.sv:220$1804 ($add).
Removed top 2 bits (of 10) from port A of cell MCCU.$verific$add_834$../../submodules/MCCU/hdl/MCCU.sv:220$1805 ($add).
Removed top 53 bits (of 128) from FF cell MCCU.$verific$ccc_suma_int_reg$../../submodules/MCCU/hdl/MCCU.sv:247$1810 ($dff).
Removed top 53 bits (of 64) from port B of cell MCCU.$verific$LessThan_114$../../submodules/MCCU/hdl/MCCU.sv:185$1775 ($lt).
Removed top 21 bits (of 32) from port B of cell MCCU.$verific$sub_115$../../submodules/MCCU/hdl/MCCU.sv:189$1776 ($sub).
Removed top 53 bits (of 64) from port B of cell MCCU.$verific$LessThan_251$../../submodules/MCCU/hdl/MCCU.sv:198$1779 ($lt).
Removed top 21 bits (of 32) from port B of cell MCCU.$verific$sub_252$../../submodules/MCCU/hdl/MCCU.sv:202$1780 ($sub).
Removed top 53 bits (of 64) from wire MCCU.ccc_suma_int[0].
Removed top 7 bits (of 8) from wire MCCU.events_weights_int[1][3].
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_7$../../submodules/RDC/hdl/RDC.sv:79$1924 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_44$../../submodules/RDC/hdl/RDC.sv:79$1931 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_81$../../submodules/RDC/hdl/RDC.sv:79$1938 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_118$../../submodules/RDC/hdl/RDC.sv:79$1945 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_155$../../submodules/RDC/hdl/RDC.sv:79$1952 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_192$../../submodules/RDC/hdl/RDC.sv:79$1959 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_229$../../submodules/RDC/hdl/RDC.sv:79$1966 ($add).
Removed top 7 bits (of 8) from port B of cell RDC(N_CORES=2,CORE_EVENTS=4).$verific$add_266$../../submodules/RDC/hdl/RDC.sv:79$1973 ($add).

7.8. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

7.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..
Removed 0 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

7.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.11. Executing OPT pass (performing simple optimizations).

7.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

7.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

7.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

7.11.5. Finished fast OPT passes.

7.12. Printing statistics.

=== AXI_PMU ===

   Number of wires:                 45
   Number of wire bits:            143
   Number of public wires:          45
   Number of public wire bits:     143
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)      1

=== AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2) ===

   Number of wires:                518
   Number of wire bits:           9465
   Number of public wires:         131
   Number of public wire bits:    2754
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                458
     $add                           37
     $and                           56
     $dff                           43
     $eq                            63
     $logic_not                      1
     $lt                             2
     $mux                          244
     $not                            7
     $or                             2
     $reduce_or                      1
     MCCU                            1
     RDC(N_CORES=2,CORE_EVENTS=4)      1

=== MCCU ===

   Number of wires:                 70
   Number of wire bits:           1265
   Number of public wires:          24
   Number of public wire bits:     531
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 50
     $add                            6
     $and                            8
     $dff                            2
     $lt                             4
     $mux                           23
     $not                            3
     $sub                            4

=== RDC(N_CORES=2,CORE_EVENTS=4) ===

   Number of wires:                124
   Number of wire bits:            832
   Number of public wires:          29
   Number of public wire bits:     325
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                121
     $add                            8
     $and                            8
     $dff                           18
     $eq                             8
     $le                             8
     $lt                             8
     $mux                           60
     $or                             2
     $reduce_or                      1

=== design hierarchy ===

   AXI_PMU                           1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)      1
       MCCU                          1
       RDC(N_CORES=2,CORE_EVENTS=4)      1

   Number of wires:                757
   Number of wire bits:          11705
   Number of public wires:         229
   Number of public wire bits:    3753
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                627
     $add                           51
     $and                           72
     $dff                           63
     $eq                            71
     $le                             8
     $logic_not                      1
     $lt                            14
     $mux                          327
     $not                           10
     $or                             4
     $reduce_or                      2
     $sub                            4

7.13. Executing CHECK pass (checking for obvious problems).
checking module AXI_PMU..
checking module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
checking module MCCU..
checking module RDC(N_CORES=2,CORE_EVENTS=4)..
found and reported 0 problems.

8. Executing PROC pass (convert processes to netlists).

8.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.3. Executing PROC_INIT pass (extract init attributes).

8.4. Executing PROC_ARST pass (detect async resets in processes).

8.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.6. Executing PROC_DLATCH pass (convert process syncs to latches).

8.7. Executing PROC_DFF pass (convert process syncs to FFs).

8.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=2,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
  Optimizing cells in module \MCCU.
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing FSM pass (extract and optimize FSM).

10.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).axi_bresp as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).axi_rresp as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=2,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
  Optimizing cells in module \MCCU.
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
Performed a total of 0 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

11.6. Executing OPT_RMDFF pass (remove dff with constant values).

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

11.9. Finished OPT passes. (There is nothing left to do.)

12. Executing MEMORY pass.

12.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

12.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

12.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

12.5. Executing MEMORY_COLLECT pass (generating $mem cells).

12.6. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MCCU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC(N_CORES=2,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
  Optimizing cells in module \MCCU.
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

13.6. Executing OPT_RMDFF pass (remove dff with constant values).

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

13.9. Finished OPT passes. (There is nothing left to do.)

14. Executing TECHMAP pass (map to technology primitives).

14.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=1:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=50:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=33:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=33:Y_WIDTH=34:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=34:Y_WIDTH=35:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=35:Y_WIDTH=36:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=36:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=38:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=38:Y_WIDTH=39:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=39:Y_WIDTH=40:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=40:Y_WIDTH=41:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=41:Y_WIDTH=42:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=42:Y_WIDTH=43:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=43:Y_WIDTH=44:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=44:Y_WIDTH=45:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=45:Y_WIDTH=46:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=46:Y_WIDTH=47:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=47:Y_WIDTH=48:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=48:Y_WIDTH=49:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=49:Y_WIDTH=50:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=34 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=34\Y_WIDTH=35 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=35\Y_WIDTH=36 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=36\Y_WIDTH=37 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=37\Y_WIDTH=38 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=38\Y_WIDTH=39 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=39\Y_WIDTH=40 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=40\Y_WIDTH=41 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=41\Y_WIDTH=42 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=42\Y_WIDTH=43 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=43\Y_WIDTH=44 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=44\Y_WIDTH=45 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=45\Y_WIDTH=46 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=46\Y_WIDTH=47 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=47\Y_WIDTH=48 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=48\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=49\Y_WIDTH=50 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=50\Y_WIDTH=50 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=34 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=35 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=36 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=37 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=38 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=39 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=40 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=41 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=42 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=43 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=44 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=45 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=46 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=47 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=48 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=49 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=50 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=10:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=11:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=11\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=9\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=64 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
No more expansions possible.
<suppressed ~15620 debug messages>

15. Executing OPT pass (performing simple optimizations).

15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
<suppressed ~6879 debug messages>
Optimizing module MCCU.
<suppressed ~1263 debug messages>
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).
<suppressed ~632 debug messages>

15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
<suppressed ~669 debug messages>
Finding identical cells in module `\MCCU'.
<suppressed ~2478 debug messages>
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
<suppressed ~504 debug messages>
Removed a total of 1217 cells.

15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MCCU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC(N_CORES=2,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
  Optimizing cells in module \MCCU.
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
Performed a total of 0 changes.

15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

15.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$31421 ($_DFF_P_) from module MCCU.
Replaced 1 DFF cells.

15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..
Removed 2271 unused cells and 4901 unused wires.
<suppressed ~2274 debug messages>

15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
<suppressed ~50 debug messages>
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

15.9. Rerunning OPT passes. (Maybe there is more to do..)

15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \AXI_PMU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MCCU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC(N_CORES=2,CORE_EVENTS=4)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \AXI_PMU.
  Optimizing cells in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
  Optimizing cells in module \MCCU.
  Optimizing cells in module \RDC(N_CORES=2,CORE_EVENTS=4).
Performed a total of 0 changes.

15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\AXI_PMU'.
Finding identical cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Finding identical cells in module `\MCCU'.
Finding identical cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)'.
Removed a total of 0 cells.

15.13. Executing OPT_RMDFF pass (remove dff with constant values).

15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \AXI_PMU..
Finding unused cells or wires in module \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)..
Finding unused cells or wires in module \MCCU..
Finding unused cells or wires in module \RDC(N_CORES=2,CORE_EVENTS=4)..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module AXI_PMU.
Optimizing module AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2).
Optimizing module MCCU.
Optimizing module RDC(N_CORES=2,CORE_EVENTS=4).

15.16. Finished OPT passes. (There is nothing left to do.)

16. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=10.32) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\AXI_PMU':
Mapping DFF cells in module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)':
  mapped 1076 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\MCCU':
  mapped 86 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\RDC(N_CORES=2,CORE_EVENTS=4)':
  mapped 137 $_DFF_P_ cells to \DFFPOSX1 cells.

17. Executing ABC pass (technology mapping using ABC).

17.1. Extracting gate netlist of module `\AXI_PMU' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

17.2. Extracting gate netlist of module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)' to `<abc-temp-dir>/input.blif'..
Extracted 13752 gates and 14901 wires to a netlist network with 1147 inputs and 1079 outputs.

17.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   9345 (  9.6 %)   Cap =  5.7 ff (  7.7 %)   Area =    25897.85 ( 84.6 %)   Delay =  4770.58 ps  (  8.8 %)               
ABC: Path  0 --      40 : 0    2 pi      A =   0.00  Df =  13.5   -1.9 ps  S =  25.5 ps  Cin =  0.0 ff  Cout =   6.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    2227 : 1    6 INVX4   A =   3.29  Df =  38.6   -0.1 ps  S =  15.8 ps  Cin =  5.1 ff  Cout =  14.5 ff  Cmax =1041.0 ff  G =  282  
ABC: Path  2 --    7398 : 3    2 NOR3X1  A =   2.82  Df =  98.8  -18.1 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.0 ff  Cmax =  96.9 ff  G =  189  
ABC: Path  3 --    7399 : 1   10 BUFX4   A =   2.82  Df = 134.7   -4.2 ps  S =  30.5 ps  Cin =  3.9 ff  Cout =  19.8 ff  Cmax = 999.3 ff  G =  495  
ABC: Path  4 --    7439 : 2    4 NAND2X1 A =   1.88  Df = 181.5  -14.9 ps  S =  84.1 ps  Cin =  2.0 ff  Cout =  12.7 ff  Cmax =   0.0 ff  G =  607  
ABC: Path  5 --    7516 : 2    2 XOR2X1  A =   4.69  Df = 257.3  -25.6 ps  S =  71.0 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path  6 --    7545 : 2    4 XNOR2X1 A =   4.69  Df = 343.9  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path  7 --    7622 : 2    2 XOR2X1  A =   4.69  Df = 419.8  -25.6 ps  S =  71.6 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path  8 --    7651 : 2    4 XNOR2X1 A =   4.69  Df = 508.0  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path  9 --    7769 : 2    2 XOR2X1  A =   4.69  Df = 584.1  -25.5 ps  S =  71.6 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 10 --    7804 : 2    4 XNOR2X1 A =   4.69  Df = 672.3  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 11 --    7893 : 2    2 XOR2X1  A =   4.69  Df = 748.5  -25.5 ps  S =  71.6 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 12 --    7922 : 2    4 XNOR2X1 A =   4.69  Df = 835.0  -31.6 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 13 --    7923 : 2    2 XOR2X1  A =   4.69  Df = 911.0  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 14 --    8121 : 2    4 XNOR2X1 A =   4.69  Df = 997.5  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 15 --    8268 : 2    2 XOR2X1  A =   4.69  Df =1073.5  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 16 --    8348 : 2    4 XNOR2X1 A =   4.69  Df =1160.0  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 17 --    8467 : 2    2 XOR2X1  A =   4.69  Df =1236.0  -25.6 ps  S =  71.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 18 --    8498 : 2    4 XNOR2X1 A =   4.69  Df =1324.1  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 19 --    8594 : 2    2 XOR2X1  A =   4.69  Df =1400.3  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 20 --    8648 : 2    4 XNOR2X1 A =   4.69  Df =1488.4  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 21 --    8870 : 2    2 XOR2X1  A =   4.69  Df =1564.5  -25.5 ps  S =  70.8 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 22 --    8901 : 2    4 XNOR2X1 A =   4.69  Df =1651.0  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 23 --    9322 : 2    2 XOR2X1  A =   4.69  Df =1727.0  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 24 --    9357 : 2    4 XNOR2X1 A =   4.69  Df =1813.5  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 25 --    9569 : 2    2 XOR2X1  A =   4.69  Df =1889.5  -25.6 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 26 --    9627 : 2    4 XNOR2X1 A =   4.69  Df =1976.0  -31.7 ps  S =  84.8 ps  Cin =  5.1 ff  Cout =  11.9 ff  Cmax = 228.3 ff  G =  228  
ABC: Path 27 --    9628 : 2    2 XOR2X1  A =   4.69  Df =2051.9  -25.6 ps  S =  71.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 28 --    9828 : 2    4 XNOR2X1 A =   4.69  Df =2140.1  -33.2 ps  S =  87.1 ps  Cin =  5.1 ff  Cout =  12.4 ff  Cmax = 228.3 ff  G =  233  
ABC: Path 29 --    9829 : 2    2 XOR2X1  A =   4.69  Df =2216.3  -25.5 ps  S =  70.9 ps  Cin =  5.3 ff  Cout =   8.3 ff  Cmax = 223.3 ff  G =  151  
ABC: Path 30 --    9831 : 3    2 AOI21X1 A =   2.82  Df =2263.7  -18.9 ps  S =  53.4 ps  Cin =  2.6 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  290  
ABC: Path 31 --    9836 : 3    1 OAI21X1 A =   2.82  Df =2311.4  -39.7 ps  S =  43.2 ps  Cin =  2.5 ff  Cout =   2.7 ff  Cmax = 229.4 ff  G =  110  
ABC: Path 32 --    9838 : 3    2 AOI21X1 A =   2.82  Df =2352.2  -24.4 ps  S =  53.7 ps  Cin =  2.6 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  290  
ABC: Path 33 --    9843 : 3    1 OAI21X1 A =   2.82  Df =2399.9  -45.1 ps  S =  43.1 ps  Cin =  2.5 ff  Cout =   2.7 ff  Cmax = 229.4 ff  G =  110  
ABC: Path 34 --    9845 : 3    2 AOI21X1 A =   2.82  Df =2441.5  -24.2 ps  S =  56.9 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 35 --    9847 : 3    3 OAI21X1 A =   2.82  Df =2504.4  -51.6 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.1 ff  Cmax = 229.4 ff  G =  324  
ABC: Path 36 --    9849 : 3    2 AOI21X1 A =   2.82  Df =2551.7  -48.4 ps  S =  53.5 ps  Cin =  2.6 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  290  
ABC: Path 37 --    9853 : 3    2 OAI21X1 A =   2.82  Df =2617.4  -78.3 ps  S =  69.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 38 --    9855 : 3    2 AOI21X1 A =   2.82  Df =2665.2  -73.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 39 --    9857 : 3    2 OAI21X1 A =   2.82  Df =2728.8 -101.4 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 40 --    9859 : 3    2 AOI21X1 A =   2.82  Df =2776.9  -88.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 41 --    9861 : 3    2 OAI21X1 A =   2.82  Df =2840.5 -116.4 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 42 --    9863 : 3    2 AOI21X1 A =   2.82  Df =2888.6  -90.3 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 43 --    9865 : 3    2 OAI21X1 A =   2.82  Df =2952.1 -118.7 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 44 --    9867 : 3    2 AOI21X1 A =   2.82  Df =2999.5  -91.5 ps  S =  53.4 ps  Cin =  2.6 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  290  
ABC: Path 45 --    9871 : 3    2 OAI21X1 A =   2.82  Df =3065.2 -121.4 ps  S =  69.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 46 --    9873 : 3    2 AOI21X1 A =   2.82  Df =3113.0 -116.1 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 47 --    9875 : 3    2 OAI21X1 A =   2.82  Df =3176.6 -144.5 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 48 --    9877 : 3    2 AOI21X1 A =   2.82  Df =3224.7 -123.0 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 49 --    9879 : 3    2 OAI21X1 A =   2.82  Df =3288.2 -151.4 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 50 --    9881 : 3    2 AOI21X1 A =   2.82  Df =3336.3 -122.7 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  312  
ABC: Path 51 --    9883 : 3    2 OAI21X1 A =   2.82  Df =3399.9 -151.1 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  326  
ABC: Path 52 --    9885 : 3    2 AOI21X1 A =   2.82  Df =3447.2 -145.6 ps  S =  53.4 ps  Cin =  2.6 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  290  
ABC: Path 53 --    9891 : 3    2 OAI21X1 A =   2.82  Df =3508.8 -173.3 ps  S =  63.3 ps  Cin =  2.5 ff  Cout =   7.0 ff  Cmax = 229.4 ff  G =  277  
ABC: Path 54 --    9892 : 2    1 NAND2X1 A =   1.88  Df =3535.3 -138.1 ps  S =  33.4 ps  Cin =  2.0 ff  Cout =   2.0 ff  Cmax =   0.0 ff  G =   98  
ABC: Path 55 --    9893 : 3    2 OAI21X1 A =   2.82  Df =3575.2 -149.7 ps  S =  68.9 ps  Cin =  2.5 ff  Cout =   8.4 ff  Cmax = 229.4 ff  G =  329  
ABC: Path 56 --    9909 : 2    3 XOR2X1  A =   4.69  Df =3655.0  -29.7 ps  S =  79.3 ps  Cin =  5.3 ff  Cout =  10.0 ff  Cmax = 223.3 ff  G =  177  
ABC: Path 57 --    9910 : 2    3 XNOR2X1 A =   4.69  Df =3737.3  -28.8 ps  S =  77.3 ps  Cin =  5.1 ff  Cout =  10.4 ff  Cmax = 228.3 ff  G =  199  
ABC: Path 58 --   10190 : 3    1 OAI21X1 A =   2.82  Df =3774.6   -7.1 ps  S =  55.8 ps  Cin =  2.5 ff  Cout =   5.6 ff  Cmax = 229.4 ff  G =  215  
ABC: Path 59 --   10191 : 2    5 XNOR2X1 A =   4.69  Df =3864.9  -38.8 ps  S =  99.1 ps  Cin =  5.1 ff  Cout =  14.8 ff  Cmax = 228.3 ff  G =  279  
ABC: Path 60 --   10399 : 2    1 XOR2X1  A =   4.69  Df =3933.4  -20.9 ps  S =  57.7 ps  Cin =  5.3 ff  Cout =   5.6 ff  Cmax = 223.3 ff  G =  100  
ABC: Path 61 --   10400 : 2    5 XNOR2X1 A =   4.69  Df =4028.0  -37.5 ps  S =  98.9 ps  Cin =  5.1 ff  Cout =  14.8 ff  Cmax = 228.3 ff  G =  279  
ABC: Path 62 --   10616 : 2    1 XOR2X1  A =   4.69  Df =4096.4  -20.9 ps  S =  57.6 ps  Cin =  5.3 ff  Cout =   5.6 ff  Cmax = 223.3 ff  G =  100  
ABC: Path 63 --   10617 : 2    5 XNOR2X1 A =   4.69  Df =4191.0  -37.5 ps  S =  98.9 ps  Cin =  5.1 ff  Cout =  14.8 ff  Cmax = 228.3 ff  G =  279  
ABC: Path 64 --   11150 : 2    1 XOR2X1  A =   4.69  Df =4259.4  -20.9 ps  S =  57.7 ps  Cin =  5.3 ff  Cout =   5.6 ff  Cmax = 223.3 ff  G =  100  
ABC: Path 65 --   11151 : 2    3 XNOR2X1 A =   4.69  Df =4327.9  -23.7 ps  S =  60.4 ps  Cin =  5.1 ff  Cout =   6.8 ff  Cmax = 228.3 ff  G =  131  
ABC: Path 66 --   11416 : 2    1 OR2X1   A =   2.35  Df =4379.4  -25.2 ps  S =  18.3 ps  Cin =  2.4 ff  Cout =   2.1 ff  Cmax =  70.0 ff  G =   84  
ABC: Path 67 --   11417 : 2    1 NAND2X1 A =   1.88  Df =4398.4   -8.0 ps  S =  49.1 ps  Cin =  2.0 ff  Cout =   5.4 ff  Cmax =   0.0 ff  G =  260  
ABC: Path 68 --   11418 : 2    2 XOR2X1  A =   4.69  Df =4447.6  -15.1 ps  S =  54.6 ps  Cin =  5.3 ff  Cout =   4.8 ff  Cmax = 223.3 ff  G =   83  
ABC: Path 69 --   11419 : 2    1 AND2X1  A =   2.35  Df =4488.6  -10.1 ps  S =  30.8 ps  Cin =  2.1 ff  Cout =   2.7 ff  Cmax = 137.4 ff  G =  127  
ABC: Path 70 --   11547 : 3    2 OAI21X1 A =   2.82  Df =4531.3  -12.2 ps  S =  55.3 ps  Cin =  2.5 ff  Cout =   5.1 ff  Cmax = 229.4 ff  G =  205  
ABC: Path 71 --   11551 : 3    1 AOI21X1 A =   2.82  Df =4567.9  -15.4 ps  S =  31.0 ps  Cin =  2.6 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  117  
ABC: Path 72 --   11556 : 3    1 NOR3X1  A =   2.82  Df =4620.2   -0.3 ps  S =  54.2 ps  Cin =  3.1 ff  Cout =   3.0 ff  Cmax =  96.9 ff  G =   96  
ABC: Path 73 --   11561 : 3    1 NOR3X1  A =   2.82  Df =4680.2  -13.0 ps  S =  53.3 ps  Cin =  3.1 ff  Cout =   3.0 ff  Cmax =  96.9 ff  G =   96  
ABC: Path 74 --   11564 : 3    1 NOR3X1  A =   2.82  Df =4727.6   -8.9 ps  S =  50.1 ps  Cin =  3.1 ff  Cout =   2.4 ff  Cmax =  96.9 ff  G =   75  
ABC: Path 75 --   11565 : 3    1 AOI21X1 A =   2.82  Df =4752.4   -9.5 ps  S =  30.0 ps  Cin =  2.6 ff  Cout =   2.8 ff  Cmax =   0.0 ff  G =  105  
ABC: Path 76 --   11570 : 3    1 NAND3X1 A =   2.35  Df =4770.6   -3.7 ps  S =  26.6 ps  Cin =  2.7 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi39 (\S_AXI_ARESETN_i).  End-point = po1077 (\int_quota_o).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:     1217
ABC RESULTS:            AND2X2 cells:       47
ABC RESULTS:           AOI21X1 cells:      823
ABC RESULTS:           AOI22X1 cells:      557
ABC RESULTS:             BUFX2 cells:      682
ABC RESULTS:             BUFX4 cells:       12
ABC RESULTS:           CLKBUF1 cells:        1
ABC RESULTS:             INVX1 cells:      204
ABC RESULTS:             INVX4 cells:        1
ABC RESULTS:            MUX2X1 cells:      350
ABC RESULTS:           NAND2X1 cells:     1011
ABC RESULTS:           NAND3X1 cells:      578
ABC RESULTS:            NOR2X1 cells:     1129
ABC RESULTS:            NOR3X1 cells:      436
ABC RESULTS:           OAI21X1 cells:     1005
ABC RESULTS:             OR2X1 cells:      210
ABC RESULTS:             OR2X2 cells:        7
ABC RESULTS:           XNOR2X1 cells:      721
ABC RESULTS:            XOR2X1 cells:      354
ABC RESULTS:        internal signals:    12675
ABC RESULTS:           input signals:     1147
ABC RESULTS:          output signals:     1079
Removing temp directory.

17.3. Extracting gate netlist of module `\MCCU' to `<abc-temp-dir>/input.blif'..
Extracted 1937 gates and 2165 wires to a netlist network with 226 inputs and 88 outputs.

17.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   1393 ( 13.3 %)   Cap =  5.1 ff (  6.3 %)   Area =     3566.68 ( 87.2 %)   Delay =   940.29 ps  ( 11.7 %)               
ABC: Path  0 --     216 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     369 : 1    4 BUFX4   A =   2.82  Df =  56.8  -19.4 ps  S =  25.2 ps  Cin =  3.9 ff  Cout =  18.5 ff  Cmax = 999.3 ff  G =  448  
ABC: Path  2 --     426 : 2    2 XOR2X1  A =   4.69  Df = 115.5  -23.7 ps  S =  58.0 ps  Cin =  5.3 ff  Cout =   5.3 ff  Cmax = 223.3 ff  G =   99  
ABC: Path  3 --     427 : 3    3 AOI21X1 A =   2.82  Df = 153.0  -21.9 ps  S =  55.4 ps  Cin =  2.6 ff  Cout =   8.1 ff  Cmax =   0.0 ff  G =  312  
ABC: Path  4 --     430 : 3    3 OAI21X1 A =   2.82  Df = 217.5  -50.8 ps  S =  70.7 ps  Cin =  2.5 ff  Cout =   8.6 ff  Cmax = 229.4 ff  G =  339  
ABC: Path  5 --     431 : 4    3 AOI22X1 A =   3.29  Df = 258.5  -44.9 ps  S =  70.6 ps  Cin =  2.8 ff  Cout =   8.1 ff  Cmax =   0.0 ff  G =  286  
ABC: Path  6 --     434 : 3    3 OAI21X1 A =   2.82  Df = 324.3  -72.8 ps  S =  67.1 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  308  
ABC: Path  7 --     436 : 3    1 AOI21X1 A =   2.82  Df = 363.0  -77.8 ps  S =  30.1 ps  Cin =  2.6 ff  Cout =   2.8 ff  Cmax =   0.0 ff  G =  106  
ABC: Path  8 --     439 : 3    3 OAI21X1 A =   2.82  Df = 421.4 -107.9 ps  S =  67.4 ps  Cin =  2.5 ff  Cout =   7.5 ff  Cmax = 229.4 ff  G =  296  
ABC: Path  9 --     440 : 3    1 NAND3X1 A =   2.35  Df = 445.9  -98.8 ps  S =  40.0 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  108  
ABC: Path 10 --     441 : 3    4 NAND3X1 A =   2.35  Df = 501.3 -125.0 ps  S =  72.9 ps  Cin =  2.7 ff  Cout =   9.9 ff  Cmax =   0.0 ff  G =  364  
ABC: Path 11 --     443 : 3    3 NOR3X1  A =   2.82  Df = 555.1 -116.6 ps  S =  76.4 ps  Cin =  3.1 ff  Cout =   7.8 ff  Cmax =  96.9 ff  G =  247  
ABC: Path 12 --     661 : 3    3 NOR3X1  A =   2.82  Df = 631.7 -132.5 ps  S =  93.4 ps  Cin =  3.1 ff  Cout =  11.4 ff  Cmax =  96.9 ff  G =  350  
ABC: Path 13 --     699 : 3    3 NAND3X1 A =   2.35  Df = 672.2 -112.1 ps  S =  68.6 ps  Cin =  2.7 ff  Cout =   9.0 ff  Cmax =   0.0 ff  G =  332  
ABC: Path 14 --     755 : 3    3 NOR3X1  A =   2.82  Df = 716.6 -112.3 ps  S =  73.1 ps  Cin =  3.1 ff  Cout =   7.0 ff  Cmax =  96.9 ff  G =  220  
ABC: Path 15 --     783 : 3    3 NAND3X1 A =   2.35  Df = 753.1  -86.6 ps  S =  73.7 ps  Cin =  2.7 ff  Cout =  10.2 ff  Cmax =   0.0 ff  G =  363  
ABC: Path 16 --     804 : 2    3 OR2X2   A =   2.82  Df = 812.5  -80.4 ps  S =  35.6 ps  Cin =  2.3 ff  Cout =  11.7 ff  Cmax = 519.7 ff  G =  489  
ABC: Path 17 --     811 : 3    1 OAI21X1 A =   2.82  Df = 852.6 -100.8 ps  S =  37.1 ps  Cin =  2.5 ff  Cout =   1.6 ff  Cmax = 229.4 ff  G =   61  
ABC: Path 18 --     812 : 1    1 INVX1   A =   1.41  Df = 876.4 -124.5 ps  S =  10.9 ps  Cin =  1.5 ff  Cout =   2.7 ff  Cmax = 238.8 ff  G =  175  
ABC: Path 19 --     814 : 3    1 OAI21X1 A =   2.82  Df = 920.2  -40.0 ps  S =  45.0 ps  Cin =  2.5 ff  Cout =   2.7 ff  Cmax = 229.4 ff  G =  108  
ABC: Path 20 --     820 : 3    1 AOI21X1 A =   2.82  Df = 940.3  -32.0 ps  S =  16.2 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi215 (\ccc_suma_int[1] [1]).  End-point = po30 ($verific$n1664$1753 [30]).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       99
ABC RESULTS:           AOI21X1 cells:      173
ABC RESULTS:           AOI22X1 cells:       35
ABC RESULTS:             BUFX2 cells:       63
ABC RESULTS:             BUFX4 cells:        1
ABC RESULTS:             INVX1 cells:      121
ABC RESULTS:           NAND2X1 cells:      290
ABC RESULTS:           NAND3X1 cells:      113
ABC RESULTS:            NOR2X1 cells:       51
ABC RESULTS:            NOR3X1 cells:       55
ABC RESULTS:           OAI21X1 cells:      172
ABC RESULTS:             OR2X1 cells:       76
ABC RESULTS:             OR2X2 cells:        1
ABC RESULTS:           XNOR2X1 cells:       89
ABC RESULTS:            XOR2X1 cells:       52
ABC RESULTS:          _const0_ cells:        2
ABC RESULTS:        internal signals:     1851
ABC RESULTS:           input signals:      226
ABC RESULTS:          output signals:       88
Removing temp directory.

17.4. Extracting gate netlist of module `\RDC(N_CORES=2,CORE_EVENTS=4)' to `<abc-temp-dir>/input.blif'..
Extracted 1330 gates and 1543 wires to a netlist network with 211 inputs and 138 outputs.

17.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/PMU_configs/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    881 ( 25.8 %)   Cap =  4.6 ff (  5.8 %)   Area =     2224.01 ( 87.7 %)   Delay =   420.75 ps  ( 12.4 %)               
ABC: Path  0 --      58 : 0    1 pi      A =   0.00  Df =   3.1   -3.1 ps  S =  10.3 ps  Cin =  0.0 ff  Cout =   1.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     520 : 1    6 BUFX2   A =   2.35  Df =  55.9   -5.4 ps  S =  41.6 ps  Cin =  1.5 ff  Cout =  17.5 ff  Cmax = 518.7 ff  G = 1106  
ABC: Path  2 --    1170 : 4    1 AOI22X1 A =   3.29  Df = 102.8   -6.4 ps  S =  49.2 ps  Cin =  2.8 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  108  
ABC: Path  3 --    1173 : 3    1 NOR3X1  A =   2.82  Df = 159.9  -12.2 ps  S =  51.2 ps  Cin =  3.1 ff  Cout =   2.7 ff  Cmax =  96.9 ff  G =   85  
ABC: Path  4 --    1179 : 3    1 OAI21X1 A =   2.82  Df = 196.0   -9.4 ps  S =  44.0 ps  Cin =  2.5 ff  Cout =   2.9 ff  Cmax = 229.4 ff  G =  116  
ABC: Path  5 --    1180 : 4    1 AOI22X1 A =   3.29  Df = 220.7   -6.1 ps  S =  47.5 ps  Cin =  2.8 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =   95  
ABC: Path  6 --    1185 : 3    1 OAI21X1 A =   2.82  Df = 270.3  -30.5 ps  S =  42.5 ps  Cin =  2.5 ff  Cout =   2.7 ff  Cmax = 229.4 ff  G =  108  
ABC: Path  7 --    1187 : 3    1 AOI21X1 A =   2.82  Df = 296.6  -15.7 ps  S =  35.2 ps  Cin =  2.6 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =  152  
ABC: Path  8 --    1188 : 1    7 BUFX4   A =   2.82  Df = 350.7  -29.3 ps  S =  39.3 ps  Cin =  3.9 ff  Cout =  28.8 ff  Cmax = 999.3 ff  G =  712  
ABC: Path  9 --    1195 : 3    1 MUX2X1  A =   3.75  Df = 390.8   -7.8 ps  S =  39.1 ps  Cin =  3.1 ff  Cout =   1.9 ff  Cmax =  75.1 ff  G =   59  
ABC: Path 10 --    1196 : 2    1 AND2X2  A =   2.82  Df = 420.7   -2.9 ps  S =   5.0 ps  Cin =  1.8 ff  Cout =   0.0 ff  Cmax = 505.1 ff  G =    0  
ABC: Start-point = pi57 (\max_value[7] [0]).  End-point = po125 ($verific$n1136$1917 [3]).
ABC: + write_blif <abc-temp-dir>/output.blif 

17.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       65
ABC RESULTS:            AND2X2 cells:       12
ABC RESULTS:           AOI21X1 cells:      125
ABC RESULTS:           AOI22X1 cells:       64
ABC RESULTS:             BUFX2 cells:       54
ABC RESULTS:             BUFX4 cells:       11
ABC RESULTS:             INVX1 cells:      162
ABC RESULTS:            MUX2X1 cells:       30
ABC RESULTS:           NAND2X1 cells:       76
ABC RESULTS:           NAND3X1 cells:       38
ABC RESULTS:            NOR2X1 cells:       40
ABC RESULTS:            NOR3X1 cells:       12
ABC RESULTS:           OAI21X1 cells:      111
ABC RESULTS:             OR2X1 cells:       32
ABC RESULTS:           XNOR2X1 cells:       47
ABC RESULTS:            XOR2X1 cells:        2
ABC RESULTS:        internal signals:     1194
ABC RESULTS:           input signals:      211
ABC RESULTS:          output signals:      138
Removing temp directory.

18. Printing statistics.

=== AXI_PMU ===

   Number of wires:                 45
   Number of wire bits:            143
   Number of public wires:          45
   Number of public wire bits:     143
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)      1

   Area for cell type \AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2) is unknown!

=== AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2) ===

   Number of wires:              14507
   Number of wire bits:          27102
   Number of public wires:         131
   Number of public wire bits:    2754
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10423
     AND2X1                       1217
     AND2X2                         47
     AOI21X1                       823
     AOI22X1                       557
     BUFX2                         682
     BUFX4                          12
     CLKBUF1                         1
     DFFPOSX1                     1076
     INVX1                         204
     INVX4                           1
     MCCU                            1
     MUX2X1                        350
     NAND2X1                      1011
     NAND3X1                       578
     NOR2X1                       1129
     NOR3X1                        436
     OAI21X1                      1005
     OR2X1                         210
     OR2X2                           7
     RDC(N_CORES=2,CORE_EVENTS=4)      1
     XNOR2X1                       721
     XOR2X1                        354

   Area for cell type \MCCU is unknown!
   Area for cell type \RDC(N_CORES=2,CORE_EVENTS=4) is unknown!

   Chip area for module '\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)': 34482.286800

=== MCCU ===

   Number of wires:               2301
   Number of wire bits:           4760
   Number of public wires:          24
   Number of public wire bits:     531
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1477
     AND2X1                         99
     AOI21X1                       173
     AOI22X1                        35
     BUFX2                          63
     BUFX4                           1
     DFFPOSX1                       86
     INVX1                         121
     NAND2X1                       290
     NAND3X1                       113
     NOR2X1                         51
     NOR3X1                         55
     OAI21X1                       172
     OR2X1                          76
     OR2X2                           1
     XNOR2X1                        89
     XOR2X1                         52

   Chip area for module '\MCCU': 4252.796600

=== RDC(N_CORES=2,CORE_EVENTS=4) ===

   Number of wires:               1602
   Number of wire bits:           2962
   Number of public wires:          29
   Number of public wire bits:     325
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1018
     AND2X1                         65
     AND2X2                         12
     AOI21X1                       125
     AOI22X1                        64
     BUFX2                          54
     BUFX4                          11
     DFFPOSX1                      137
     INVX1                         162
     MUX2X1                         30
     NAND2X1                        76
     NAND3X1                        38
     NOR2X1                         40
     NOR3X1                         12
     OAI21X1                       111
     OR2X1                          32
     XNOR2X1                        47
     XOR2X1                          2

   Chip area for module '\RDC(N_CORES=2,CORE_EVENTS=4)': 3317.012400

=== design hierarchy ===

   AXI_PMU                           1
     AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)      1
       MCCU                          1
       RDC(N_CORES=2,CORE_EVENTS=4)      1

   Number of wires:              18455
   Number of wire bits:          34967
   Number of public wires:         229
   Number of public wire bits:    3753
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              12916
     AND2X1                       1381
     AND2X2                         59
     AOI21X1                      1121
     AOI22X1                       656
     BUFX2                         799
     BUFX4                          24
     CLKBUF1                         1
     DFFPOSX1                     1299
     INVX1                         487
     INVX4                           1
     MUX2X1                        380
     NAND2X1                      1377
     NAND3X1                       729
     NOR2X1                       1220
     NOR3X1                        503
     OAI21X1                      1288
     OR2X1                         318
     OR2X2                           8
     XNOR2X1                       857
     XOR2X1                        408

   Chip area for top module '\AXI_PMU': 42052.095800

Warning: Driver-driver conflict for $verific$n1729$1754 [74] between cell $auto$simplemap.cc:420:simplemap_dff$31432.D and constant 1'0 in MCCU: Resolved using constant.
Warning: Driver-driver conflict for $verific$n1729$1754 [10] between cell $auto$simplemap.cc:420:simplemap_dff$31368.D and constant 1'0 in MCCU: Resolved using constant.
Removed 0 unused cells and 6614 unused wires.

19. Executing Verilog backend.
Dumping module `\AXI_PMU'.
Dumping module `\AXI_PMU_interface_v1_0_S00_AXI(N_COUNTERS=19,N_CONF_REGS=5,N_CORES=2)'.
Dumping module `\MCCU'.
Dumping module `\RDC(N_CORES=2,CORE_EVENTS=4)'.

Warnings: 3 unique messages, 3 total
End of script. Logfile hash: 0242997886
CPU: user 9.62s system 0.10s, MEM: 236.52 MB total, 116.27 MB resident
Yosys 0.8+472 (git sha1 c907899, clang 3.8.0-2ubuntu4 -fPIC -Os)
Time spent: 18% 38x opt_merge (1 sec), 12% 38x opt_clean (1 sec), ...
