
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite -- YosysHQ Edition [202107021222]     |
 |                                                                            |
 |  Copyright (C) 2012 - 2021 YosysHQ GmbH                                    |
 |                                                                            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4081 (git sha1 862e84eb, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `yosys_45_ft.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file './hdl_wrappers/top_ft.sv'

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/crossbar/hdl/crossbar.sv'

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/triple_reg.sv'

4. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/sbf_reg.sv'

5. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/ham_reg.sv'

6. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/reg_sbf.sv'

7. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/way3_voter.sv'

8. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/hamming16t11d_enc.sv'

9. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/hamming16t11d_dec.sv'

10. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/com_tr.sv'

11. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../hdl/PMU_raw.sv'

12. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../hdl/pmu_ahb.sv'

13. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/MCCU/hdl/MCCU.sv'

14. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/RDC/hdl/RDC.sv'

15. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/quota/PMU_quota.sv'

16. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/counters/PMU_counters.sv'

17. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/overflow/PMU_overflow.sv'

18. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/hamming32t26d_dec.sv'

19. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/hamming32t26d_enc.sv'

20. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/way3ua_voter.sv'

21. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file '../../../submodules/seu_ip/way3u2a_voter.sv'

22. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jun21_SW_Release, released at Thu Jul  1 15:20:54 2021.
Statically elaborating the Verific parse tree.
VERIFIC-INFO [VERI-1018] ./hdl_wrappers/top_ft.sv:20: compiling module 'top_ft'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/sbf_reg.sv:16: compiling module 'sbf_reg'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/ham_reg.sv:16: compiling module 'ham_reg'
Checking initial blocks for assertions.
Adding Verilog module 'top_ft' to elaboration queue.
Running hier_tree::Elaborate().
VERIFIC-INFO [VERI-1018] ./hdl_wrappers/top_ft.sv:20: compiling module 'top_ft'
VERIFIC-INFO [VERI-1018] ../../../hdl/pmu_ahb.sv:24: compiling module 'pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/triple_reg.sv:16: compiling module 'triple_reg(IN_WIDTH=1)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/way3_voter.sv:24: compiling module 'way3_voter(IN_WIDTH=1)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/triple_reg.sv:16: compiling module 'triple_reg(IN_WIDTH=32)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/way3_voter.sv:24: compiling module 'way3_voter'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/hamming32t26d_enc.sv:18: compiling module 'hamming32t26d_enc_default'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/hamming32t26d_dec.sv:18: compiling module 'hamming32t26d_dec_default'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/triple_reg.sv:16: compiling module 'triple_reg(IN_WIDTH=2)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/way3_voter.sv:24: compiling module 'way3_voter(IN_WIDTH=2)'
VERIFIC-INFO [VERI-1018] ../../../hdl/PMU_raw.sv:28: compiling module 'PMU_raw(N_COUNTERS=24,FT=1)'
VERIFIC-INFO [VERI-1018] ../../../submodules/crossbar/hdl/crossbar.sv:25: compiling module 'crossbar_default'
VERIFIC-INFO [VERI-1018] ../../../submodules/counters/PMU_counters.sv:20: compiling module 'PMU_counters(N_COUNTERS=24)'
VERIFIC-INFO [VERI-1018] ../../../submodules/overflow/PMU_overflow.sv:23: compiling module 'PMU_overflow(N_COUNTERS=24)'
VERIFIC-INFO [VERI-1018] ../../../submodules/quota/PMU_quota.sv:32: compiling module 'PMU_quota(N_COUNTERS=24)'
VERIFIC-INFO [VERI-1018] ../../../submodules/MCCU/hdl/MCCU.sv:21: compiling module 'MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/way3ua_voter.sv:26: compiling module 'way3ua_voter(W=64)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/way3ua_voter.sv:26: compiling module 'way3ua_voter'
VERIFIC-INFO [VERI-1018] ../../../submodules/RDC/hdl/RDC.sv:18: compiling module 'RDC_default'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/way3ua_voter.sv:26: compiling module 'way3ua_voter(W=2)'
VERIFIC-INFO [VERI-1018] ../../../submodules/seu_ip/way3u2a_voter.sv:26: compiling module 'way3u2a_voter(W=8,D=2)'
Importing module top_ft.
Importing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Importing module triple_reg(IN_WIDTH=1).
Importing module way3_voter(IN_WIDTH=1).
Importing module triple_reg(IN_WIDTH=32).
Importing module hamming32t26d_enc_default.
Importing module way3_voter.
Importing module hamming32t26d_dec_default.
Importing module triple_reg(IN_WIDTH=2).
Importing module way3_voter(IN_WIDTH=2).
Importing module PMU_raw(N_COUNTERS=24,FT=1).
Importing module crossbar_default.
Importing module PMU_overflow(N_COUNTERS=24).
Importing module PMU_counters(N_COUNTERS=24).
Importing module PMU_quota(N_COUNTERS=24).
Importing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Importing module way3ua_voter(W=64).
Importing module way3ua_voter.
Importing module RDC_default.
Importing module way3u2a_voter(W=8,D=2).
Importing module way3ua_voter(W=2).

23. Executing PREP pass.

23.1. Executing HIERARCHY pass (managing design hierarchy).

23.1.1. Analyzing design hierarchy..
Top module:  \top_ft
Used module:     \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)
Used module:         \PMU_raw(N_COUNTERS=24,FT=1)
Used module:             \way3u2a_voter(W=8,D=2)
Used module:             \way3ua_voter(W=2)
Used module:             \way3_voter(IN_WIDTH=1)
Used module:             \RDC_default
Used module:             \triple_reg(IN_WIDTH=1)
Used module:             \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)
Used module:                 \way3ua_voter
Used module:                 \way3ua_voter(W=64)
Used module:             \PMU_quota(N_COUNTERS=24)
Used module:             \PMU_overflow(N_COUNTERS=24)
Used module:             \PMU_counters(N_COUNTERS=24)
Used module:             \crossbar_default
Used module:         \triple_reg(IN_WIDTH=2)
Used module:             \way3_voter(IN_WIDTH=2)
Used module:         \hamming32t26d_dec_default
Used module:         \hamming32t26d_enc_default
Used module:         \triple_reg(IN_WIDTH=32)
Used module:             \way3_voter

23.1.2. Analyzing design hierarchy..
Top module:  \top_ft
Used module:     \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)
Used module:         \PMU_raw(N_COUNTERS=24,FT=1)
Used module:             \way3u2a_voter(W=8,D=2)
Used module:             \way3ua_voter(W=2)
Used module:             \way3_voter(IN_WIDTH=1)
Used module:             \RDC_default
Used module:             \triple_reg(IN_WIDTH=1)
Used module:             \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)
Used module:                 \way3ua_voter
Used module:                 \way3ua_voter(W=64)
Used module:             \PMU_quota(N_COUNTERS=24)
Used module:             \PMU_overflow(N_COUNTERS=24)
Used module:             \PMU_counters(N_COUNTERS=24)
Used module:             \crossbar_default
Used module:         \triple_reg(IN_WIDTH=2)
Used module:             \way3_voter(IN_WIDTH=2)
Used module:         \hamming32t26d_dec_default
Used module:         \hamming32t26d_enc_default
Used module:         \triple_reg(IN_WIDTH=32)
Used module:             \way3_voter
Removed 0 unused modules.

23.2. Executing PROC pass (convert processes to netlists).

23.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

23.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

23.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

23.2.4. Executing PROC_INIT pass (extract init attributes).

23.2.5. Executing PROC_ARST pass (detect async resets in processes).

23.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

23.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

23.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

23.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

23.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

23.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module way3ua_voter(W=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module RDC_default.
<suppressed ~1 debug messages>
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=64).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
<suppressed ~6 debug messages>
Optimizing module PMU_quota(N_COUNTERS=24).
<suppressed ~4 debug messages>
Optimizing module PMU_counters(N_COUNTERS=24).
<suppressed ~1 debug messages>
Optimizing module PMU_overflow(N_COUNTERS=24).
<suppressed ~1 debug messages>
Optimizing module crossbar_default.
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
<suppressed ~1 debug messages>
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module hamming32t26d_dec_default.
<suppressed ~1 debug messages>
Optimizing module way3_voter.
Optimizing module hamming32t26d_enc_default.
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter(IN_WIDTH=1).
<suppressed ~5 debug messages>
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
<suppressed ~1 debug messages>
Optimizing module top_ft.

23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=64)..
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Removed 7 unused cells and 16936 unused wires.
<suppressed ~603 debug messages>

23.5. Executing CHECK pass (checking for obvious problems).
Checking module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)...
Checking module PMU_counters(N_COUNTERS=24)...
Checking module PMU_overflow(N_COUNTERS=24)...
Checking module PMU_quota(N_COUNTERS=24)...
Checking module PMU_raw(N_COUNTERS=24,FT=1)...
Checking module RDC_default...
Checking module crossbar_default...
Checking module hamming32t26d_dec_default...
Checking module hamming32t26d_enc_default...
Checking module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)...
Checking module top_ft...
Checking module triple_reg(IN_WIDTH=1)...
Checking module triple_reg(IN_WIDTH=2)...
Checking module triple_reg(IN_WIDTH=32)...
Checking module way3_voter...
Checking module way3_voter(IN_WIDTH=1)...
Checking module way3_voter(IN_WIDTH=2)...
Checking module way3u2a_voter(W=8,D=2)...
Checking module way3ua_voter...
Checking module way3ua_voter(W=2)...
Checking module way3ua_voter(W=64)...
Found and reported 0 problems.

23.6. Executing OPT pass (performing simple optimizations).

23.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

23.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
<suppressed ~6 debug messages>
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
<suppressed ~6 debug messages>
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
<suppressed ~6 debug messages>
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
<suppressed ~6 debug messages>
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 8 cells.

23.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~229 debug messages>

23.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

23.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

23.6.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

23.6.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

23.6.8. Finished OPT passes. (There is nothing left to do.)

23.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_148$../../../submodules/MCCU/hdl/MCCU.sv:355$18605 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_361$../../../submodules/MCCU/hdl/MCCU.sv:372$18612 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_974$../../../submodules/MCCU/hdl/MCCU.sv:355$18632 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_1187$../../../submodules/MCCU/hdl/MCCU.sv:372$18639 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_1800$../../../submodules/MCCU/hdl/MCCU.sv:355$18659 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_2013$../../../submodules/MCCU/hdl/MCCU.sv:372$18666 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_2626$../../../submodules/MCCU/hdl/MCCU.sv:355$18686 ($lt).
Removed top 32 bits (of 64) from port A of cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$LessThan_2839$../../../submodules/MCCU/hdl/MCCU.sv:372$18691 ($lt).
Removed top 55 bits (of 256) from mux cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$mux_3421$../../../submodules/MCCU/hdl/MCCU.sv:426$18748 ($mux).
Removed top 55 bits (of 256) from FF cell MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$Ft_suma.ccc_suma_int_0_reg$../../../submodules/MCCU/hdl/MCCU.sv:427$18753 ($dff).
Removed top 55 bits (of 256) from wire MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$n12294$16980.
Removed top 1 bits (of 5) from wire MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).$verific$n15943$16991.
Removed top 55 bits (of 64) from wire MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).Ft_suma.ccc_suma_int_0[0].
Removed top 1 bits (of 8) from wire MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).events_weights_int[3][1].
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_4$../../../submodules/counters/PMU_counters.sv:68$16440 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_142$../../../submodules/counters/PMU_counters.sv:68$16450 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_280$../../../submodules/counters/PMU_counters.sv:68$16459 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_418$../../../submodules/counters/PMU_counters.sv:68$16468 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_556$../../../submodules/counters/PMU_counters.sv:68$16477 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_694$../../../submodules/counters/PMU_counters.sv:68$16486 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_832$../../../submodules/counters/PMU_counters.sv:68$16495 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_970$../../../submodules/counters/PMU_counters.sv:68$16504 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_1108$../../../submodules/counters/PMU_counters.sv:68$16513 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_1246$../../../submodules/counters/PMU_counters.sv:68$16522 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_1384$../../../submodules/counters/PMU_counters.sv:68$16531 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_1522$../../../submodules/counters/PMU_counters.sv:68$16540 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_1660$../../../submodules/counters/PMU_counters.sv:68$16549 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_1798$../../../submodules/counters/PMU_counters.sv:68$16558 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_1936$../../../submodules/counters/PMU_counters.sv:68$16567 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_2074$../../../submodules/counters/PMU_counters.sv:68$16576 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_2212$../../../submodules/counters/PMU_counters.sv:68$16585 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_2350$../../../submodules/counters/PMU_counters.sv:68$16594 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_2488$../../../submodules/counters/PMU_counters.sv:68$16603 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_2626$../../../submodules/counters/PMU_counters.sv:68$16612 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_2764$../../../submodules/counters/PMU_counters.sv:68$16621 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_2902$../../../submodules/counters/PMU_counters.sv:68$16630 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_3040$../../../submodules/counters/PMU_counters.sv:68$16639 ($add).
Removed top 31 bits (of 32) from port B of cell PMU_counters(N_COUNTERS=24).$verific$add_3178$../../../submodules/counters/PMU_counters.sv:68$16647 ($add).
Removed top 4 bits (of 5) from port B of cell PMU_quota(N_COUNTERS=24).$verific$add_141$../../../submodules/quota/PMU_quota.sv:122$16832 ($add).
Removed top 1 bits (of 6) from port A of cell PMU_quota(N_COUNTERS=24).$verific$sub_154$../../../submodules/quota/PMU_quota.sv:141$16841 ($sub).
Removed top 5 bits (of 6) from port B of cell PMU_quota(N_COUNTERS=24).$verific$sub_154$../../../submodules/quota/PMU_quota.sv:141$16841 ($sub).
Removed top 1 bits (of 6) from port Y of cell PMU_quota(N_COUNTERS=24).$verific$sub_154$../../../submodules/quota/PMU_quota.sv:141$16841 ($sub).
Removed top 5 bits (of 37) from port B of cell PMU_quota(N_COUNTERS=24).$verific$add_156$../../../submodules/quota/PMU_quota.sv:141$16844 ($add).
Removed top 5 bits (of 37) from port A of cell PMU_quota(N_COUNTERS=24).$verific$LessThan_171$../../../submodules/quota/PMU_quota.sv:163$16855 ($lt).
Removed top 1 bits (of 6) from wire PMU_quota(N_COUNTERS=24).$verific$n2760$16738.
Removed top 31 bits (of 128) from port A of cell PMU_raw(N_COUNTERS=24,FT=1).$verific$mux_173$../../../hdl/PMU_raw.sv:409$11768 ($shr).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_9$../../../submodules/RDC/hdl/RDC.sv:79$18987 ($add).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_50$../../../submodules/RDC/hdl/RDC.sv:79$18995 ($add).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_91$../../../submodules/RDC/hdl/RDC.sv:79$19003 ($add).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_132$../../../submodules/RDC/hdl/RDC.sv:79$19011 ($add).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_173$../../../submodules/RDC/hdl/RDC.sv:79$19019 ($add).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_214$../../../submodules/RDC/hdl/RDC.sv:79$19027 ($add).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_255$../../../submodules/RDC/hdl/RDC.sv:79$19035 ($add).
Removed top 7 bits (of 8) from port B of cell RDC_default.$verific$add_296$../../../submodules/RDC/hdl/RDC.sv:79$19043 ($add).
Removed top 3 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_18$../../../submodules/seu_ip/hamming32t26d_dec.sv:65$11388 ($eq).
Removed top 2 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_22$../../../submodules/seu_ip/hamming32t26d_dec.sv:66$11391 ($eq).
Removed top 2 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_26$../../../submodules/seu_ip/hamming32t26d_dec.sv:67$11394 ($eq).
Removed top 2 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_30$../../../submodules/seu_ip/hamming32t26d_dec.sv:68$11397 ($eq).
Removed top 1 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_34$../../../submodules/seu_ip/hamming32t26d_dec.sv:69$11400 ($eq).
Removed top 1 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_38$../../../submodules/seu_ip/hamming32t26d_dec.sv:70$11403 ($eq).
Removed top 1 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_42$../../../submodules/seu_ip/hamming32t26d_dec.sv:71$11406 ($eq).
Removed top 1 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_46$../../../submodules/seu_ip/hamming32t26d_dec.sv:72$11409 ($eq).
Removed top 1 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_50$../../../submodules/seu_ip/hamming32t26d_dec.sv:73$11412 ($eq).
Removed top 1 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_54$../../../submodules/seu_ip/hamming32t26d_dec.sv:74$11415 ($eq).
Removed top 1 bits (of 5) from port A of cell hamming32t26d_dec_default.$verific$equal_58$../../../submodules/seu_ip/hamming32t26d_dec.sv:75$11418 ($eq).
Removed top 63 bits (of 64) from port A of cell pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).$verific$Decoder_4339$../../../hdl/pmu_ahb.sv:407$7849 ($shl).
Removed top 17 bits (of 64) from port Y of cell pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).$verific$Decoder_4339$../../../hdl/pmu_ahb.sv:407$7849 ($shl).
Removed top 1 bits (of 8) from port A of cell pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).$verific$mux_4458$../../../hdl/pmu_ahb.sv:529$7971 ($shr).
Removed top 17 bits (of 64) from wire pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).$verific$n19410$389.
Removed top 4 bits (of 1856) from wire pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).Slvft.ham_mbits_Q.
Removed top 4 bits (of 1508) from wire pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).Slvft.slv_reg_fte.
Removed top 4 bits (of 1508) from wire pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).Slvft.slv_reg_pQ.

23.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..
Removed 0 unused cells and 10 unused wires.
<suppressed ~3 debug messages>

23.9. Executing MEMORY_COLLECT pass (generating $mem cells).

23.10. Executing OPT pass (performing simple optimizations).

23.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

23.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

23.10.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

23.10.4. Finished fast OPT passes.

23.11. Printing statistics.

=== MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) ===

   Number of wires:                183
   Number of wire bits:           4672
   Number of public wires:          73
   Number of public wire bits:    1897
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                124
     $add                            4
     $and                           17
     $dff                            5
     $lt                             8
     $mux                           72
     $not                            5
     $or                             1
     $reduce_or                      2
     $sub                            8
     way3ua_voter                    1
     way3ua_voter(W=64)              1

=== PMU_counters(N_COUNTERS=24) ===

   Number of wires:                223
   Number of wire bits:           6198
   Number of public wires:         103
   Number of public wire bits:    3102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                169
     $add                           24
     $and                           24
     $dff                           24
     $mux                           97

=== PMU_overflow(N_COUNTERS=24) ===

   Number of wires:                 42
   Number of wire bits:            970
   Number of public wires:          35
   Number of public wire bits:     894
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $and                            1
     $dff                            1
     $mux                            4
     $not                            2
     $or                             3
     $reduce_and                    24
     $reduce_or                      1

=== PMU_quota(N_COUNTERS=24) ===

   Number of wires:                105
   Number of wire bits:           2696
   Number of public wires:          59
   Number of public wire bits:    1664
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 76
     $add                            2
     $and                           24
     $dff                            4
     $le                             1
     $logic_not                      1
     $lt                             1
     $mux                           35
     $ne                             1
     $not                            1
     $or                             4
     $shr                            1
     $sub                            1

=== PMU_raw(N_COUNTERS=24,FT=1) ===

   Number of wires:                274
   Number of wire bits:           5386
   Number of public wires:         269
   Number of public wire bits:    5381
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $and                            2
     $dff                            1
     $mux                            4
     $not                            2
     $reduce_or                      2
     $shr                            1
     MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)      1
     PMU_counters(N_COUNTERS=24)      1
     PMU_overflow(N_COUNTERS=24)      1
     PMU_quota(N_COUNTERS=24)        1
     RDC_default                     3
     crossbar_default                1
     triple_reg(IN_WIDTH=1)          1
     way3_voter(IN_WIDTH=1)          1
     way3u2a_voter(W=8,D=2)          1
     way3ua_voter(W=2)               1

=== RDC_default ===

   Number of wires:                140
   Number of wire bits:            824
   Number of public wires:          51
   Number of public wire bits:     325
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                113
     $add                            8
     $and                            8
     $dff                           18
     $eq                             8
     $le                             8
     $lt                             8
     $mux                           52
     $or                             2
     $reduce_or                      1

=== crossbar_default ===

   Number of wires:                 30
   Number of wire bits:            226
   Number of public wires:          29
   Number of public wire bits:     202
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 26
     $dff                            1
     $mux                            1
     $shr                           24

=== hamming32t26d_dec_default ===

   Number of wires:                 59
   Number of wire bits:            119
   Number of public wires:           4
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 87
     $and                            1
     $eq                            26
     $mux                           26
     $not                           27
     $reduce_bool                    1
     $reduce_xor                     6

=== hamming32t26d_enc_default ===

   Number of wires:                  4
   Number of wire bits:             64
   Number of public wires:           4
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $reduce_xor                     6

=== pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) ===

   Number of wires:                496
   Number of wire bits:          21490
   Number of public wires:         289
   Number of public wire bits:   16466
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                332
     $and                            3
     $dff                           48
     $le                             1
     $mux                          146
     $not                            2
     $reduce_or                      2
     $shl                            1
     $shr                            8
     PMU_raw(N_COUNTERS=24,FT=1)      1
     hamming32t26d_dec_default      58
     hamming32t26d_enc_default      58
     triple_reg(IN_WIDTH=1)          2
     triple_reg(IN_WIDTH=2)          1
     triple_reg(IN_WIDTH=32)         1

=== top_ft ===

   Number of wires:                 22
   Number of wire bits:            158
   Number of public wires:          22
   Number of public wire bits:     158
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)      1

=== triple_reg(IN_WIDTH=1) ===

   Number of wires:                 17
   Number of wire bits:             17
   Number of public wires:          16
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $dff                            1
     $mux                            1
     way3_voter(IN_WIDTH=1)          1

=== triple_reg(IN_WIDTH=2) ===

   Number of wires:                 17
   Number of wire bits:             28
   Number of public wires:          16
   Number of public wire bits:      26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $dff                            1
     $mux                            1
     way3_voter(IN_WIDTH=2)          1

=== triple_reg(IN_WIDTH=32) ===

   Number of wires:                 17
   Number of wire bits:            358
   Number of public wires:          16
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $dff                            1
     $mux                            1
     way3_voter                      1

=== way3_voter ===

   Number of wires:                 14
   Number of wire bits:            200
   Number of public wires:           6
   Number of public wire bits:     130
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             3
     $mux                            6
     $ne                             1
     $not                            1

=== way3_voter(IN_WIDTH=1) ===

   Number of wires:                 12
   Number of wire bits:             12
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $mux                            6
     $xor                            3

=== way3_voter(IN_WIDTH=2) ===

   Number of wires:                 14
   Number of wire bits:             20
   Number of public wires:           6
   Number of public wire bits:      10
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             3
     $mux                            6
     $ne                             1
     $not                            1

=== way3u2a_voter(W=8,D=2) ===

   Number of wires:                 42
   Number of wire bits:            392
   Number of public wires:          34
   Number of public wire bits:     258
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             3
     $mux                            6
     $ne                             1
     $not                            1

=== way3ua_voter ===

   Number of wires:                 26
   Number of wire bits:            776
   Number of public wires:          18
   Number of public wire bits:     514
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             3
     $mux                            6
     $ne                             1
     $not                            1

=== way3ua_voter(W=2) ===

   Number of wires:                 26
   Number of wire bits:             56
   Number of public wires:          18
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             3
     $mux                            6
     $ne                             1
     $not                            1

=== way3ua_voter(W=64) ===

   Number of wires:                 26
   Number of wire bits:           1544
   Number of public wires:          18
   Number of public wire bits:    1026
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             3
     $mux                            6
     $ne                             1
     $not                            1

=== design hierarchy ===

   top_ft                            1
     pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)      1
       PMU_raw(N_COUNTERS=24,FT=1)      1
         MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)      1
           way3ua_voter              1
           way3ua_voter(W=64)        1
         PMU_counters(N_COUNTERS=24)      1
         PMU_overflow(N_COUNTERS=24)      1
         PMU_quota(N_COUNTERS=24)      1
         RDC_default                 3
         crossbar_default            1
         triple_reg(IN_WIDTH=1)      1
           way3_voter(IN_WIDTH=1)      1
         way3_voter(IN_WIDTH=1)      1
         way3u2a_voter(W=8,D=2)      1
         way3ua_voter(W=2)           1
       hamming32t26d_dec_default     58
       hamming32t26d_enc_default     58
       triple_reg(IN_WIDTH=1)        2
         way3_voter(IN_WIDTH=1)      1
       triple_reg(IN_WIDTH=2)        1
         way3_voter(IN_WIDTH=2)      1
       triple_reg(IN_WIDTH=32)       1
         way3_voter                  1

   Number of wires:               5730
   Number of wire bits:          58355
   Number of public wires:        1700
   Number of public wire bits:   40559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6497
     $add                           54
     $and                          153
     $dff                          143
     $eq                          1550
     $le                            26
     $logic_not                      1
     $lt                            33
     $mux                         2088
     $ne                             7
     $not                         1584
     $or                            14
     $reduce_and                    24
     $reduce_bool                   58
     $reduce_or                     10
     $reduce_xor                   696
     $shl                            1
     $shr                           34
     $sub                            9
     $xor                           12

23.12. Executing CHECK pass (checking for obvious problems).
Checking module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)...
Checking module PMU_counters(N_COUNTERS=24)...
Checking module PMU_overflow(N_COUNTERS=24)...
Checking module PMU_quota(N_COUNTERS=24)...
Checking module PMU_raw(N_COUNTERS=24,FT=1)...
Checking module RDC_default...
Checking module crossbar_default...
Checking module hamming32t26d_dec_default...
Checking module hamming32t26d_enc_default...
Checking module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)...
Checking module top_ft...
Checking module triple_reg(IN_WIDTH=1)...
Checking module triple_reg(IN_WIDTH=2)...
Checking module triple_reg(IN_WIDTH=32)...
Checking module way3_voter...
Checking module way3_voter(IN_WIDTH=1)...
Checking module way3_voter(IN_WIDTH=2)...
Checking module way3u2a_voter(W=8,D=2)...
Checking module way3ua_voter...
Checking module way3ua_voter(W=2)...
Checking module way3ua_voter(W=64)...
Found and reported 0 problems.

24. Executing PROC pass (convert processes to netlists).

24.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

24.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

24.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

24.4. Executing PROC_INIT pass (extract init attributes).

24.5. Executing PROC_ARST pass (detect async resets in processes).

24.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

24.7. Executing PROC_DLATCH pass (convert process syncs to latches).

24.8. Executing PROC_DFF pass (convert process syncs to FFs).

24.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

24.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

25. Executing OPT pass (performing simple optimizations).

25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~229 debug messages>

25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$interruption_quota_q_reg$../../../submodules/MCCU/hdl/MCCU.sv:478$18774 ($dff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $auto$wreduce.cc:454:run$19196 [3:0], Q = \interruption_quota_q, rval = 4'0000).
Adding SRST signal on $verific$Ft_suma.quota_int_2_reg$../../../submodules/MCCU/hdl/MCCU.sv:427$18752 ($dff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = { $verific$n15904$17037 $verific$n15912$17041 $verific$n15920$17045 $verific$n15928$17049 }, Q = { \Ft_suma.quota_int_2[0] \Ft_suma.quota_int_2[1] \Ft_suma.quota_int_2[2] \Ft_suma.quota_int_2[3] }, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19207 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15904$17037, Q = \Ft_suma.quota_int_2[0]).
Adding EN signal on $auto$opt_dff.cc:702:run$19207 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15912$17041, Q = \Ft_suma.quota_int_2[1]).
Adding EN signal on $auto$opt_dff.cc:702:run$19207 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15920$17045, Q = \Ft_suma.quota_int_2[2]).
Adding EN signal on $auto$opt_dff.cc:702:run$19207 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15928$17049, Q = \Ft_suma.quota_int_2[3]).
Adding SRST signal on $verific$Ft_suma.quota_int_1_reg$../../../submodules/MCCU/hdl/MCCU.sv:427$18751 ($dff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = { $verific$n15871$17021 $verific$n15879$17025 $verific$n15887$17029 $verific$n15895$17033 }, Q = { \Ft_suma.quota_int_1[0] \Ft_suma.quota_int_1[1] \Ft_suma.quota_int_1[2] \Ft_suma.quota_int_1[3] }, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19220 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15871$17021, Q = \Ft_suma.quota_int_1[0]).
Adding EN signal on $auto$opt_dff.cc:702:run$19220 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15879$17025, Q = \Ft_suma.quota_int_1[1]).
Adding EN signal on $auto$opt_dff.cc:702:run$19220 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15887$17029, Q = \Ft_suma.quota_int_1[2]).
Adding EN signal on $auto$opt_dff.cc:702:run$19220 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15895$17033, Q = \Ft_suma.quota_int_1[3]).
Adding SRST signal on $verific$Ft_suma.quota_int_0_reg$../../../submodules/MCCU/hdl/MCCU.sv:427$18750 ($dff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = { $verific$n15838$16997 $verific$n15846$17003 $verific$n15854$17009 $verific$n15862$17015 }, Q = { \Ft_suma.quota_int_0[0] \Ft_suma.quota_int_0[1] \Ft_suma.quota_int_0[2] \Ft_suma.quota_int_0[3] }, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19233 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15838$16997, Q = \Ft_suma.quota_int_0[0]).
Adding EN signal on $auto$opt_dff.cc:702:run$19233 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15846$17003, Q = \Ft_suma.quota_int_0[1]).
Adding EN signal on $auto$opt_dff.cc:702:run$19233 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15854$17009, Q = \Ft_suma.quota_int_0[2]).
Adding EN signal on $auto$opt_dff.cc:702:run$19233 ($sdff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = $verific$n15862$17015, Q = \Ft_suma.quota_int_0[3]).
Adding SRST signal on $verific$Ft_suma.ccc_suma_int_0_reg$../../../submodules/MCCU/hdl/MCCU.sv:427$18753 ($dff) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) (D = { $verific$n10770$16898 $verific$n10771$16969 $verific$n10992$16907 $verific$n10993$16971 $verific$n11214$16916 $verific$n11215$16973 $verific$n11436$16925 $verific$n11437$16975 }, Q = { \Ft_suma.ccc_suma_int_0[0] \Ft_suma.ccc_suma_int_0[1] [8:0] \Ft_suma.ccc_suma_int_0[2] [8:0] \Ft_suma.ccc_suma_int_0[3] [8:0] }, rval = 36'000000000000000000000000000000000000).
Adding SRST signal on $verific$slv_reg[9]_reg$../../../submodules/counters/PMU_counters.sv:83$16525 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11840$16394, Q = \slv_reg[9], rval = 0).
Adding SRST signal on $verific$slv_reg[8]_reg$../../../submodules/counters/PMU_counters.sv:83$16516 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11835$16391, Q = \slv_reg[8], rval = 0).
Adding SRST signal on $verific$slv_reg[7]_reg$../../../submodules/counters/PMU_counters.sv:83$16507 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11830$16388, Q = \slv_reg[7], rval = 0).
Adding SRST signal on $verific$slv_reg[6]_reg$../../../submodules/counters/PMU_counters.sv:83$16498 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11825$16385, Q = \slv_reg[6], rval = 0).
Adding SRST signal on $verific$slv_reg[5]_reg$../../../submodules/counters/PMU_counters.sv:83$16489 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11820$16382, Q = \slv_reg[5], rval = 0).
Adding SRST signal on $verific$slv_reg[4]_reg$../../../submodules/counters/PMU_counters.sv:83$16480 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11815$16379, Q = \slv_reg[4], rval = 0).
Adding SRST signal on $verific$slv_reg[3]_reg$../../../submodules/counters/PMU_counters.sv:83$16471 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11810$16376, Q = \slv_reg[3], rval = 0).
Adding SRST signal on $verific$slv_reg[2]_reg$../../../submodules/counters/PMU_counters.sv:83$16462 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11805$16373, Q = \slv_reg[2], rval = 0).
Adding SRST signal on $verific$slv_reg[23]_reg$../../../submodules/counters/PMU_counters.sv:83$16650 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11910$16436, Q = \slv_reg[23], rval = 0).
Adding SRST signal on $verific$slv_reg[22]_reg$../../../submodules/counters/PMU_counters.sv:83$16642 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11905$16433, Q = \slv_reg[22], rval = 0).
Adding SRST signal on $verific$slv_reg[21]_reg$../../../submodules/counters/PMU_counters.sv:83$16633 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11900$16430, Q = \slv_reg[21], rval = 0).
Adding SRST signal on $verific$slv_reg[20]_reg$../../../submodules/counters/PMU_counters.sv:83$16624 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11895$16427, Q = \slv_reg[20], rval = 0).
Adding SRST signal on $verific$slv_reg[1]_reg$../../../submodules/counters/PMU_counters.sv:83$16453 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11800$16370, Q = \slv_reg[1], rval = 0).
Adding SRST signal on $verific$slv_reg[19]_reg$../../../submodules/counters/PMU_counters.sv:83$16615 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11890$16424, Q = \slv_reg[19], rval = 0).
Adding SRST signal on $verific$slv_reg[18]_reg$../../../submodules/counters/PMU_counters.sv:83$16606 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11885$16421, Q = \slv_reg[18], rval = 0).
Adding SRST signal on $verific$slv_reg[17]_reg$../../../submodules/counters/PMU_counters.sv:83$16597 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11880$16418, Q = \slv_reg[17], rval = 0).
Adding SRST signal on $verific$slv_reg[16]_reg$../../../submodules/counters/PMU_counters.sv:83$16588 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11875$16415, Q = \slv_reg[16], rval = 0).
Adding SRST signal on $verific$slv_reg[15]_reg$../../../submodules/counters/PMU_counters.sv:83$16579 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11870$16412, Q = \slv_reg[15], rval = 0).
Adding SRST signal on $verific$slv_reg[14]_reg$../../../submodules/counters/PMU_counters.sv:83$16570 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11865$16409, Q = \slv_reg[14], rval = 0).
Adding SRST signal on $verific$slv_reg[13]_reg$../../../submodules/counters/PMU_counters.sv:83$16561 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11860$16406, Q = \slv_reg[13], rval = 0).
Adding SRST signal on $verific$slv_reg[12]_reg$../../../submodules/counters/PMU_counters.sv:83$16552 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11855$16403, Q = \slv_reg[12], rval = 0).
Adding SRST signal on $verific$slv_reg[11]_reg$../../../submodules/counters/PMU_counters.sv:83$16543 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11850$16400, Q = \slv_reg[11], rval = 0).
Adding SRST signal on $verific$slv_reg[10]_reg$../../../submodules/counters/PMU_counters.sv:83$16534 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11845$16397, Q = \slv_reg[10], rval = 0).
Adding SRST signal on $verific$slv_reg[0]_reg$../../../submodules/counters/PMU_counters.sv:83$16444 ($dff) from module PMU_counters(N_COUNTERS=24) (D = $verific$n11795$16367, Q = \slv_reg[0], rval = 0).
Adding SRST signal on $verific$past_intr_vect_reg$../../../submodules/overflow/PMU_overflow.sv:90$16239 ($dff) from module PMU_overflow(N_COUNTERS=24) (D = $verific$n158$16190, Q = \past_intr_vect, rval = 24'000000000000000000000000).
Adding SRST signal on $verific$suma_int_reg$../../../submodules/quota/PMU_quota.sv:145$16837 ($dff) from module PMU_quota(N_COUNTERS=24) (D = $verific$n2801$16740, Q = \suma_int, rval = 37'0000000000000000000000000000000000000).
Adding SRST signal on $verific$state_int_reg$../../../submodules/quota/PMU_quota.sv:125$16826 ($dff) from module PMU_quota(N_COUNTERS=24) (D = $verific$n2606$16731, Q = \state_int, rval = 5'00000).
Adding SRST signal on $verific$old_mask_reg$../../../submodules/quota/PMU_quota.sv:100$16858 ($dff) from module PMU_quota(N_COUNTERS=24) (D = \quota_mask_i, Q = \old_mask, rval = 24'000000000000000000000000).
Adding SRST signal on $verific$hold_intr_quota_reg$../../../submodules/quota/PMU_quota.sv:159$16848 ($dff) from module PMU_quota(N_COUNTERS=24) (D = $verific$n3033$16670, Q = \hold_intr_quota, rval = 1'0).
Adding SRST signal on $verific$MCCU_enable_int_reg$../../../hdl/PMU_raw.sv:533$16100 ($dff) from module PMU_raw(N_COUNTERS=24,FT=1) (D = \regs_i[29] [0], Q = \MCCU_enable_int, rval = 1'0).
Adding SRST signal on $verific$watermark_int[7]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19126 ($dff) from module RDC_default (D = $verific$n1698$18980, Q = \watermark_int[7], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19393 ($sdff) from module RDC_default (D = \max_value[7], Q = \watermark_int[7]).
Adding SRST signal on $verific$watermark_int[6]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19120 ($dff) from module RDC_default (D = $verific$n1694$18977, Q = \watermark_int[6], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19397 ($sdff) from module RDC_default (D = \max_value[6], Q = \watermark_int[6]).
Adding SRST signal on $verific$watermark_int[5]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19113 ($dff) from module RDC_default (D = $verific$n1690$18974, Q = \watermark_int[5], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19401 ($sdff) from module RDC_default (D = \max_value[5], Q = \watermark_int[5]).
Adding SRST signal on $verific$watermark_int[4]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19106 ($dff) from module RDC_default (D = $verific$n1686$18971, Q = \watermark_int[4], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19405 ($sdff) from module RDC_default (D = \max_value[4], Q = \watermark_int[4]).
Adding SRST signal on $verific$watermark_int[3]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19099 ($dff) from module RDC_default (D = $verific$n1682$18968, Q = \watermark_int[3], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19409 ($sdff) from module RDC_default (D = \max_value[3], Q = \watermark_int[3]).
Adding SRST signal on $verific$watermark_int[2]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19092 ($dff) from module RDC_default (D = $verific$n1678$18965, Q = \watermark_int[2], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19413 ($sdff) from module RDC_default (D = \max_value[2], Q = \watermark_int[2]).
Adding SRST signal on $verific$watermark_int[1]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19085 ($dff) from module RDC_default (D = $verific$n1674$18962, Q = \watermark_int[1], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19417 ($sdff) from module RDC_default (D = \max_value[1], Q = \watermark_int[1]).
Adding SRST signal on $verific$watermark_int[0]_reg$../../../submodules/RDC/hdl/RDC.sv:157$19078 ($dff) from module RDC_default (D = $verific$n1670$18959, Q = \watermark_int[0], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19421 ($sdff) from module RDC_default (D = \max_value[0], Q = \watermark_int[0]).
Adding SRST signal on $verific$past_interruption_rdc_o_reg$../../../submodules/RDC/hdl/RDC.sv:137$19065 ($dff) from module RDC_default (D = \interruption_rdc_o, Q = \past_interruption_rdc_o, rval = 1'0).
Adding SRST signal on $verific$max_value[7]_reg$../../../submodules/RDC/hdl/RDC.sv:85$19044 ($dff) from module RDC_default (D = $verific$n1661$18957, Q = \max_value[7], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19430 ($sdff) from module RDC_default (D = $verific$n601$18905, Q = \max_value[7]).
Adding SRST signal on $verific$max_value[6]_reg$../../../submodules/RDC/hdl/RDC.sv:85$19036 ($dff) from module RDC_default (D = $verific$n1656$18954, Q = \max_value[6], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19434 ($sdff) from module RDC_default (D = $verific$n519$18902, Q = \max_value[6]).
Adding SRST signal on $verific$max_value[5]_reg$../../../submodules/RDC/hdl/RDC.sv:85$19028 ($dff) from module RDC_default (D = $verific$n1651$18951, Q = \max_value[5], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19438 ($sdff) from module RDC_default (D = $verific$n437$18899, Q = \max_value[5]).
Adding SRST signal on $verific$max_value[4]_reg$../../../submodules/RDC/hdl/RDC.sv:85$19020 ($dff) from module RDC_default (D = $verific$n1646$18948, Q = \max_value[4], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19442 ($sdff) from module RDC_default (D = $verific$n355$18896, Q = \max_value[4]).
Adding SRST signal on $verific$max_value[3]_reg$../../../submodules/RDC/hdl/RDC.sv:85$19012 ($dff) from module RDC_default (D = $verific$n1641$18945, Q = \max_value[3], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19446 ($sdff) from module RDC_default (D = $verific$n273$18893, Q = \max_value[3]).
Adding SRST signal on $verific$max_value[2]_reg$../../../submodules/RDC/hdl/RDC.sv:85$19004 ($dff) from module RDC_default (D = $verific$n1636$18942, Q = \max_value[2], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19450 ($sdff) from module RDC_default (D = $verific$n191$18890, Q = \max_value[2]).
Adding SRST signal on $verific$max_value[1]_reg$../../../submodules/RDC/hdl/RDC.sv:85$18996 ($dff) from module RDC_default (D = $verific$n1631$18939, Q = \max_value[1], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19454 ($sdff) from module RDC_default (D = $verific$n109$18887, Q = \max_value[1]).
Adding SRST signal on $verific$max_value[0]_reg$../../../submodules/RDC/hdl/RDC.sv:85$18988 ($dff) from module RDC_default (D = $verific$n1626$18936, Q = \max_value[0], rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$19458 ($sdff) from module RDC_default (D = $verific$n27$18884, Q = \max_value[0]).
Adding SRST signal on $verific$interruption_vector_rdc_o_reg$../../../submodules/RDC/hdl/RDC.sv:118$19048 ($dff) from module RDC_default (D = { $verific$n705$18908 $verific$n711$18910 $verific$n717$18912 $verific$n723$18914 }, Q = { \interruption_vector_rdc_o[0] \interruption_vector_rdc_o[1] \interruption_vector_rdc_o[2] \interruption_vector_rdc_o[3] }, rval = 8'00000000).
Adding SRST signal on $verific$vector_o_reg$../../../submodules/crossbar/hdl/crossbar.sv:65$16155 ($dff) from module crossbar_default (D = { \mux_int [0] \mux_int [1] \mux_int [2] \mux_int [3] \mux_int [4] \mux_int [5] \mux_int [6] \mux_int [7] \mux_int [8] \mux_int [9] \mux_int [10] \mux_int [11] \mux_int [12] \mux_int [13] \mux_int [14] \mux_int [15] \mux_int [16] \mux_int [17] \mux_int [18] \mux_int [19] \mux_int [20] \mux_int [21] \mux_int [22] \mux_int [23] }, Q = { \vector_o [0] \vector_o [1] \vector_o [2] \vector_o [3] \vector_o [4] \vector_o [5] \vector_o [6] \vector_o [7] \vector_o [8] \vector_o [9] \vector_o [10] \vector_o [11] \vector_o [12] \vector_o [13] \vector_o [14] \vector_o [15] \vector_o [16] \vector_o [17] \vector_o [18] \vector_o [19] \vector_o [20] \vector_o [21] \vector_o [22] \vector_o [23] }, rval = 24'000000000000000000000000).
Adding SRST signal on $verific$slv_reg[9]_reg$../../../hdl/pmu_ahb.sv:337$4078 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [319:288], Q = \slv_reg[9], rval = 0).
Adding SRST signal on $verific$slv_reg[8]_reg$../../../hdl/pmu_ahb.sv:337$4075 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [287:256], Q = \slv_reg[8], rval = 0).
Adding SRST signal on $verific$slv_reg[7]_reg$../../../hdl/pmu_ahb.sv:337$4072 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [255:224], Q = \slv_reg[7], rval = 0).
Adding SRST signal on $verific$slv_reg[6]_reg$../../../hdl/pmu_ahb.sv:337$4069 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [223:192], Q = \slv_reg[6], rval = 0).
Adding SRST signal on $verific$slv_reg[5]_reg$../../../hdl/pmu_ahb.sv:337$4066 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [191:160], Q = \slv_reg[5], rval = 0).
Adding SRST signal on $verific$slv_reg[4]_reg$../../../hdl/pmu_ahb.sv:337$4063 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [159:128], Q = \slv_reg[4], rval = 0).
Adding SRST signal on $verific$slv_reg[46]_reg$../../../hdl/pmu_ahb.sv:337$4244 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1503:1472], Q = \slv_reg[46], rval = 0).
Adding SRST signal on $verific$slv_reg[45]_reg$../../../hdl/pmu_ahb.sv:337$4186 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1471:1440], Q = \slv_reg[45], rval = 0).
Adding SRST signal on $verific$slv_reg[44]_reg$../../../hdl/pmu_ahb.sv:337$4183 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1439:1408], Q = \slv_reg[44], rval = 0).
Adding SRST signal on $verific$slv_reg[43]_reg$../../../hdl/pmu_ahb.sv:337$4180 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1407:1376], Q = \slv_reg[43], rval = 0).
Adding SRST signal on $verific$slv_reg[42]_reg$../../../hdl/pmu_ahb.sv:337$4177 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1375:1344], Q = \slv_reg[42], rval = 0).
Adding SRST signal on $verific$slv_reg[41]_reg$../../../hdl/pmu_ahb.sv:337$4174 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1343:1312], Q = \slv_reg[41], rval = 0).
Adding SRST signal on $verific$slv_reg[40]_reg$../../../hdl/pmu_ahb.sv:337$4171 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1311:1280], Q = \slv_reg[40], rval = 0).
Adding SRST signal on $verific$slv_reg[3]_reg$../../../hdl/pmu_ahb.sv:337$4060 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [127:96], Q = \slv_reg[3], rval = 0).
Adding SRST signal on $verific$slv_reg[39]_reg$../../../hdl/pmu_ahb.sv:337$4168 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1279:1248], Q = \slv_reg[39], rval = 0).
Adding SRST signal on $verific$slv_reg[38]_reg$../../../hdl/pmu_ahb.sv:337$4165 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1247:1216], Q = \slv_reg[38], rval = 0).
Adding SRST signal on $verific$slv_reg[37]_reg$../../../hdl/pmu_ahb.sv:337$4162 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1215:1184], Q = \slv_reg[37], rval = 0).
Adding SRST signal on $verific$slv_reg[36]_reg$../../../hdl/pmu_ahb.sv:337$4159 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1183:1152], Q = \slv_reg[36], rval = 0).
Adding SRST signal on $verific$slv_reg[35]_reg$../../../hdl/pmu_ahb.sv:337$4156 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1151:1120], Q = \slv_reg[35], rval = 0).
Adding SRST signal on $verific$slv_reg[34]_reg$../../../hdl/pmu_ahb.sv:337$4153 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1119:1088], Q = \slv_reg[34], rval = 0).
Adding SRST signal on $verific$slv_reg[33]_reg$../../../hdl/pmu_ahb.sv:337$4150 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1087:1056], Q = \slv_reg[33], rval = 0).
Adding SRST signal on $verific$slv_reg[32]_reg$../../../hdl/pmu_ahb.sv:337$4147 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1055:1024], Q = \slv_reg[32], rval = 0).
Adding SRST signal on $verific$slv_reg[31]_reg$../../../hdl/pmu_ahb.sv:337$4144 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [1023:992], Q = \slv_reg[31], rval = 0).
Adding SRST signal on $verific$slv_reg[30]_reg$../../../hdl/pmu_ahb.sv:337$4141 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [991:960], Q = \slv_reg[30], rval = 0).
Adding SRST signal on $verific$slv_reg[2]_reg$../../../hdl/pmu_ahb.sv:337$4057 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [95:64], Q = \slv_reg[2], rval = 0).
Adding SRST signal on $verific$slv_reg[29]_reg$../../../hdl/pmu_ahb.sv:337$4138 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [959:928], Q = \slv_reg[29], rval = 0).
Adding SRST signal on $verific$slv_reg[28]_reg$../../../hdl/pmu_ahb.sv:337$4135 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [927:896], Q = \slv_reg[28], rval = 0).
Adding SRST signal on $verific$slv_reg[27]_reg$../../../hdl/pmu_ahb.sv:337$4132 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [895:864], Q = \slv_reg[27], rval = 0).
Adding SRST signal on $verific$slv_reg[26]_reg$../../../hdl/pmu_ahb.sv:337$4129 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [863:832], Q = \slv_reg[26], rval = 0).
Adding SRST signal on $verific$slv_reg[25]_reg$../../../hdl/pmu_ahb.sv:337$4126 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [831:800], Q = \slv_reg[25], rval = 0).
Adding SRST signal on $verific$slv_reg[24]_reg$../../../hdl/pmu_ahb.sv:337$4123 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [799:768], Q = \slv_reg[24], rval = 0).
Adding SRST signal on $verific$slv_reg[23]_reg$../../../hdl/pmu_ahb.sv:337$4120 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [767:736], Q = \slv_reg[23], rval = 0).
Adding SRST signal on $verific$slv_reg[22]_reg$../../../hdl/pmu_ahb.sv:337$4117 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [735:704], Q = \slv_reg[22], rval = 0).
Adding SRST signal on $verific$slv_reg[21]_reg$../../../hdl/pmu_ahb.sv:337$4114 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [703:672], Q = \slv_reg[21], rval = 0).
Adding SRST signal on $verific$slv_reg[20]_reg$../../../hdl/pmu_ahb.sv:337$4111 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [671:640], Q = \slv_reg[20], rval = 0).
Adding SRST signal on $verific$slv_reg[1]_reg$../../../hdl/pmu_ahb.sv:337$4054 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [63:32], Q = \slv_reg[1], rval = 0).
Adding SRST signal on $verific$slv_reg[19]_reg$../../../hdl/pmu_ahb.sv:337$4108 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [639:608], Q = \slv_reg[19], rval = 0).
Adding SRST signal on $verific$slv_reg[18]_reg$../../../hdl/pmu_ahb.sv:337$4105 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [607:576], Q = \slv_reg[18], rval = 0).
Adding SRST signal on $verific$slv_reg[17]_reg$../../../hdl/pmu_ahb.sv:337$4102 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [575:544], Q = \slv_reg[17], rval = 0).
Adding SRST signal on $verific$slv_reg[16]_reg$../../../hdl/pmu_ahb.sv:337$4099 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [543:512], Q = \slv_reg[16], rval = 0).
Adding SRST signal on $verific$slv_reg[15]_reg$../../../hdl/pmu_ahb.sv:337$4096 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [511:480], Q = \slv_reg[15], rval = 0).
Adding SRST signal on $verific$slv_reg[14]_reg$../../../hdl/pmu_ahb.sv:337$4093 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [479:448], Q = \slv_reg[14], rval = 0).
Adding SRST signal on $verific$slv_reg[13]_reg$../../../hdl/pmu_ahb.sv:337$4090 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [447:416], Q = \slv_reg[13], rval = 0).
Adding SRST signal on $verific$slv_reg[12]_reg$../../../hdl/pmu_ahb.sv:337$4087 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [415:384], Q = \slv_reg[12], rval = 0).
Adding SRST signal on $verific$slv_reg[11]_reg$../../../hdl/pmu_ahb.sv:337$4084 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [383:352], Q = \slv_reg[11], rval = 0).
Adding SRST signal on $verific$slv_reg[10]_reg$../../../hdl/pmu_ahb.sv:337$4081 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [351:320], Q = \slv_reg[10], rval = 0).
Adding SRST signal on $verific$slv_reg[0]_reg$../../../hdl/pmu_ahb.sv:337$4051 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = \Slvft.slv_reg_fte [31:0], Q = \slv_reg[0], rval = 0).
Adding SRST signal on $verific$Slvft.ham_pbits_reg$../../../hdl/pmu_ahb.sv:361$4371 ($dff) from module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) (D = { \Slvft.ham_mbits_D [1840] \Slvft.ham_mbits_D [1832] \Slvft.ham_mbits_D [1828] \Slvft.ham_mbits_D [1826:1824] \Slvft.ham_mbits_D [1808] \Slvft.ham_mbits_D [1800] \Slvft.ham_mbits_D [1796] \Slvft.ham_mbits_D [1794:1792] \Slvft.ham_mbits_D [1776] \Slvft.ham_mbits_D [1768] \Slvft.ham_mbits_D [1764] \Slvft.ham_mbits_D [1762:1760] \Slvft.ham_mbits_D [1744] \Slvft.ham_mbits_D [1736] \Slvft.ham_mbits_D [1732] \Slvft.ham_mbits_D [1730:1728] \Slvft.ham_mbits_D [1712] \Slvft.ham_mbits_D [1704] \Slvft.ham_mbits_D [1700] \Slvft.ham_mbits_D [1698:1696] \Slvft.ham_mbits_D [1680] \Slvft.ham_mbits_D [1672] \Slvft.ham_mbits_D [1668] \Slvft.ham_mbits_D [1666:1664] \Slvft.ham_mbits_D [1648] \Slvft.ham_mbits_D [1640] \Slvft.ham_mbits_D [1636] \Slvft.ham_mbits_D [1634:1632] \Slvft.ham_mbits_D [1616] \Slvft.ham_mbits_D [1608] \Slvft.ham_mbits_D [1604] \Slvft.ham_mbits_D [1602:1600] \Slvft.ham_mbits_D [1584] \Slvft.ham_mbits_D [1576] \Slvft.ham_mbits_D [1572] \Slvft.ham_mbits_D [1570:1568] \Slvft.ham_mbits_D [1552] \Slvft.ham_mbits_D [1544] \Slvft.ham_mbits_D [1540] \Slvft.ham_mbits_D [1538:1536] \Slvft.ham_mbits_D [1520] \Slvft.ham_mbits_D [1512] \Slvft.ham_mbits_D [1508] \Slvft.ham_mbits_D [1506:1504] \Slvft.ham_mbits_D [1488] \Slvft.ham_mbits_D [1480] \Slvft.ham_mbits_D [1476] \Slvft.ham_mbits_D [1474:1472] \Slvft.ham_mbits_D [1456] \Slvft.ham_mbits_D [1448] \Slvft.ham_mbits_D [1444] \Slvft.ham_mbits_D [1442:1440] \Slvft.ham_mbits_D [1424] \Slvft.ham_mbits_D [1416] \Slvft.ham_mbits_D [1412] \Slvft.ham_mbits_D [1410:1408] \Slvft.ham_mbits_D [1392] \Slvft.ham_mbits_D [1384] \Slvft.ham_mbits_D [1380] \Slvft.ham_mbits_D [1378:1376] \Slvft.ham_mbits_D [1360] \Slvft.ham_mbits_D [1352] \Slvft.ham_mbits_D [1348] \Slvft.ham_mbits_D [1346:1344] \Slvft.ham_mbits_D [1328] \Slvft.ham_mbits_D [1320] \Slvft.ham_mbits_D [1316] \Slvft.ham_mbits_D [1314:1312] \Slvft.ham_mbits_D [1296] \Slvft.ham_mbits_D [1288] \Slvft.ham_mbits_D [1284] \Slvft.ham_mbits_D [1282:1280] \Slvft.ham_mbits_D [1264] \Slvft.ham_mbits_D [1256] \Slvft.ham_mbits_D [1252] \Slvft.ham_mbits_D [1250:1248] \Slvft.ham_mbits_D [1232] \Slvft.ham_mbits_D [1224] \Slvft.ham_mbits_D [1220] \Slvft.ham_mbits_D [1218:1216] \Slvft.ham_mbits_D [1200] \Slvft.ham_mbits_D [1192] \Slvft.ham_mbits_D [1188] \Slvft.ham_mbits_D [1186:1184] \Slvft.ham_mbits_D [1168] \Slvft.ham_mbits_D [1160] \Slvft.ham_mbits_D [1156] \Slvft.ham_mbits_D [1154:1152] \Slvft.ham_mbits_D [1136] \Slvft.ham_mbits_D [1128] \Slvft.ham_mbits_D [1124] \Slvft.ham_mbits_D [1122:1120] \Slvft.ham_mbits_D [1104] \Slvft.ham_mbits_D [1096] \Slvft.ham_mbits_D [1092] \Slvft.ham_mbits_D [1090:1088] \Slvft.ham_mbits_D [1072] \Slvft.ham_mbits_D [1064] \Slvft.ham_mbits_D [1060] \Slvft.ham_mbits_D [1058:1056] \Slvft.ham_mbits_D [1040] \Slvft.ham_mbits_D [1032] \Slvft.ham_mbits_D [1028] \Slvft.ham_mbits_D [1026:1024] \Slvft.ham_mbits_D [1008] \Slvft.ham_mbits_D [1000] \Slvft.ham_mbits_D [996] \Slvft.ham_mbits_D [994:992] \Slvft.ham_mbits_D [976] \Slvft.ham_mbits_D [968] \Slvft.ham_mbits_D [964] \Slvft.ham_mbits_D [962:960] \Slvft.ham_mbits_D [944] \Slvft.ham_mbits_D [936] \Slvft.ham_mbits_D [932] \Slvft.ham_mbits_D [930:928] \Slvft.ham_mbits_D [912] \Slvft.ham_mbits_D [904] \Slvft.ham_mbits_D [900] \Slvft.ham_mbits_D [898:896] \Slvft.ham_mbits_D [880] \Slvft.ham_mbits_D [872] \Slvft.ham_mbits_D [868] \Slvft.ham_mbits_D [866:864] \Slvft.ham_mbits_D [848] \Slvft.ham_mbits_D [840] \Slvft.ham_mbits_D [836] \Slvft.ham_mbits_D [834:832] \Slvft.ham_mbits_D [816] \Slvft.ham_mbits_D [808] \Slvft.ham_mbits_D [804] \Slvft.ham_mbits_D [802:800] \Slvft.ham_mbits_D [784] \Slvft.ham_mbits_D [776] \Slvft.ham_mbits_D [772] \Slvft.ham_mbits_D [770:768] \Slvft.ham_mbits_D [752] \Slvft.ham_mbits_D [744] \Slvft.ham_mbits_D [740] \Slvft.ham_mbits_D [738:736] \Slvft.ham_mbits_D [720] \Slvft.ham_mbits_D [712] \Slvft.ham_mbits_D [708] \Slvft.ham_mbits_D [706:704] \Slvft.ham_mbits_D [688] \Slvft.ham_mbits_D [680] \Slvft.ham_mbits_D [676] \Slvft.ham_mbits_D [674:672] \Slvft.ham_mbits_D [656] \Slvft.ham_mbits_D [648] \Slvft.ham_mbits_D [644] \Slvft.ham_mbits_D [642:640] \Slvft.ham_mbits_D [624] \Slvft.ham_mbits_D [616] \Slvft.ham_mbits_D [612] \Slvft.ham_mbits_D [610:608] \Slvft.ham_mbits_D [592] \Slvft.ham_mbits_D [584] \Slvft.ham_mbits_D [580] \Slvft.ham_mbits_D [578:576] \Slvft.ham_mbits_D [560] \Slvft.ham_mbits_D [552] \Slvft.ham_mbits_D [548] \Slvft.ham_mbits_D [546:544] \Slvft.ham_mbits_D [528] \Slvft.ham_mbits_D [520] \Slvft.ham_mbits_D [516] \Slvft.ham_mbits_D [514:512] \Slvft.ham_mbits_D [496] \Slvft.ham_mbits_D [488] \Slvft.ham_mbits_D [484] \Slvft.ham_mbits_D [482:480] \Slvft.ham_mbits_D [464] \Slvft.ham_mbits_D [456] \Slvft.ham_mbits_D [452] \Slvft.ham_mbits_D [450:448] \Slvft.ham_mbits_D [432] \Slvft.ham_mbits_D [424] \Slvft.ham_mbits_D [420] \Slvft.ham_mbits_D [418:416] \Slvft.ham_mbits_D [400] \Slvft.ham_mbits_D [392] \Slvft.ham_mbits_D [388] \Slvft.ham_mbits_D [386:384] \Slvft.ham_mbits_D [368] \Slvft.ham_mbits_D [360] \Slvft.ham_mbits_D [356] \Slvft.ham_mbits_D [354:352] \Slvft.ham_mbits_D [336] \Slvft.ham_mbits_D [328] \Slvft.ham_mbits_D [324] \Slvft.ham_mbits_D [322:320] \Slvft.ham_mbits_D [304] \Slvft.ham_mbits_D [296] \Slvft.ham_mbits_D [292] \Slvft.ham_mbits_D [290:288] \Slvft.ham_mbits_D [272] \Slvft.ham_mbits_D [264] \Slvft.ham_mbits_D [260] \Slvft.ham_mbits_D [258:256] \Slvft.ham_mbits_D [240] \Slvft.ham_mbits_D [232] \Slvft.ham_mbits_D [228] \Slvft.ham_mbits_D [226:224] \Slvft.ham_mbits_D [208] \Slvft.ham_mbits_D [200] \Slvft.ham_mbits_D [196] \Slvft.ham_mbits_D [194:192] \Slvft.ham_mbits_D [176] \Slvft.ham_mbits_D [168] \Slvft.ham_mbits_D [164] \Slvft.ham_mbits_D [162:160] \Slvft.ham_mbits_D [144] \Slvft.ham_mbits_D [136] \Slvft.ham_mbits_D [132] \Slvft.ham_mbits_D [130:128] \Slvft.ham_mbits_D [112] \Slvft.ham_mbits_D [104] \Slvft.ham_mbits_D [100] \Slvft.ham_mbits_D [98:96] \Slvft.ham_mbits_D [80] \Slvft.ham_mbits_D [72] \Slvft.ham_mbits_D [68] \Slvft.ham_mbits_D [66:64] \Slvft.ham_mbits_D [48] \Slvft.ham_mbits_D [40] \Slvft.ham_mbits_D [36] \Slvft.ham_mbits_D [34:32] \Slvft.ham_mbits_D [16] \Slvft.ham_mbits_D [8] \Slvft.ham_mbits_D [4] \Slvft.ham_mbits_D [2:0] }, Q = \Slvft.ham_pbits, rval = 348'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $verific$trip0_preg_reg[0]$../../../submodules/seu_ip/triple_reg.sv:62$11069 ($dff) from module triple_reg(IN_WIDTH=1) (D = \din_i, Q = \trip0_preg, rval = 1'0).
Adding SRST signal on $verific$trip0_preg_reg$../../../submodules/seu_ip/triple_reg.sv:62$11494 ($dff) from module triple_reg(IN_WIDTH=2) (D = \din_i, Q = \trip0_preg, rval = 2'00).
Adding SRST signal on $verific$trip0_preg_reg$../../../submodules/seu_ip/triple_reg.sv:62$11243 ($dff) from module triple_reg(IN_WIDTH=32) (D = \din_i, Q = \trip0_preg, rval = 0).

25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..
Removed 170 unused cells and 227 unused wires.
<suppressed ~181 debug messages>

25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
<suppressed ~12 debug messages>
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

25.9. Rerunning OPT passes. (Maybe there is more to do..)

25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~161 debug messages>

25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
<suppressed ~144 debug messages>
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
<suppressed ~138 debug messages>
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
<suppressed ~3 debug messages>
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
<suppressed ~15 debug messages>
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
<suppressed ~3 debug messages>
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 101 cells.

25.13. Executing OPT_DFF pass (perform DFF optimizations).

25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..
Removed 0 unused cells and 93 unused wires.
<suppressed ~5 debug messages>

25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

25.16. Rerunning OPT passes. (Maybe there is more to do..)

25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

25.20. Executing OPT_DFF pass (perform DFF optimizations).

25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

25.23. Finished OPT passes. (There is nothing left to do.)

26. Executing FSM pass (extract and optimize FSM).

26.1. Executing FSM_DETECT pass (finding FSMs in design).

26.2. Executing FSM_EXTRACT pass (extracting FSM from design).

26.3. Executing FSM_OPT pass (simple optimizations of FSMs).

26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

26.5. Executing FSM_OPT pass (simple optimizations of FSMs).

26.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

26.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

26.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

27. Executing OPT pass (performing simple optimizations).

27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

27.6. Executing OPT_DFF pass (perform DFF optimizations).

27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

27.9. Finished OPT passes. (There is nothing left to do.)

28. Executing MEMORY pass.

28.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

28.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

28.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

28.4. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

28.5. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

28.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

28.7. Executing MEMORY_COLLECT pass (generating $mem cells).

28.8. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

29.6. Executing OPT_DFF pass (perform DFF optimizations).

29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

29.9. Finished OPT passes. (There is nothing left to do.)

30. Executing TECHMAP pass (map to technology primitives).

30.1. Executing Verilog-2005 frontend: /home/gcabo/Programs/tabby/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/gcabo/Programs/tabby/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

30.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$constmap:00c735041a710ec0a51bfb01d9b8925611c2461f$paramod$fc5befd3d732ca0947cbf5985c44892a485fc824\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:a8dfa6f5247ab3b4f143deaaafd5c73c2e7a7f3c$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:41f10b5641a353fdd4fd8cdba8a06a443a21b8ab$paramod$952e1e00541b4b705503c690b01bf65ca8dd5c79\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:5fa07ae87cabd38f8051ce26d6363849e7488bdb$paramod$2c070848037cd21a8a4ff5d6927b23d59c2d3d2e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:da70d30b4fb46f83d61449940ac6b173da59b5bc$paramod$253154783717c092dcf79528e85a0042b38b7875\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'0
  Constant input on bit 6 of port A: 1'0
  Constant input on bit 7 of port A: 1'0
  Constant input on bit 8 of port A: 1'1
  Constant input on bit 9 of port A: 1'0
  Constant input on bit 10 of port A: 1'1
  Constant input on bit 11 of port A: 1'1
  Constant input on bit 12 of port A: 1'1
  Constant input on bit 13 of port A: 1'0
  Constant input on bit 14 of port A: 1'0
  Constant input on bit 15 of port A: 1'0
  Constant input on bit 16 of port A: 1'1
  Constant input on bit 17 of port A: 1'1
  Constant input on bit 18 of port A: 1'1
  Constant input on bit 19 of port A: 1'1
  Constant input on bit 20 of port A: 1'0
  Constant input on bit 21 of port A: 1'1
  Constant input on bit 22 of port A: 1'0
  Constant input on bit 23 of port A: 1'1
  Constant input on bit 24 of port A: 1'0
  Constant input on bit 25 of port A: 1'1
  Constant input on bit 26 of port A: 1'1
  Constant input on bit 27 of port A: 1'1
  Constant input on bit 28 of port A: 1'1
  Constant input on bit 29 of port A: 1'1
  Constant input on bit 30 of port A: 1'0
  Constant input on bit 31 of port A: 1'1
  Constant input on bit 32 of port A: 1'1
  Constant input on bit 33 of port A: 1'0
  Constant input on bit 34 of port A: 1'0
  Constant input on bit 35 of port A: 1'0
  Constant input on bit 36 of port A: 1'1
  Constant input on bit 37 of port A: 1'0
  Constant input on bit 38 of port A: 1'1
  Constant input on bit 39 of port A: 1'0
  Constant input on bit 40 of port A: 1'1
  Constant input on bit 41 of port A: 1'0
  Constant input on bit 42 of port A: 1'1
  Constant input on bit 43 of port A: 1'0
  Constant input on bit 44 of port A: 1'1
  Constant input on bit 45 of port A: 1'1
  Constant input on bit 46 of port A: 1'0
  Constant input on bit 47 of port A: 1'1
  Constant input on bit 48 of port A: 1'1
  Constant input on bit 49 of port A: 1'1
  Constant input on bit 50 of port A: 1'1
  Constant input on bit 51 of port A: 1'1
  Constant input on bit 52 of port A: 1'0
  Constant input on bit 53 of port A: 1'1
  Constant input on bit 54 of port A: 1'0
  Constant input on bit 55 of port A: 1'1
  Constant input on bit 56 of port A: 1'0
  Constant input on bit 57 of port A: 1'1
  Constant input on bit 58 of port A: 1'1
  Constant input on bit 59 of port A: 1'1
  Constant input on bit 60 of port A: 1'1
  Constant input on bit 61 of port A: 1'1
  Constant input on bit 62 of port A: 1'0
  Constant input on bit 63 of port A: 1'1
  Bit 96 of port A and bit 64 of port A are connected.
  Bit 97 of port A and bit 65 of port A are connected.
  Bit 98 of port A and bit 66 of port A are connected.
  Bit 99 of port A and bit 67 of port A are connected.
  Bit 100 of port A and bit 68 of port A are connected.
  Bit 101 of port A and bit 69 of port A are connected.
  Bit 102 of port A and bit 70 of port A are connected.
  Bit 103 of port A and bit 71 of port A are connected.
  Bit 104 of port A and bit 72 of port A are connected.
  Bit 105 of port A and bit 73 of port A are connected.
  Bit 106 of port A and bit 74 of port A are connected.
  Bit 107 of port A and bit 75 of port A are connected.
  Bit 108 of port A and bit 76 of port A are connected.
  Bit 109 of port A and bit 77 of port A are connected.
  Bit 110 of port A and bit 78 of port A are connected.
  Bit 111 of port A and bit 79 of port A are connected.
  Bit 112 of port A and bit 80 of port A are connected.
  Bit 113 of port A and bit 81 of port A are connected.
  Bit 114 of port A and bit 82 of port A are connected.
  Bit 115 of port A and bit 83 of port A are connected.
  Bit 116 of port A and bit 84 of port A are connected.
  Bit 117 of port A and bit 85 of port A are connected.
  Bit 118 of port A and bit 86 of port A are connected.
  Bit 119 of port A and bit 87 of port A are connected.
  Bit 120 of port A and bit 88 of port A are connected.
  Bit 121 of port A and bit 89 of port A are connected.
  Bit 122 of port A and bit 90 of port A are connected.
  Bit 123 of port A and bit 91 of port A are connected.
  Bit 124 of port A and bit 92 of port A are connected.
  Bit 125 of port A and bit 93 of port A are connected.
  Bit 126 of port A and bit 94 of port A are connected.
  Bit 127 of port A and bit 95 of port A are connected.
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 2 of port B: 1'0
  Constant input on bit 3 of port B: 1'0
  Constant input on bit 4 of port B: 1'0
Creating constmapped module `$paramod$constmap:21463a58daeeaf4ea16d8415d0a2532450db7605$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr'.

30.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:21463a58daeeaf4ea16d8415d0a2532450db7605$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~63750 debug messages>

30.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:21463a58daeeaf4ea16d8415d0a2532450db7605$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~2492 debug messages>
Removed 160 unused cells and 24 unused wires.
Using template $paramod$constmap:21463a58daeeaf4ea16d8415d0a2532450db7605$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'0
  Constant input on bit 6 of port A: 1'0
  Constant input on bit 7 of port A: 1'0
  Constant input on bit 8 of port A: 1'1
  Constant input on bit 9 of port A: 1'0
  Constant input on bit 10 of port A: 1'1
  Constant input on bit 11 of port A: 1'1
  Constant input on bit 12 of port A: 1'1
  Constant input on bit 13 of port A: 1'0
  Constant input on bit 14 of port A: 1'0
  Constant input on bit 15 of port A: 1'0
  Constant input on bit 16 of port A: 1'0
  Constant input on bit 17 of port A: 1'1
  Constant input on bit 18 of port A: 1'1
  Constant input on bit 19 of port A: 1'1
  Constant input on bit 20 of port A: 1'1
  Constant input on bit 21 of port A: 1'1
  Constant input on bit 22 of port A: 1'1
  Constant input on bit 23 of port A: 1'1
  Constant input on bit 24 of port A: 1'0
  Constant input on bit 25 of port A: 1'1
  Constant input on bit 26 of port A: 1'0
  Constant input on bit 27 of port A: 1'1
  Constant input on bit 28 of port A: 1'0
  Constant input on bit 29 of port A: 1'0
  Constant input on bit 30 of port A: 1'1
  Constant input on bit 31 of port A: 1'1
  Constant input on bit 32 of port A: 1'1
  Constant input on bit 33 of port A: 1'0
  Constant input on bit 34 of port A: 1'0
  Constant input on bit 35 of port A: 1'0
  Constant input on bit 36 of port A: 1'1
  Constant input on bit 37 of port A: 1'0
  Constant input on bit 38 of port A: 1'1
  Constant input on bit 39 of port A: 1'0
  Constant input on bit 40 of port A: 1'1
  Constant input on bit 41 of port A: 1'0
  Constant input on bit 42 of port A: 1'1
  Constant input on bit 43 of port A: 1'0
  Constant input on bit 44 of port A: 1'1
  Constant input on bit 45 of port A: 1'1
  Constant input on bit 46 of port A: 1'0
  Constant input on bit 47 of port A: 1'1
  Constant input on bit 48 of port A: 1'0
  Constant input on bit 49 of port A: 1'1
  Constant input on bit 50 of port A: 1'1
  Constant input on bit 51 of port A: 1'1
  Constant input on bit 52 of port A: 1'1
  Constant input on bit 53 of port A: 1'1
  Constant input on bit 54 of port A: 1'1
  Constant input on bit 55 of port A: 1'1
  Constant input on bit 56 of port A: 1'0
  Constant input on bit 57 of port A: 1'1
  Constant input on bit 58 of port A: 1'0
  Constant input on bit 59 of port A: 1'1
  Constant input on bit 60 of port A: 1'0
  Constant input on bit 61 of port A: 1'0
  Constant input on bit 62 of port A: 1'1
  Constant input on bit 63 of port A: 1'1
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 2 of port B: 1'0
  Constant input on bit 3 of port B: 1'0
  Constant input on bit 4 of port B: 1'0
Creating constmapped module `$paramod$constmap:cebc2261262054744613424430d261aa08e7259c$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr'.

30.30. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:cebc2261262054744613424430d261aa08e7259c$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

30.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:cebc2261262054744613424430d261aa08e7259c$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~2460 debug messages>
Removed 160 unused cells and 24 unused wires.
Using template $paramod$constmap:cebc2261262054744613424430d261aa08e7259c$paramod$c9f78a76619cefc8dec5f384e8061cf06c9a0cbd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:c2a6b634f2dfc0262601fcbcb10dc1bc16f5e877$paramod$b73ff74bc0c5fc1214d99ceeb32fa1e470941ca6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 1 of port A: 1'0
  Bit 3 of port A and bit 2 of port A are connected.
Creating constmapped module `$paramod$constmap:a2549b7a46f7816667d202a30d928a176cd7c95d$paramod$b73ff74bc0c5fc1214d99ceeb32fa1e470941ca6\_90_shift_ops_shr_shl_sshl_sshr'.

30.37. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:a2549b7a46f7816667d202a30d928a176cd7c95d$paramod$b73ff74bc0c5fc1214d99ceeb32fa1e470941ca6\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

30.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:a2549b7a46f7816667d202a30d928a176cd7c95d$paramod$b73ff74bc0c5fc1214d99ceeb32fa1e470941ca6\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~18 debug messages>
Removed 5 unused cells and 10 unused wires.
Using template $paramod$constmap:a2549b7a46f7816667d202a30d928a176cd7c95d$paramod$b73ff74bc0c5fc1214d99ceeb32fa1e470941ca6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=6:B_SIGNED=0:B_WIDTH=6:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$ed7d9a57a5ddab90b8eaf1cb85bb854938d2dab4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $sdffe.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=8:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod$constmap:214ece24acbe7b0c953a8679523827aec8fd75b8$paramod$e9310c9d5209bb0110b9dca4f77d7ef757379a5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_not.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$constmap:855762987def4c994075d832f91a6f5255e44c76$paramod$595041de62cba85aea76c236846eb9682f1c3969\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=37:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=37:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=37:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=37:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=37:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_90_alu for cells of type $alu.
Using template $paramod$dd5ba471f7dcf35707f23b88cfd15b9582f97277\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100101 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=1:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=64:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=32:B_SIGNED=0:B_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:A_SIGNED=0:A_WIDTH=8:B_SIGNED=0:B_WIDTH=8:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$2126a3039e9678f6a4bd73d35a1f58ee2616afb2\_90_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
No more expansions possible.
<suppressed ~40732 debug messages>

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
<suppressed ~2577 debug messages>
Optimizing module PMU_counters(N_COUNTERS=24).
<suppressed ~4392 debug messages>
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
<suppressed ~583 debug messages>
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
<suppressed ~648 debug messages>
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
<suppressed ~156 debug messages>
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
<suppressed ~38 debug messages>
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
<suppressed ~100 debug messages>
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
<suppressed ~10 debug messages>
Optimizing module way3u2a_voter(W=8,D=2).
<suppressed ~196 debug messages>
Optimizing module way3ua_voter.
<suppressed ~388 debug messages>
Optimizing module way3ua_voter(W=2).
<suppressed ~28 debug messages>
Optimizing module way3ua_voter(W=64).
<suppressed ~772 debug messages>

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
<suppressed ~8091 debug messages>
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
<suppressed ~2376 debug messages>
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
<suppressed ~3 debug messages>
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
<suppressed ~159 debug messages>
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
<suppressed ~696 debug messages>
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
<suppressed ~528 debug messages>
Finding identical cells in module `\hamming32t26d_enc_default'.
<suppressed ~69 debug messages>
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
<suppressed ~132 debug messages>
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
<suppressed ~189 debug messages>
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
<suppressed ~9 debug messages>
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
<suppressed ~381 debug messages>
Finding identical cells in module `\way3ua_voter'.
<suppressed ~765 debug messages>
Finding identical cells in module `\way3ua_voter(W=2)'.
<suppressed ~45 debug messages>
Finding identical cells in module `\way3ua_voter(W=64)'.
<suppressed ~1533 debug messages>
Removed a total of 4992 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

31.6. Executing OPT_DFF pass (perform DFF optimizations).

31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..
Removed 1878 unused cells and 7068 unused wires.
<suppressed ~1894 debug messages>

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
<suppressed ~30 debug messages>
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

31.9. Rerunning OPT passes. (Maybe there is more to do..)

31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

31.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:420:simplemap_dff$156845 ($_DFF_P_) from module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

31.16. Rerunning OPT passes. (Maybe there is more to do..)

31.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_counters(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_overflow(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_quota(N_COUNTERS=24)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PMU_raw(N_COUNTERS=24,FT=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RDC_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \crossbar_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_dec_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hamming32t26d_enc_default..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top_ft..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \triple_reg(IN_WIDTH=32)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=1)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3_voter(IN_WIDTH=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3u2a_voter(W=8,D=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter(W=2)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \way3ua_voter(W=64)..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
  Optimizing cells in module \PMU_counters(N_COUNTERS=24).
  Optimizing cells in module \PMU_overflow(N_COUNTERS=24).
  Optimizing cells in module \PMU_quota(N_COUNTERS=24).
  Optimizing cells in module \PMU_raw(N_COUNTERS=24,FT=1).
  Optimizing cells in module \RDC_default.
  Optimizing cells in module \crossbar_default.
  Optimizing cells in module \hamming32t26d_dec_default.
  Optimizing cells in module \hamming32t26d_enc_default.
  Optimizing cells in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
  Optimizing cells in module \top_ft.
  Optimizing cells in module \triple_reg(IN_WIDTH=1).
  Optimizing cells in module \triple_reg(IN_WIDTH=2).
  Optimizing cells in module \triple_reg(IN_WIDTH=32).
  Optimizing cells in module \way3_voter.
  Optimizing cells in module \way3_voter(IN_WIDTH=1).
  Optimizing cells in module \way3_voter(IN_WIDTH=2).
  Optimizing cells in module \way3u2a_voter(W=8,D=2).
  Optimizing cells in module \way3ua_voter.
  Optimizing cells in module \way3ua_voter(W=2).
  Optimizing cells in module \way3ua_voter(W=64).
Performed a total of 0 changes.

31.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Finding identical cells in module `\PMU_counters(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_overflow(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_quota(N_COUNTERS=24)'.
Finding identical cells in module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Finding identical cells in module `\RDC_default'.
Finding identical cells in module `\crossbar_default'.
Finding identical cells in module `\hamming32t26d_dec_default'.
Finding identical cells in module `\hamming32t26d_enc_default'.
Finding identical cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Finding identical cells in module `\top_ft'.
Finding identical cells in module `\triple_reg(IN_WIDTH=1)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=2)'.
Finding identical cells in module `\triple_reg(IN_WIDTH=32)'.
Finding identical cells in module `\way3_voter'.
Finding identical cells in module `\way3_voter(IN_WIDTH=1)'.
Finding identical cells in module `\way3_voter(IN_WIDTH=2)'.
Finding identical cells in module `\way3u2a_voter(W=8,D=2)'.
Finding identical cells in module `\way3ua_voter'.
Finding identical cells in module `\way3ua_voter(W=2)'.
Finding identical cells in module `\way3ua_voter(W=64)'.
Removed a total of 0 cells.

31.20. Executing OPT_DFF pass (perform DFF optimizations).

31.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)..
Finding unused cells or wires in module \PMU_counters(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_overflow(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_quota(N_COUNTERS=24)..
Finding unused cells or wires in module \PMU_raw(N_COUNTERS=24,FT=1)..
Finding unused cells or wires in module \RDC_default..
Finding unused cells or wires in module \crossbar_default..
Finding unused cells or wires in module \hamming32t26d_dec_default..
Finding unused cells or wires in module \hamming32t26d_enc_default..
Finding unused cells or wires in module \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)..
Finding unused cells or wires in module \top_ft..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=1)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=2)..
Finding unused cells or wires in module \triple_reg(IN_WIDTH=32)..
Finding unused cells or wires in module \way3_voter..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=1)..
Finding unused cells or wires in module \way3_voter(IN_WIDTH=2)..
Finding unused cells or wires in module \way3u2a_voter(W=8,D=2)..
Finding unused cells or wires in module \way3ua_voter..
Finding unused cells or wires in module \way3ua_voter(W=2)..
Finding unused cells or wires in module \way3ua_voter(W=64)..

31.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module MCCU(N_CORES=4,FT=1,CORE_EVENTS=2).
Optimizing module PMU_counters(N_COUNTERS=24).
Optimizing module PMU_overflow(N_COUNTERS=24).
Optimizing module PMU_quota(N_COUNTERS=24).
Optimizing module PMU_raw(N_COUNTERS=24,FT=1).
Optimizing module RDC_default.
Optimizing module crossbar_default.
Optimizing module hamming32t26d_dec_default.
Optimizing module hamming32t26d_enc_default.
Optimizing module pmu_ahb(haddr=-2146435072,hmask=4095,FT=1).
Optimizing module top_ft.
Optimizing module triple_reg(IN_WIDTH=1).
Optimizing module triple_reg(IN_WIDTH=2).
Optimizing module triple_reg(IN_WIDTH=32).
Optimizing module way3_voter.
Optimizing module way3_voter(IN_WIDTH=1).
Optimizing module way3_voter(IN_WIDTH=2).
Optimizing module way3u2a_voter(W=8,D=2).
Optimizing module way3ua_voter.
Optimizing module way3ua_voter(W=2).
Optimizing module way3ua_voter(W=64).

31.23. Finished OPT passes. (There is nothing left to do.)

32. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=7.98) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=10.32) is a direct match for cell type $_DFFSR_PNN_.
  final dff cell mappings:
    \DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    \DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    unmapped dff cell: $_DFF_PN0_
    unmapped dff cell: $_DFF_PN1_
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    unmapped dff cell: $_DFFSR_NNN_
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

32.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)':
  mapped 168 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\PMU_counters(N_COUNTERS=24)':
  mapped 768 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\PMU_overflow(N_COUNTERS=24)':
  mapped 24 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\PMU_quota(N_COUNTERS=24)':
  mapped 67 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\PMU_raw(N_COUNTERS=24,FT=1)':
  mapped 1 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\RDC_default':
  mapped 137 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\crossbar_default':
  mapped 24 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\hamming32t26d_dec_default':
Mapping DFF cells in module `\hamming32t26d_enc_default':
Mapping DFF cells in module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)':
  mapped 1852 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\top_ft':
Mapping DFF cells in module `\triple_reg(IN_WIDTH=1)':
  mapped 1 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\triple_reg(IN_WIDTH=2)':
  mapped 2 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\triple_reg(IN_WIDTH=32)':
  mapped 32 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\way3_voter':
Mapping DFF cells in module `\way3_voter(IN_WIDTH=1)':
Mapping DFF cells in module `\way3_voter(IN_WIDTH=2)':
Mapping DFF cells in module `\way3u2a_voter(W=8,D=2)':
Mapping DFF cells in module `\way3ua_voter':
Mapping DFF cells in module `\way3ua_voter(W=2)':
Mapping DFF cells in module `\way3ua_voter(W=64)':

33. Executing ABC pass (technology mapping using ABC).

33.1. Extracting gate netlist of module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)' to `<abc-temp-dir>/input.blif'..
Extracted 3660 gates and 4388 wires to a netlist network with 726 inputs and 174 outputs.

33.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   2762 ( 13.4 %)   Cap =  4.6 ff (  5.8 %)   Area =     6835.35 ( 88.3 %)   Delay =  1502.94 ps  ( 18.2 %)               
ABC: Path  0 --     504 : 0    4 pi      A =   0.00  Df =  29.0   -6.0 ps  S =  39.2 ps  Cin =  0.0 ff  Cout =  12.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    1033 : 1    3 INVX1   A =   1.41  Df =  58.1   -7.5 ps  S =  24.5 ps  Cin =  1.5 ff  Cout =   7.3 ff  Cmax = 238.8 ff  G =  466  
ABC: Path  2 --    1035 : 3    2 OAI21X1 A =   2.82  Df = 131.9  -21.7 ps  S =  52.9 ps  Cin =  2.5 ff  Cout =   5.1 ff  Cmax = 229.4 ff  G =  195  
ABC: Path  3 --    1037 : 3    1 AOI21X1 A =   2.82  Df = 165.7  -19.2 ps  S =  32.3 ps  Cin =  2.6 ff  Cout =   3.3 ff  Cmax =   0.0 ff  G =  126  
ABC: Path  4 --    1038 : 3    2 NOR3X1  A =   2.82  Df = 198.5  -13.4 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path  5 --    1039 : 3    1 NOR3X1  A =   2.82  Df = 231.2   -8.7 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path  6 --    1040 : 3    2 NOR3X1  A =   2.82  Df = 269.9   -6.3 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path  7 --    1041 : 3    1 NOR3X1  A =   2.82  Df = 302.5   -1.6 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path  8 --    1042 : 3    2 NOR3X1  A =   2.82  Df = 342.1   -0.8 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path  9 --    1043 : 3    1 NOR3X1  A =   2.82  Df = 379.5   -5.5 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 10 --    1044 : 3    2 NOR3X1  A =   2.82  Df = 420.6   -7.9 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 11 --    1045 : 3    1 NOR3X1  A =   2.82  Df = 457.9  -12.6 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 12 --    1046 : 3    2 NOR3X1  A =   2.82  Df = 499.1  -15.1 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 13 --    1047 : 3    1 NOR3X1  A =   2.82  Df = 536.4  -19.7 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 14 --    1048 : 3    2 NOR3X1  A =   2.82  Df = 577.6  -22.2 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 15 --    1049 : 3    1 NOR3X1  A =   2.82  Df = 614.9  -26.9 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 16 --    1050 : 3    2 NOR3X1  A =   2.82  Df = 656.1  -29.3 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 17 --    1051 : 3    1 NOR3X1  A =   2.82  Df = 693.4  -34.0 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 18 --    1052 : 3    2 NOR3X1  A =   2.82  Df = 734.5  -36.4 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 19 --    1053 : 3    1 NOR3X1  A =   2.82  Df = 771.9  -41.1 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 20 --    1054 : 3    2 NOR3X1  A =   2.82  Df = 813.0  -43.5 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 21 --    1055 : 3    1 NOR3X1  A =   2.82  Df = 850.4  -48.2 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 22 --    1056 : 3    2 NOR3X1  A =   2.82  Df = 891.5  -50.6 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 23 --    1057 : 3    1 NOR3X1  A =   2.82  Df = 927.7  -55.6 ps  S =  52.3 ps  Cin =  3.1 ff  Cout =   2.8 ff  Cmax =  96.9 ff  G =   87  
ABC: Path 24 --    1059 : 3    2 OAI21X1 A =   2.82  Df = 982.7  -80.2 ps  S =  58.8 ps  Cin =  2.5 ff  Cout =   5.7 ff  Cmax = 229.4 ff  G =  228  
ABC: Path 25 --    1062 : 3    1 AOI21X1 A =   2.82  Df =1020.5  -83.9 ps  S =  32.4 ps  Cin =  2.6 ff  Cout =   3.3 ff  Cmax =   0.0 ff  G =  126  
ABC: Path 26 --    1063 : 3    2 NOR3X1  A =   2.82  Df =1059.1  -89.6 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 27 --    1064 : 3    1 NOR3X1  A =   2.82  Df =1096.4  -94.3 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 28 --    1065 : 3    2 NOR3X1  A =   2.82  Df =1137.6  -96.7 ps  S =  69.8 ps  Cin =  3.1 ff  Cout =   6.1 ff  Cmax =  96.9 ff  G =  192  
ABC: Path 29 --    1066 : 3    1 NOR3X1  A =   2.82  Df =1174.9 -101.4 ps  S =  54.5 ps  Cin =  3.1 ff  Cout =   3.3 ff  Cmax =  96.9 ff  G =  104  
ABC: Path 30 --    1067 : 3    2 NOR3X1  A =   2.82  Df =1214.7 -103.3 ps  S =  67.1 ps  Cin =  3.1 ff  Cout =   5.7 ff  Cmax =  96.9 ff  G =  179  
ABC: Path 31 --    1073 : 3    2 NOR3X1  A =   2.82  Df =1255.7 -104.8 ps  S =  64.6 ps  Cin =  3.1 ff  Cout =   5.4 ff  Cmax =  96.9 ff  G =  173  
ABC: Path 32 --    1078 : 3    2 NOR3X1  A =   2.82  Df =1310.4 -113.1 ps  S =  65.0 ps  Cin =  3.1 ff  Cout =   5.3 ff  Cmax =  96.9 ff  G =  168  
ABC: Path 33 --    1102 : 3    5 NOR3X1  A =   2.82  Df =1374.8  -98.9 ps  S =  87.8 ps  Cin =  3.1 ff  Cout =  10.2 ff  Cmax =  96.9 ff  G =  322  
ABC: Path 34 --    1283 : 1   10 BUFX2   A =   2.35  Df =1441.0  -86.9 ps  S =  73.3 ps  Cin =  1.5 ff  Cout =  28.3 ff  Cmax = 518.7 ff  G = 1784  
ABC: Path 35 --    1285 : 3    1 NAND3X1 A =   2.35  Df =1484.4 -101.7 ps  S =  38.6 ps  Cin =  2.7 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =   99  
ABC: Path 36 --    1291 : 3    1 AOI21X1 A =   2.82  Df =1502.9  -90.1 ps  S =  16.3 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi503 (\Ft_suma.ccc_suma_vint[0] [0]).  End-point = po2 ($auto$rtlil.cc:2316:MuxGate$166102).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:      171
ABC RESULTS:            AND2X2 cells:       10
ABC RESULTS:           AOI21X1 cells:       98
ABC RESULTS:           AOI22X1 cells:      133
ABC RESULTS:             BUFX2 cells:       77
ABC RESULTS:             BUFX4 cells:        3
ABC RESULTS:             INVX1 cells:      289
ABC RESULTS:           NAND2X1 cells:      892
ABC RESULTS:           NAND3X1 cells:      393
ABC RESULTS:            NOR2X1 cells:       54
ABC RESULTS:            NOR3X1 cells:       80
ABC RESULTS:           OAI21X1 cells:       73
ABC RESULTS:             OR2X1 cells:      150
ABC RESULTS:           XNOR2X1 cells:      220
ABC RESULTS:            XOR2X1 cells:      119
ABC RESULTS:        internal signals:     3488
ABC RESULTS:           input signals:      726
ABC RESULTS:          output signals:      174
Removing temp directory.

33.2. Extracting gate netlist of module `\PMU_counters(N_COUNTERS=24)' to `<abc-temp-dir>/input.blif'..
Extracted 4346 gates and 5911 wires to a netlist network with 1564 inputs and 1536 outputs.

33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   4777 ( 14.1 %)   Cap =  4.0 ff ( 10.8 %)   Area =    11837.62 ( 78.4 %)   Delay =  1085.25 ps  ( 11.3 %)               
ABC: Path  0 --    1541 : 0    3 pi      A =   0.00  Df =   9.3   -4.1 ps  S =  19.3 ps  Cin =  0.0 ff  Cout =   4.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    3121 : 1   10 BUFX2   A =   2.35  Df =  78.2   -9.4 ps  S =  68.1 ps  Cin =  1.5 ff  Cout =  28.3 ff  Cmax = 518.7 ff  G = 1784  
ABC: Path  2 --    3122 : 3    3 NAND3X1 A =   2.35  Df = 123.8  -11.4 ps  S =  58.1 ps  Cin =  2.7 ff  Cout =   6.9 ff  Cmax =   0.0 ff  G =  253  
ABC: Path  3 --    3123 : 3    3 NOR3X1  A =   2.82  Df = 165.8   -9.2 ps  S =  75.3 ps  Cin =  3.1 ff  Cout =   7.4 ff  Cmax =  96.9 ff  G =  231  
ABC: Path  4 --    3124 : 3    3 NAND3X1 A =   2.35  Df = 220.0  -29.3 ps  S =  62.4 ps  Cin =  2.7 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  284  
ABC: Path  5 --    3125 : 3    3 NOR3X1  A =   2.82  Df = 270.4  -21.8 ps  S =  93.4 ps  Cin =  3.1 ff  Cout =  11.3 ff  Cmax =  96.9 ff  G =  349  
ABC: Path  6 --    3126 : 3    4 NAND3X1 A =   2.35  Df = 333.6  -43.4 ps  S =  72.2 ps  Cin =  2.7 ff  Cout =   9.8 ff  Cmax =   0.0 ff  G =  359  
ABC: Path  7 --    3127 : 3    3 NOR3X1  A =   2.82  Df = 385.1  -38.2 ps  S =  90.0 ps  Cin =  3.1 ff  Cout =  10.6 ff  Cmax =  96.9 ff  G =  327  
ABC: Path  8 --    3128 : 3    3 NAND3X1 A =   2.35  Df = 441.4  -57.0 ps  S =  62.4 ps  Cin =  2.7 ff  Cout =   7.7 ff  Cmax =   0.0 ff  G =  284  
ABC: Path  9 --    3129 : 3    3 NOR3X1  A =   2.82  Df = 491.8  -49.5 ps  S =  93.4 ps  Cin =  3.1 ff  Cout =  11.3 ff  Cmax =  96.9 ff  G =  349  
ABC: Path 10 --    3130 : 3    4 NAND3X1 A =   2.35  Df = 565.8  -76.7 ps  S =  88.6 ps  Cin =  2.7 ff  Cout =  13.3 ff  Cmax =   0.0 ff  G =  483  
ABC: Path 11 --    3131 : 3    3 NOR3X1  A =   2.82  Df = 615.9  -79.3 ps  S =  74.0 ps  Cin =  3.1 ff  Cout =   7.4 ff  Cmax =  96.9 ff  G =  231  
ABC: Path 12 --    3132 : 3    3 NAND3X1 A =   2.35  Df = 681.2 -105.5 ps  S =  78.9 ps  Cin =  2.7 ff  Cout =  11.2 ff  Cmax =   0.0 ff  G =  408  
ABC: Path 13 --    3133 : 3    3 NOR3X1  A =   2.82  Df = 734.2 -100.3 ps  S =  90.9 ps  Cin =  3.1 ff  Cout =  10.9 ff  Cmax =  96.9 ff  G =  330  
ABC: Path 14 --    3134 : 3    4 NAND3X1 A =   2.35  Df = 799.3 -123.4 ps  S =  76.0 ps  Cin =  2.7 ff  Cout =  10.6 ff  Cmax =   0.0 ff  G =  386  
ABC: Path 15 --    3135 : 3    4 NOR3X1  A =   2.82  Df = 858.0 -114.7 ps  S = 105.2 ps  Cin =  3.1 ff  Cout =  13.7 ff  Cmax =  96.9 ff  G =  425  
ABC: Path 16 --    3136 : 3    4 NAND3X1 A =   2.35  Df = 933.7 -140.9 ps  S =  88.6 ps  Cin =  2.7 ff  Cout =  13.3 ff  Cmax =   0.0 ff  G =  483  
ABC: Path 17 --    7873 : 3    1 NOR3X1  A =   2.82  Df = 979.6 -145.4 ps  S =  65.2 ps  Cin =  3.1 ff  Cout =   5.6 ff  Cmax =  96.9 ff  G =  170  
ABC: Path 18 --    7874 : 2    1 XNOR2X1 A =   4.69  Df =1029.6  -16.6 ps  S =  36.4 ps  Cin =  5.1 ff  Cout =   1.9 ff  Cmax = 228.3 ff  G =   36  
ABC: Path 19 --    7875 : 2    2 AND2X2  A =   2.82  Df =1068.1  -12.9 ps  S =  18.4 ps  Cin =  1.8 ff  Cout =   5.7 ff  Cmax = 505.1 ff  G =  308  
ABC: Path 20 --    7877 : 3    1 NOR3X1  A =   2.82  Df =1085.3  -14.5 ps  S =  37.9 ps  Cin =  3.1 ff  Cout =   0.0 ff  Cmax =  96.9 ff  G =    0  
ABC: Start-point = pi1540 (\en_i).  End-point = po1535 ($auto$rtlil.cc:2316:MuxGate$167650).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:      793
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:           AOI21X1 cells:       54
ABC RESULTS:             BUFX2 cells:      261
ABC RESULTS:             INVX1 cells:      412
ABC RESULTS:           NAND2X1 cells:     1246
ABC RESULTS:           NAND3X1 cells:      282
ABC RESULTS:            NOR2X1 cells:      143
ABC RESULTS:            NOR3X1 cells:      216
ABC RESULTS:           OAI21X1 cells:      628
ABC RESULTS:             OR2X1 cells:      239
ABC RESULTS:           XNOR2X1 cells:      315
ABC RESULTS:            XOR2X1 cells:      187
ABC RESULTS:        internal signals:     2811
ABC RESULTS:           input signals:     1564
ABC RESULTS:          output signals:     1536
Removing temp directory.

33.3. Extracting gate netlist of module `\PMU_overflow(N_COUNTERS=24)' to `<abc-temp-dir>/input.blif'..
Extracted 868 gates and 1688 wires to a netlist network with 819 inputs and 49 outputs.

33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    596 (  5.2 %)   Cap =  2.6 ff ( 12.2 %)   Area =     1385.84 ( 75.5 %)   Delay =   333.09 ps  ( 31.4 %)               
ABC: Path  0 --     365 : 0    1 pi      A =   0.00  Df =   3.7   -3.7 ps  S =  11.3 ps  Cin =  0.0 ff  Cout =   1.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    1135 : 2    1 AND2X2  A =   2.82  Df =  41.7   -8.3 ps  S =   9.7 ps  Cin =  1.8 ff  Cout =   3.0 ff  Cmax = 505.1 ff  G =  159  
ABC: Path  2 --    1136 : 3    1 NAND3X1 A =   2.35  Df =  71.5  -26.7 ps  S =  40.8 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  113  
ABC: Path  3 --    1139 : 3    1 NOR3X1  A =   2.82  Df = 112.7  -18.8 ps  S =  49.7 ps  Cin =  3.1 ff  Cout =   2.1 ff  Cmax =  96.9 ff  G =   64  
ABC: Path  4 --    1145 : 2    1 NAND2X1 A =   1.88  Df = 147.1  -27.9 ps  S =  39.0 ps  Cin =  2.0 ff  Cout =   3.3 ff  Cmax =   0.0 ff  G =  163  
ABC: Path  5 --    1146 : 3    1 NOR3X1  A =   2.82  Df = 175.2  -28.1 ps  S =  52.1 ps  Cin =  3.1 ff  Cout =   2.7 ff  Cmax =  96.9 ff  G =   86  
ABC: Path  6 --    1147 : 3    3 AOI21X1 A =   2.82  Df = 226.9  -37.0 ps  S =  52.2 ps  Cin =  2.6 ff  Cout =   7.4 ff  Cmax =   0.0 ff  G =  283  
ABC: Path  7 --    1408 : 3    1 NAND3X1 A =   2.35  Df = 251.4  -15.3 ps  S =  40.3 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  113  
ABC: Path  8 --    1434 : 3    1 NOR3X1  A =   2.82  Df = 302.3  -23.5 ps  S =  52.8 ps  Cin =  3.1 ff  Cout =   2.7 ff  Cmax =  96.9 ff  G =   86  
ABC: Path  9 --    1438 : 3    1 AOI21X1 A =   2.82  Df = 333.1  -21.2 ps  S =  16.5 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi364 (\counter_regs_i[11] [11]).  End-point = po23 (\intr_overflow_o).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:      139
ABC RESULTS:            AND2X2 cells:        8
ABC RESULTS:           AOI21X1 cells:        9
ABC RESULTS:             BUFX2 cells:        4
ABC RESULTS:             INVX1 cells:       27
ABC RESULTS:           NAND2X1 cells:       77
ABC RESULTS:           NAND3X1 cells:      206
ABC RESULTS:            NOR2X1 cells:       32
ABC RESULTS:            NOR3X1 cells:       78
ABC RESULTS:           OAI21X1 cells:        9
ABC RESULTS:             OR2X1 cells:        7
ABC RESULTS:        internal signals:      820
ABC RESULTS:           input signals:      819
ABC RESULTS:          output signals:       49
Removing temp directory.

33.4. Extracting gate netlist of module `\PMU_quota(N_COUNTERS=24)' to `<abc-temp-dir>/input.blif'..
Extracted 2877 gates and 3772 wires to a netlist network with 893 inputs and 68 outputs.

33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   1630 ( 18.5 %)   Cap =  4.4 ff (  7.4 %)   Area =     4277.20 ( 85.0 %)   Delay =  2294.00 ps  (  5.2 %)               
ABC: Path  0 --      26 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     969 : 1    6 BUFX4   A =   2.82  Df =  59.2  -18.3 ps  S =  30.5 ps  Cin =  3.9 ff  Cout =  22.9 ff  Cmax = 999.3 ff  G =  575  
ABC: Path  2 --     970 : 1    8 INVX8   A =   3.29  Df =  76.3  -11.1 ps  S =  14.0 ps  Cin = 10.1 ff  Cout =  18.9 ff  Cmax =2082.0 ff  G =  176  
ABC: Path  3 --     971 : 2    5 NAND2X1 A =   1.88  Df = 122.9   -9.0 ps  S = 101.1 ps  Cin =  2.0 ff  Cout =  16.2 ff  Cmax =   0.0 ff  G =  812  
ABC: Path  4 --     972 : 1   10 BUFX4   A =   2.82  Df = 174.9  -17.7 ps  S =  38.6 ps  Cin =  3.9 ff  Cout =  25.5 ff  Cmax = 999.3 ff  G =  633  
ABC: Path  5 --     973 : 2    3 OR2X2   A =   2.82  Df = 235.3  -14.1 ps  S =  36.3 ps  Cin =  2.3 ff  Cout =  13.5 ff  Cmax = 519.7 ff  G =  563  
ABC: Path  6 --     974 : 2    3 OR2X2   A =   2.82  Df = 295.0   -9.4 ps  S =  39.8 ps  Cin =  2.3 ff  Cout =  14.0 ff  Cmax = 519.7 ff  G =  578  
ABC: Path  7 --     975 : 2    9 XNOR2X1 A =   4.69  Df = 406.4  -48.0 ps  S = 129.3 ps  Cin =  5.1 ff  Cout =  21.1 ff  Cmax = 228.3 ff  G =  403  
ABC: Path  8 --    2143 : 3    1 OAI21X1 A =   2.82  Df = 466.1  -13.2 ps  S =  44.8 ps  Cin =  2.5 ff  Cout =   2.8 ff  Cmax = 229.4 ff  G =  111  
ABC: Path  9 --    2161 : 3    2 OAI21X1 A =   2.82  Df = 511.5  -13.4 ps  S =  67.2 ps  Cin =  2.5 ff  Cout =   8.0 ff  Cmax = 229.4 ff  G =  311  
ABC: Path 10 --    2162 : 2    3 XNOR2X1 A =   4.69  Df = 584.5  -25.7 ps  S =  65.8 ps  Cin =  5.1 ff  Cout =   7.9 ff  Cmax = 228.3 ff  G =  148  
ABC: Path 11 --    2165 : 3    1 AOI21X1 A =   2.82  Df = 622.8  -27.2 ps  S =  29.6 ps  Cin =  2.6 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =  103  
ABC: Path 12 --    2204 : 3    3 OAI21X1 A =   2.82  Df = 685.9  -60.5 ps  S =  70.4 ps  Cin =  2.5 ff  Cout =   8.3 ff  Cmax = 229.4 ff  G =  327  
ABC: Path 13 --    2206 : 3    3 OAI21X1 A =   2.82  Df = 722.6  -39.1 ps  S =  66.8 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 14 --    2209 : 3    2 OAI21X1 A =   2.82  Df = 781.9  -61.8 ps  S =  67.6 ps  Cin =  2.5 ff  Cout =   7.8 ff  Cmax = 229.4 ff  G =  307  
ABC: Path 15 --    2211 : 3    3 OAI21X1 A =   2.82  Df = 818.0  -40.4 ps  S =  66.2 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 16 --    2213 : 3    2 OAI21X1 A =   2.82  Df = 876.9  -62.8 ps  S =  67.6 ps  Cin =  2.5 ff  Cout =   7.8 ff  Cmax = 229.4 ff  G =  307  
ABC: Path 17 --    2216 : 3    3 OAI21X1 A =   2.82  Df = 912.9  -41.4 ps  S =  66.2 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 18 --    2218 : 3    2 OAI21X1 A =   2.82  Df = 971.8  -63.8 ps  S =  67.6 ps  Cin =  2.5 ff  Cout =   7.8 ff  Cmax = 229.4 ff  G =  307  
ABC: Path 19 --    2220 : 3    3 OAI21X1 A =   2.82  Df =1007.9  -42.5 ps  S =  66.1 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 20 --    2222 : 3    2 OAI21X1 A =   2.82  Df =1066.4  -64.4 ps  S =  67.0 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  306  
ABC: Path 21 --    2225 : 3    3 AOI21X1 A =   2.82  Df =1112.3  -62.1 ps  S =  51.3 ps  Cin =  2.6 ff  Cout =   7.3 ff  Cmax =   0.0 ff  G =  274  
ABC: Path 22 --    2227 : 3    2 OAI21X1 A =   2.82  Df =1173.9  -90.4 ps  S =  67.6 ps  Cin =  2.5 ff  Cout =   7.8 ff  Cmax = 229.4 ff  G =  307  
ABC: Path 23 --    2229 : 3    3 OAI21X1 A =   2.82  Df =1210.0  -69.1 ps  S =  66.1 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 24 --    2231 : 3    2 OAI21X1 A =   2.82  Df =1268.5  -91.0 ps  S =  67.1 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  306  
ABC: Path 25 --    2234 : 3    3 AOI21X1 A =   2.82  Df =1314.4  -88.7 ps  S =  51.3 ps  Cin =  2.6 ff  Cout =   7.3 ff  Cmax =   0.0 ff  G =  274  
ABC: Path 26 --    2236 : 3    2 OAI21X1 A =   2.82  Df =1376.0 -117.0 ps  S =  67.6 ps  Cin =  2.5 ff  Cout =   7.8 ff  Cmax = 229.4 ff  G =  307  
ABC: Path 27 --    2238 : 3    3 OAI21X1 A =   2.82  Df =1412.1  -95.7 ps  S =  66.1 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 28 --    2240 : 3    2 OAI21X1 A =   2.82  Df =1470.6 -117.6 ps  S =  67.1 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  306  
ABC: Path 29 --    2244 : 3    3 AOI21X1 A =   2.82  Df =1516.5 -115.4 ps  S =  51.3 ps  Cin =  2.6 ff  Cout =   7.3 ff  Cmax =   0.0 ff  G =  274  
ABC: Path 30 --    2246 : 3    2 OAI21X1 A =   2.82  Df =1577.8 -143.2 ps  S =  67.0 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  306  
ABC: Path 31 --    2249 : 3    3 AOI21X1 A =   2.82  Df =1623.7 -141.0 ps  S =  51.3 ps  Cin =  2.6 ff  Cout =   7.3 ff  Cmax =   0.0 ff  G =  274  
ABC: Path 32 --    2250 : 3    2 OAI21X1 A =   2.82  Df =1686.5 -169.9 ps  S =  69.4 ps  Cin =  2.5 ff  Cout =   8.2 ff  Cmax = 229.4 ff  G =  323  
ABC: Path 33 --    2252 : 3    3 OAI21X1 A =   2.82  Df =1723.0 -148.7 ps  S =  66.1 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 34 --    2253 : 3    2 OAI21X1 A =   2.82  Df =1781.9 -171.1 ps  S =  67.5 ps  Cin =  2.5 ff  Cout =   7.8 ff  Cmax = 229.4 ff  G =  307  
ABC: Path 35 --    2255 : 3    3 OAI21X1 A =   2.82  Df =1817.9 -149.7 ps  S =  66.1 ps  Cin =  2.5 ff  Cout =   7.3 ff  Cmax = 229.4 ff  G =  287  
ABC: Path 36 --    2256 : 3    2 OAI21X1 A =   2.82  Df =1876.5 -171.7 ps  S =  67.0 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  306  
ABC: Path 37 --    2259 : 3    3 AOI21X1 A =   2.82  Df =1922.3 -169.4 ps  S =  51.3 ps  Cin =  2.6 ff  Cout =   7.3 ff  Cmax =   0.0 ff  G =  274  
ABC: Path 38 --    2260 : 3    2 OAI21X1 A =   2.82  Df =1983.6 -197.3 ps  S =  67.0 ps  Cin =  2.5 ff  Cout =   7.7 ff  Cmax = 229.4 ff  G =  306  
ABC: Path 39 --    2263 : 3    3 AOI21X1 A =   2.82  Df =2031.4 -193.3 ps  S =  56.6 ps  Cin =  2.6 ff  Cout =   8.4 ff  Cmax =   0.0 ff  G =  317  
ABC: Path 40 --    2264 : 3    2 OAI21X1 A =   2.82  Df =2093.6 -221.1 ps  S =  66.5 ps  Cin =  2.5 ff  Cout =   7.8 ff  Cmax = 229.4 ff  G =  307  
ABC: Path 41 --    2266 : 3    3 OAI21X1 A =   2.82  Df =2130.4 -197.2 ps  S =  69.4 ps  Cin =  2.5 ff  Cout =   8.0 ff  Cmax = 229.4 ff  G =  312  
ABC: Path 42 --    2267 : 3    4 NOR3X1  A =   2.82  Df =2182.2 -197.8 ps  S =  88.3 ps  Cin =  3.1 ff  Cout =  10.2 ff  Cmax =  96.9 ff  G =  324  
ABC: Path 43 --    2589 : 3    1 NAND3X1 A =   2.35  Df =2215.2 -181.1 ps  S =  52.0 ps  Cin =  2.7 ff  Cout =   5.6 ff  Cmax =   0.0 ff  G =  198  
ABC: Path 44 --    2590 : 2    1 XNOR2X1 A =   4.69  Df =2264.2  -17.0 ps  S =  36.7 ps  Cin =  5.1 ff  Cout =   1.9 ff  Cmax = 228.3 ff  G =   36  
ABC: Path 45 --    2591 : 2    1 AND2X2  A =   2.82  Df =2294.0  -10.4 ps  S =   6.2 ps  Cin =  1.8 ff  Cout =   0.0 ff  Cmax = 505.1 ff  G =    0  
ABC: Start-point = pi25 (\state_int [1]).  End-point = po67 ($auto$rtlil.cc:2316:MuxGate$167832).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       80
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:           AOI21X1 cells:       32
ABC RESULTS:           AOI22X1 cells:      403
ABC RESULTS:             BUFX2 cells:      133
ABC RESULTS:             BUFX4 cells:        4
ABC RESULTS:             INVX1 cells:      163
ABC RESULTS:             INVX8 cells:        1
ABC RESULTS:            MUX2X1 cells:       44
ABC RESULTS:           NAND2X1 cells:      106
ABC RESULTS:           NAND3X1 cells:      235
ABC RESULTS:            NOR2X1 cells:       22
ABC RESULTS:            NOR3X1 cells:       46
ABC RESULTS:           OAI21X1 cells:      155
ABC RESULTS:             OR2X1 cells:      159
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:           XNOR2X1 cells:       33
ABC RESULTS:            XOR2X1 cells:       10
ABC RESULTS:        internal signals:     2811
ABC RESULTS:           input signals:      893
ABC RESULTS:          output signals:       68
Removing temp directory.

33.5. Extracting gate netlist of module `\PMU_raw(N_COUNTERS=24,FT=1)' to `<abc-temp-dir>/input.blif'..
Extracted 111 gates and 203 wires to a netlist network with 90 inputs and 78 outputs.

33.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    120 ( 31.7 %)   Cap =  2.5 ff ( 23.5 %)   Area =      273.13 ( 47.5 %)   Delay =   139.60 ps  ( 49.2 %)               
ABC: Path  0 --      66 : 0    1 pi      A =   0.00  Df =   3.1   -3.1 ps  S =  10.3 ps  Cin =  0.0 ff  Cout =   1.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     235 : 1    6 BUFX2   A =   2.35  Df =  56.0   -4.7 ps  S =  41.7 ps  Cin =  1.5 ff  Cout =  17.5 ff  Cmax = 518.7 ff  G = 1132  
ABC: Path  2 --     236 : 1   10 BUFX4   A =   2.82  Df = 104.2  -11.6 ps  S =  34.2 ps  Cin =  3.9 ff  Cout =  24.2 ff  Cmax = 999.3 ff  G =  607  
ABC: Path  3 --     239 : 3    1 OAI21X1 A =   2.82  Df = 139.6  -29.8 ps  S =  32.1 ps  Cin =  2.5 ff  Cout =   0.0 ff  Cmax = 229.4 ff  G =    0  
ABC: Start-point = pi65 (\regs_i[0] [31]).  End-point = po54 (\events_int [0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.5.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       52
ABC RESULTS:           AOI21X1 cells:       23
ABC RESULTS:             BUFX2 cells:        1
ABC RESULTS:             BUFX4 cells:       10
ABC RESULTS:             INVX1 cells:       26
ABC RESULTS:             INVX2 cells:        1
ABC RESULTS:           NAND2X1 cells:        2
ABC RESULTS:            NOR2X1 cells:        1
ABC RESULTS:            NOR3X1 cells:        3
ABC RESULTS:           OAI21X1 cells:        1
ABC RESULTS:        internal signals:       35
ABC RESULTS:           input signals:       90
ABC RESULTS:          output signals:       78
Removing temp directory.

33.6. Extracting gate netlist of module `\RDC_default' to `<abc-temp-dir>/input.blif'..
Extracted 1154 gates and 1366 wires to a netlist network with 211 inputs and 138 outputs.

33.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    901 ( 25.0 %)   Cap =  4.5 ff (  6.6 %)   Area =     2255.46 ( 86.1 %)   Delay =   413.57 ps  ( 18.1 %)               
ABC: Path  0 --      47 : 0    1 pi      A =   0.00  Df =   3.1   -3.1 ps  S =  10.3 ps  Cin =  0.0 ff  Cout =   1.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     528 : 1    6 BUFX2   A =   2.35  Df =  55.5   -5.3 ps  S =  41.0 ps  Cin =  1.5 ff  Cout =  17.2 ff  Cmax = 518.7 ff  G = 1089  
ABC: Path  2 --     860 : 4    1 AOI22X1 A =   3.29  Df = 102.4   -6.5 ps  S =  49.2 ps  Cin =  2.8 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  108  
ABC: Path  3 --     864 : 3    1 NOR3X1  A =   2.82  Df = 152.0   -4.5 ps  S =  51.6 ps  Cin =  3.1 ff  Cout =   2.8 ff  Cmax =  96.9 ff  G =   87  
ABC: Path  4 --     866 : 3    1 OAI21X1 A =   2.82  Df = 193.0  -15.8 ps  S =  44.3 ps  Cin =  2.5 ff  Cout =   2.7 ff  Cmax = 229.4 ff  G =  108  
ABC: Path  5 --     873 : 3    1 AOI21X1 A =   2.82  Df = 217.5   -3.4 ps  S =  29.3 ps  Cin =  2.6 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =  103  
ABC: Path  6 --     877 : 3    1 OAI21X1 A =   2.82  Df = 262.7  -28.3 ps  S =  44.3 ps  Cin =  2.5 ff  Cout =   2.7 ff  Cmax = 229.4 ff  G =  108  
ABC: Path  7 --     881 : 3    1 AOI21X1 A =   2.82  Df = 289.5  -14.3 ps  S =  35.2 ps  Cin =  2.6 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =  152  
ABC: Path  8 --     882 : 1    7 BUFX4   A =   2.82  Df = 343.5  -27.8 ps  S =  39.3 ps  Cin =  3.9 ff  Cout =  28.8 ff  Cmax = 999.3 ff  G =  712  
ABC: Path  9 --     885 : 3    1 MUX2X1  A =   3.75  Df = 383.6   -7.8 ps  S =  39.1 ps  Cin =  3.1 ff  Cout =   1.9 ff  Cmax =  75.1 ff  G =   59  
ABC: Path 10 --     886 : 2    1 AND2X2  A =   2.82  Df = 413.6   -2.9 ps  S =   5.0 ps  Cin =  1.8 ff  Cout =   0.0 ff  Cmax = 505.1 ff  G =    0  
ABC: Start-point = pi46 (\max_value[2] [1]).  End-point = po105 ($auto$rtlil.cc:2316:MuxGate$167940).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.6.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       80
ABC RESULTS:            AND2X2 cells:       20
ABC RESULTS:           AOI21X1 cells:      114
ABC RESULTS:           AOI22X1 cells:       68
ABC RESULTS:             BUFX2 cells:       50
ABC RESULTS:             BUFX4 cells:       11
ABC RESULTS:             INVX1 cells:      164
ABC RESULTS:            MUX2X1 cells:       38
ABC RESULTS:           NAND2X1 cells:       91
ABC RESULTS:           NAND3X1 cells:       41
ABC RESULTS:            NOR2X1 cells:       41
ABC RESULTS:            NOR3X1 cells:       10
ABC RESULTS:           OAI21X1 cells:       95
ABC RESULTS:             OR2X1 cells:       34
ABC RESULTS:           XNOR2X1 cells:       38
ABC RESULTS:            XOR2X1 cells:        6
ABC RESULTS:        internal signals:     1017
ABC RESULTS:           input signals:      211
ABC RESULTS:          output signals:      138
Removing temp directory.

33.7. Extracting gate netlist of module `\crossbar_default' to `<abc-temp-dir>/input.blif'..
Extracted 768 gates and 922 wires to a netlist network with 153 inputs and 24 outputs.

33.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   1358 ( 19.2 %)   Cap =  5.8 ff (  2.4 %)   Area =     3791.47 ( 92.6 %)   Delay =   377.05 ps  ( 19.9 %)               
ABC: Path  0 --      91 : 0    1 pi      A =   0.00  Df =   3.1   -3.1 ps  S =  10.3 ps  Cin =  0.0 ff  Cout =   1.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     959 : 1    5 BUFX2   A =   2.35  Df =  52.5   -3.9 ps  S =  36.3 ps  Cin =  1.5 ff  Cout =  15.3 ff  Cmax = 518.7 ff  G =  975  
ABC: Path  2 --     960 : 1   10 BUFX4   A =   2.82  Df = 106.2   -5.8 ps  S =  50.6 ps  Cin =  3.9 ff  Cout =  38.4 ff  Cmax = 999.3 ff  G =  951  
ABC: Path  3 --     961 : 1   10 BUFX4   A =   2.82  Df = 160.6  -20.3 ps  S =  40.4 ps  Cin =  3.9 ff  Cout =  29.1 ff  Cmax = 999.3 ff  G =  728  
ABC: Path  4 --     962 : 3    1 MUX2X1  A =   3.75  Df = 203.8   -9.4 ps  S =  43.3 ps  Cin =  3.1 ff  Cout =   2.8 ff  Cmax =  75.1 ff  G =   86  
ABC: Path  5 --     965 : 3    1 MUX2X1  A =   3.75  Df = 241.1   -8.1 ps  S =  41.6 ps  Cin =  3.1 ff  Cout =   2.3 ff  Cmax =  75.1 ff  G =   74  
ABC: Path  6 --     966 : 2    1 OR2X2   A =   2.82  Df = 289.1   -8.9 ps  S =  12.1 ps  Cin =  2.3 ff  Cout =   2.7 ff  Cmax = 519.7 ff  G =  115  
ABC: Path  7 --     984 : 3    1 AOI21X1 A =   2.82  Df = 317.0  -11.0 ps  S =  29.5 ps  Cin =  2.6 ff  Cout =   2.8 ff  Cmax =   0.0 ff  G =  105  
ABC: Path  8 --    1009 : 3    1 MUX2X1  A =   3.75  Df = 344.0   -1.7 ps  S =  39.4 ps  Cin =  3.1 ff  Cout =   1.9 ff  Cmax =  75.1 ff  G =   59  
ABC: Path  9 --    1010 : 2    1 AND2X2  A =   2.82  Df = 377.0   -3.1 ps  S =   5.1 ps  Cin =  1.8 ff  Cout =   0.0 ff  Cmax = 505.1 ff  G =    0  
ABC: Start-point = pi90 (\cfg_i[14] [2]).  End-point = po13 ($auto$rtlil.cc:2316:MuxGate$168384).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.7.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:        1
ABC RESULTS:            AND2X2 cells:       13
ABC RESULTS:           AOI21X1 cells:      249
ABC RESULTS:           AOI22X1 cells:        5
ABC RESULTS:             BUFX2 cells:      135
ABC RESULTS:             BUFX4 cells:       58
ABC RESULTS:             INVX1 cells:       68
ABC RESULTS:            MUX2X1 cells:      258
ABC RESULTS:           NAND2X1 cells:       39
ABC RESULTS:           NAND3X1 cells:       34
ABC RESULTS:            NOR2X1 cells:       97
ABC RESULTS:            NOR3X1 cells:       68
ABC RESULTS:           OAI21X1 cells:      282
ABC RESULTS:             OR2X1 cells:       41
ABC RESULTS:             OR2X2 cells:       10
ABC RESULTS:        internal signals:      745
ABC RESULTS:           input signals:      153
ABC RESULTS:          output signals:       24
Removing temp directory.

33.8. Extracting gate netlist of module `\hamming32t26d_dec_default' to `<abc-temp-dir>/input.blif'..
Extracted 167 gates and 199 wires to a netlist network with 32 inputs and 27 outputs.

33.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    147 ( 15.0 %)   Cap =  6.7 ff (  1.4 %)   Area =      554.24 ( 95.2 %)   Delay =   510.40 ps  ( 90.5 %)               
ABC: Path  0 --      32 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      63 : 1    3 BUFX4   A =   2.82  Df =  56.0  -20.4 ps  S =  22.5 ps  Cin =  3.9 ff  Cout =  16.3 ff  Cmax = 999.3 ff  G =  395  
ABC: Path  2 --      64 : 2    1 XOR2X1  A =   4.69  Df = 115.3  -24.8 ps  S =  59.2 ps  Cin =  5.3 ff  Cout =   5.6 ff  Cmax = 223.3 ff  G =  100  
ABC: Path  3 --      65 : 2    3 XNOR2X1 A =   4.69  Df = 211.9  -37.8 ps  S = 101.7 ps  Cin =  5.1 ff  Cout =  15.4 ff  Cmax = 228.3 ff  G =  293  
ABC: Path  4 --      95 : 2    2 XNOR2X1 A =   4.69  Df = 287.3  -19.4 ps  S =  81.5 ps  Cin =  5.1 ff  Cout =  11.3 ff  Cmax = 228.3 ff  G =  211  
ABC: Path  5 --      96 : 2    3 XNOR2X1 A =   4.69  Df = 354.9  -21.1 ps  S =  55.0 ps  Cin =  5.1 ff  Cout =   5.8 ff  Cmax = 228.3 ff  G =  112  
ABC: Path  6 --     135 : 2    1 AND2X2  A =   2.82  Df = 391.7  -14.0 ps  S =  14.9 ps  Cin =  1.8 ff  Cout =   4.0 ff  Cmax = 505.1 ff  G =  216  
ABC: Path  7 --     136 : 1    7 BUFX4   A =   2.82  Df = 426.5   -1.9 ps  S =  27.9 ps  Cin =  3.9 ff  Cout =  20.1 ff  Cmax = 999.3 ff  G =  494  
ABC: Path  8 --     140 : 3    1 NAND3X1 A =   2.35  Df = 464.4  -10.6 ps  S =  53.2 ps  Cin =  2.7 ff  Cout =   5.6 ff  Cmax =   0.0 ff  G =  198  
ABC: Path  9 --     141 : 2    1 XNOR2X1 A =   4.69  Df = 510.4  -13.1 ps  S =  27.8 ps  Cin =  5.1 ff  Cout =   0.0 ff  Cmax = 228.3 ff  G =    0  
ABC: Start-point = pi31 (\hv_i [30]).  End-point = po1 (\data_o [1]).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.8.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:        2
ABC RESULTS:            AND2X2 cells:        4
ABC RESULTS:             BUFX2 cells:       17
ABC RESULTS:             BUFX4 cells:        5
ABC RESULTS:            MUX2X1 cells:        1
ABC RESULTS:           NAND2X1 cells:        2
ABC RESULTS:           NAND3X1 cells:       26
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:           OAI21X1 cells:        1
ABC RESULTS:           XNOR2X1 cells:       75
ABC RESULTS:            XOR2X1 cells:       12
ABC RESULTS:        internal signals:      140
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       27
Removing temp directory.

33.9. Extracting gate netlist of module `\hamming32t26d_enc_default' to `<abc-temp-dir>/input.blif'..
Extracted 77 gates and 103 wires to a netlist network with 26 inputs and 6 outputs.

33.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     58 (  1.7 %)   Cap =  6.9 ff (  0.0 %)   Area =      269.85 (100.0 %)   Delay =   481.25 ps  ( 36.2 %)               
ABC: Path  0 --      20 : 0    1 pi      A =   0.00  Df =  10.3   -2.0 ps  S =  20.8 ps  Cin =  0.0 ff  Cout =   5.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      57 : 2    2 XNOR2X1 A =   4.69  Df =  87.3  -22.9 ps  S =  79.2 ps  Cin =  5.1 ff  Cout =  10.6 ff  Cmax = 228.3 ff  G =  199  
ABC: Path  2 --      68 : 2    2 XNOR2X1 A =   4.69  Df = 172.2  -31.0 ps  S =  81.1 ps  Cin =  5.1 ff  Cout =  11.2 ff  Cmax = 228.3 ff  G =  209  
ABC: Path  3 --      69 : 2    2 XNOR2X1 A =   4.69  Df = 255.4  -29.7 ps  S =  78.3 ps  Cin =  5.1 ff  Cout =  10.6 ff  Cmax = 228.3 ff  G =  199  
ABC: Path  4 --      70 : 2    1 XNOR2X1 A =   4.69  Df = 322.1  -21.6 ps  S =  54.3 ps  Cin =  5.1 ff  Cout =   5.6 ff  Cmax = 228.3 ff  G =  104  
ABC: Path  5 --      71 : 2    2 XNOR2X1 A =   4.69  Df = 384.4  -21.2 ps  S =  51.7 ps  Cin =  5.1 ff  Cout =   5.0 ff  Cmax = 228.3 ff  G =   95  
ABC: Path  6 --      89 : 2    1 XNOR2X1 A =   4.69  Df = 435.2  -12.2 ps  S =  54.5 ps  Cin =  5.1 ff  Cout =   5.6 ff  Cmax = 228.3 ff  G =  104  
ABC: Path  7 --      90 : 2    1 XNOR2X1 A =   4.69  Df = 481.3  -13.1 ps  S =  27.7 ps  Cin =  5.1 ff  Cout =   0.0 ff  Cmax = 228.3 ff  G =    0  
ABC: Start-point = pi19 (\data_i [24]).  End-point = po5 (\ocheck_int).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.9.2. Re-integrating ABC results.
ABC RESULTS:             BUFX2 cells:        1
ABC RESULTS:           XNOR2X1 cells:       45
ABC RESULTS:            XOR2X1 cells:       12
ABC RESULTS:        internal signals:       71
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:        6
Removing temp directory.

33.10. Extracting gate netlist of module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)' to `<abc-temp-dir>/input.blif'..
Extracted 9675 gates and 13206 wires to a netlist network with 3529 inputs and 4930 outputs.

33.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  11548 ( 18.0 %)   Cap =  4.0 ff (  9.7 %)   Area =    27929.92 ( 80.2 %)   Delay =   774.13 ps  (  5.7 %)               
ABC: Path  0 --     420 : 0    1 pi      A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    8473 : 1    6 BUFX4   A =   2.82  Df =  56.3  -21.0 ps  S =  22.0 ps  Cin =  3.9 ff  Cout =  15.8 ff  Cmax = 999.3 ff  G =  397  
ABC: Path  2 --    8474 : 1   10 BUFX4   A =   2.82  Df = 104.8  -31.5 ps  S =  33.7 ps  Cin =  3.9 ff  Cout =  24.6 ff  Cmax = 999.3 ff  G =  603  
ABC: Path  3 --    9787 : 2    1 OR2X2   A =   2.82  Df = 151.7  -29.5 ps  S =  15.0 ps  Cin =  2.3 ff  Cout =   4.0 ff  Cmax = 519.7 ff  G =  169  
ABC: Path  4 --    9788 : 1    9 BUFX4   A =   2.82  Df = 200.3  -41.6 ps  S =  30.4 ps  Cin =  3.9 ff  Cout =  22.2 ff  Cmax = 999.3 ff  G =  555  
ABC: Path  5 --    9789 : 3    7 NOR3X1  A =   2.82  Df = 274.5  -61.3 ps  S = 124.7 ps  Cin =  3.1 ff  Cout =  17.8 ff  Cmax =  96.9 ff  G =  552  
ABC: Path  6 --   11704 : 2    1 NAND2X1 A =   1.88  Df = 314.3  -51.0 ps  S =  38.1 ps  Cin =  2.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =  196  
ABC: Path  7 --   11705 : 1    9 BUFX4   A =   2.82  Df = 363.9  -65.3 ps  S =  31.8 ps  Cin =  3.9 ff  Cout =  22.3 ff  Cmax = 999.3 ff  G =  556  
ABC: Path  8 --   11706 : 1   10 BUFX4   A =   2.82  Df = 417.0  -73.0 ps  S =  46.2 ps  Cin =  3.9 ff  Cout =  34.8 ff  Cmax = 999.3 ff  G =  862  
ABC: Path  9 --   11707 : 1   10 BUFX4   A =   2.82  Df = 470.9  -84.1 ps  S =  44.3 ps  Cin =  3.9 ff  Cout =  32.7 ff  Cmax = 999.3 ff  G =  811  
ABC: Path 10 --   11708 : 1   10 BUFX4   A =   2.82  Df = 521.4  -99.0 ps  S =  32.9 ps  Cin =  3.9 ff  Cout =  23.0 ff  Cmax = 999.3 ff  G =  573  
ABC: Path 11 --   16476 : 3    2 MUX2X1  A =   3.75  Df = 564.0   -9.8 ps  S =  44.0 ps  Cin =  3.1 ff  Cout =   2.9 ff  Cmax =  75.1 ff  G =   89  
ABC: Path 12 --   18724 : 4    1 AOI22X1 A =   3.29  Df = 589.8   -1.6 ps  S =  45.6 ps  Cin =  2.8 ff  Cout =   2.3 ff  Cmax =   0.0 ff  G =   74  
ABC: Path 13 --   18727 : 2    1 AND2X1  A =   2.35  Df = 624.8   -3.2 ps  S =  33.7 ps  Cin =  2.1 ff  Cout =   2.7 ff  Cmax = 137.4 ff  G =  127  
ABC: Path 14 --   18732 : 3    1 OAI21X1 A =   2.82  Df = 670.5  -27.2 ps  S =  44.7 ps  Cin =  2.5 ff  Cout =   2.8 ff  Cmax = 229.4 ff  G =  110  
ABC: Path 15 --   18742 : 3    1 NAND3X1 A =   2.35  Df = 692.5  -16.4 ps  S =  39.7 ps  Cin =  2.7 ff  Cout =   2.7 ff  Cmax =   0.0 ff  G =   99  
ABC: Path 16 --   18778 : 3    1 AOI21X1 A =   2.82  Df = 730.8  -23.9 ps  S =  27.9 ps  Cin =  2.6 ff  Cout =   2.4 ff  Cmax =   0.0 ff  G =   90  
ABC: Path 17 --   18779 : 2    1 OR2X1   A =   2.35  Df = 774.1  -22.6 ps  S =   9.0 ps  Cin =  2.4 ff  Cout =   0.0 ff  Cmax =  70.0 ff  G =    0  
ABC: Start-point = pi419 (\address_phase[master_addr_Q] [3]).  End-point = po4877 (\dread_slave [11]).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.10.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:     1999
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:           AOI21X1 cells:      342
ABC RESULTS:           AOI22X1 cells:      469
ABC RESULTS:             BUFX2 cells:     1268
ABC RESULTS:             BUFX4 cells:       78
ABC RESULTS:             INVX1 cells:      728
ABC RESULTS:             INVX2 cells:        2
ABC RESULTS:            MUX2X1 cells:      693
ABC RESULTS:           NAND2X1 cells:     2805
ABC RESULTS:           NAND3X1 cells:      303
ABC RESULTS:            NOR2X1 cells:       51
ABC RESULTS:            NOR3X1 cells:      145
ABC RESULTS:           OAI21X1 cells:     2452
ABC RESULTS:             OR2X1 cells:      210
ABC RESULTS:             OR2X2 cells:        1
ABC RESULTS:        internal signals:     4747
ABC RESULTS:           input signals:     3529
ABC RESULTS:          output signals:     4930
Removing temp directory.

33.11. Extracting gate netlist of module `\top_ft' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

33.12. Extracting gate netlist of module `\triple_reg(IN_WIDTH=1)' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

33.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      1 (  0.0 %)   Cap =  1.2 ff (  0.0 %)   Area =        2.82 (100.0 %)   Delay =    38.76 ps  (100.0 %)               
ABC: Path  0 --       2 : 0    1 pi     A =   0.00  Df =   3.7   -3.7 ps  S =  11.3 ps  Cin =  0.0 ff  Cout =   1.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --       4 : 2    1 AND2X2 A =   2.82  Df =  38.8  -10.0 ps  S =   2.8 ps  Cin =  1.8 ff  Cout =   0.0 ff  Cmax = 505.1 ff  G =    0  
ABC: Start-point = pi1 (\rstn_i).  End-point = po0 ($auto$rtlil.cc:2316:MuxGate$172118).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.12.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

33.13. Extracting gate netlist of module `\triple_reg(IN_WIDTH=2)' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

33.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      2 (  0.0 %)   Cap =  1.5 ff (  0.0 %)   Area =        5.63 (100.0 %)   Delay =    43.81 ps  ( 50.0 %)               
ABC: Path  0 --       2 : 0    2 pi     A =   0.00  Df =   7.4   -5.3 ps  S =  16.5 ps  Cin =  0.0 ff  Cout =   3.7 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --       6 : 2    1 AND2X2 A =   2.82  Df =  43.8  -13.7 ps  S =   2.8 ps  Cin =  1.8 ff  Cout =   0.0 ff  Cmax = 505.1 ff  G =    0  
ABC: Start-point = pi1 (\rstn_i).  End-point = po0 ($auto$rtlil.cc:2316:MuxGate$172120).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.13.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

33.14. Extracting gate netlist of module `\triple_reg(IN_WIDTH=32)' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 66 wires to a netlist network with 33 inputs and 32 outputs.

33.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     36 ( 11.1 %)   Cap =  2.2 ff ( 43.9 %)   Area =       87.29 (  5.6 %)   Delay =   129.04 ps  ( 94.4 %)               
ABC: Path  0 --       2 : 0    1 pi     A =   0.00  Df =   7.9   -4.9 ps  S =  17.4 ps  Cin =  0.0 ff  Cout =   4.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      66 : 1    5 BUFX4  A =   2.82  Df =  56.2  -21.1 ps  S =  21.7 ps  Cin =  3.9 ff  Cout =  15.6 ff  Cmax = 999.3 ff  G =  392  
ABC: Path  2 --      68 : 1   10 BUFX4  A =   2.82  Df = 103.1  -31.3 ps  S =  31.7 ps  Cin =  3.9 ff  Cout =  22.9 ff  Cmax = 999.3 ff  G =  531  
ABC: Path  3 --      69 : 2    1 AND2X1 A =   2.35  Df = 129.0  -33.8 ps  S =  23.7 ps  Cin =  2.1 ff  Cout =   0.0 ff  Cmax = 137.4 ff  G =    0  
ABC: Start-point = pi1 (\rstn_i).  End-point = po1 ($auto$rtlil.cc:2316:MuxGate$172182).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.14.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       30
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:             BUFX4 cells:        4
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       32
Removing temp directory.

33.15. Extracting gate netlist of module `\way3_voter' to `<abc-temp-dir>/input.blif'..
Extracted 288 gates and 386 wires to a netlist network with 96 inputs and 34 outputs.

33.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    262 ( 26.3 %)   Cap =  5.1 ff (  1.9 %)   Area =      818.93 ( 95.4 %)   Delay =   363.43 ps  ( 24.8 %)               
ABC: Path  0 --      77 : 0    2 pi      A =   0.00  Df =  26.9   -6.0 ps  S =  36.2 ps  Cin =  0.0 ff  Cout =  11.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     133 : 2    1 XOR2X1  A =   4.69  Df =  79.5  -17.0 ps  S =  46.2 ps  Cin =  5.3 ff  Cout =   3.0 ff  Cmax = 223.3 ff  G =   57  
ABC: Path  2 --     138 : 3    1 NOR3X1  A =   2.82  Df = 126.1   -3.2 ps  S =  51.7 ps  Cin =  3.1 ff  Cout =   2.5 ff  Cmax =  96.9 ff  G =   76  
ABC: Path  3 --     148 : 3    1 NAND3X1 A =   2.35  Df = 166.9  -15.1 ps  S =  40.3 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  113  
ABC: Path  4 --     188 : 3    6 NOR3X1  A =   2.82  Df = 272.3  -22.2 ps  S = 152.1 ps  Cin =  3.1 ff  Cout =  23.2 ff  Cmax =  96.9 ff  G =  730  
ABC: Path  5 --     189 : 1   10 BUFX4   A =   2.82  Df = 325.2  -10.2 ps  S =  58.0 ps  Cin =  3.9 ff  Cout =  41.2 ff  Cmax = 999.3 ff  G = 1017  
ABC: Path  6 --     190 : 3    1 MUX2X1  A =   3.75  Df = 363.4   -3.9 ps  S =  31.0 ps  Cin =  3.1 ff  Cout =   0.0 ff  Cmax =  75.1 ff  G =    0  
ABC: Start-point = pi76 (\in2 [12]).  End-point = po0 (\out [0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.15.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:        9
ABC RESULTS:            AND2X2 cells:        3
ABC RESULTS:           AOI21X1 cells:        9
ABC RESULTS:             BUFX4 cells:        3
ABC RESULTS:             INVX1 cells:       66
ABC RESULTS:            MUX2X1 cells:       32
ABC RESULTS:           NAND2X1 cells:       16
ABC RESULTS:           NAND3X1 cells:       12
ABC RESULTS:            NOR3X1 cells:       19
ABC RESULTS:           OAI21X1 cells:        3
ABC RESULTS:           XNOR2X1 cells:       57
ABC RESULTS:            XOR2X1 cells:       33
ABC RESULTS:        internal signals:      256
ABC RESULTS:           input signals:       96
ABC RESULTS:          output signals:       34
Removing temp directory.

33.16. Extracting gate netlist of module `\way3_voter(IN_WIDTH=1)' to `<abc-temp-dir>/input.blif'..
Extracted 9 gates and 14 wires to a netlist network with 3 inputs and 3 outputs.

33.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =      7 (  0.0 %)   Cap =  4.0 ff (  0.0 %)   Area =       15.02 ( 85.7 %)   Delay =    85.59 ps  ( 71.4 %)               
ABC: Path  0 --       1 : 0    3 pi      A =   0.00  Df =  15.4   -0.0 ps  S =  28.2 ps  Cin =  0.0 ff  Cout =   7.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      11 : 3    1 NOR3X1  A =   2.82  Df =  66.7  -19.7 ps  S =  50.2 ps  Cin =  3.1 ff  Cout =   2.4 ff  Cmax =  96.9 ff  G =   75  
ABC: Path  2 --      12 : 3    1 AOI21X1 A =   2.82  Df =  85.6   -0.3 ps  S =  16.5 ps  Cin =  2.6 ff  Cout =   0.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Start-point = pi0 (\in1).  End-point = po1 (\error1_o).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.16.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:           AOI21X1 cells:        1
ABC RESULTS:           NAND2X1 cells:        2
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:        1
ABC RESULTS:          _const0_ cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

33.17. Extracting gate netlist of module `\way3_voter(IN_WIDTH=2)' to `<abc-temp-dir>/input.blif'..
Extracted 18 gates and 26 wires to a netlist network with 6 inputs and 4 outputs.

33.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     17 ( 11.8 %)   Cap =  5.1 ff (  8.8 %)   Area =       52.09 ( 82.4 %)   Delay =   176.92 ps  ( 41.2 %)               
ABC: Path  0 --       5 : 0    2 pi      A =   0.00  Df =  26.7   -6.0 ps  S =  36.0 ps  Cin =  0.0 ff  Cout =  11.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      15 : 2    3 XOR2X1  A =   4.69  Df =  95.0  -26.4 ps  S =  69.4 ps  Cin =  5.3 ff  Cout =   7.9 ff  Cmax = 223.3 ff  G =  145  
ABC: Path  2 --      16 : 3    2 AOI21X1 A =   2.82  Df = 133.7   -8.9 ps  S =  50.7 ps  Cin =  2.6 ff  Cout =   7.1 ff  Cmax =   0.0 ff  G =  272  
ABC: Path  3 --      27 : 3    1 NOR3X1  A =   2.82  Df = 176.9  -12.0 ps  S =  38.8 ps  Cin =  3.1 ff  Cout =   0.0 ff  Cmax =  96.9 ff  G =    0  
ABC: Start-point = pi4 (\in2 [0]).  End-point = po3 (\error2_o).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.17.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:        2
ABC RESULTS:           AOI21X1 cells:        1
ABC RESULTS:             INVX1 cells:        2
ABC RESULTS:            MUX2X1 cells:        1
ABC RESULTS:           NAND2X1 cells:        2
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:        2
ABC RESULTS:             OR2X1 cells:        1
ABC RESULTS:           XNOR2X1 cells:        4
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

33.18. Extracting gate netlist of module `\way3u2a_voter(W=8,D=2)' to `<abc-temp-dir>/input.blif'..
Extracted 576 gates and 770 wires to a netlist network with 192 inputs and 66 outputs.

33.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    524 ( 26.1 %)   Cap =  5.1 ff (  2.7 %)   Area =     1621.90 ( 93.9 %)   Delay =   454.01 ps  ( 15.3 %)               
ABC: Path  0 --     143 : 0    2 pi      A =   0.00  Df =  26.9   -6.0 ps  S =  36.2 ps  Cin =  0.0 ff  Cout =  11.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     263 : 2    1 XOR2X1  A =   4.69  Df =  79.5  -17.0 ps  S =  46.2 ps  Cin =  5.3 ff  Cout =   3.0 ff  Cmax = 223.3 ff  G =   57  
ABC: Path  2 --     266 : 3    1 NOR3X1  A =   2.82  Df = 124.2   -9.5 ps  S =  53.7 ps  Cin =  3.1 ff  Cout =   3.0 ff  Cmax =  96.9 ff  G =   93  
ABC: Path  3 --     267 : 3    1 NAND3X1 A =   2.35  Df = 161.3  -25.0 ps  S =  40.6 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  113  
ABC: Path  4 --     288 : 3    1 NOR3X1  A =   2.82  Df = 203.1  -16.4 ps  S =  51.9 ps  Cin =  3.1 ff  Cout =   2.5 ff  Cmax =  96.9 ff  G =   76  
ABC: Path  5 --     324 : 3    1 NAND3X1 A =   2.35  Df = 247.0  -35.6 ps  S =  40.3 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  113  
ABC: Path  6 --     372 : 3    2 NOR3X1  A =   2.82  Df = 295.2  -23.4 ps  S =  66.4 ps  Cin =  3.1 ff  Cout =   5.5 ff  Cmax =  96.9 ff  G =  174  
ABC: Path  7 --     373 : 1   10 BUFX4   A =   2.82  Df = 357.7  -39.1 ps  S =  52.9 ps  Cin =  3.9 ff  Cout =  39.4 ff  Cmax = 999.3 ff  G =  984  
ABC: Path  8 --     374 : 1   10 BUFX4   A =   2.82  Df = 418.5  -50.9 ps  S =  54.5 ps  Cin =  3.9 ff  Cout =  41.2 ff  Cmax = 999.3 ff  G = 1017  
ABC: Path  9 --     375 : 3    1 MUX2X1  A =   3.75  Df = 454.0   -4.6 ps  S =  31.0 ps  Cin =  3.1 ff  Cout =   0.0 ff  Cmax =  75.1 ff  G =    0  
ABC: Start-point = pi142 (\in2[3][0] [6]).  End-point = po0 (\out[3][1] [0]).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.18.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       24
ABC RESULTS:           AOI21X1 cells:       10
ABC RESULTS:             BUFX2 cells:        1
ABC RESULTS:             BUFX4 cells:        6
ABC RESULTS:             INVX1 cells:      130
ABC RESULTS:            MUX2X1 cells:       64
ABC RESULTS:           NAND2X1 cells:       27
ABC RESULTS:           NAND3X1 cells:       45
ABC RESULTS:            NOR3X1 cells:       33
ABC RESULTS:           OAI21X1 cells:        7
ABC RESULTS:             OR2X1 cells:        2
ABC RESULTS:           XNOR2X1 cells:      128
ABC RESULTS:            XOR2X1 cells:       47
ABC RESULTS:        internal signals:      512
ABC RESULTS:           input signals:      192
ABC RESULTS:          output signals:       66
Removing temp directory.

33.19. Extracting gate netlist of module `\way3ua_voter' to `<abc-temp-dir>/input.blif'..
Extracted 1152 gates and 1538 wires to a netlist network with 384 inputs and 130 outputs.

33.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   1076 ( 27.1 %)   Cap =  5.0 ff (  1.6 %)   Area =     3210.95 ( 96.1 %)   Delay =   474.11 ps  ( 18.7 %)               
ABC: Path  0 --     257 : 0    2 pi      A =   0.00  Df =  26.7   -6.0 ps  S =  36.0 ps  Cin =  0.0 ff  Cout =  11.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     543 : 2    1 XOR2X1  A =   4.69  Df =  77.2  -15.9 ps  S =  43.2 ps  Cin =  5.3 ff  Cout =   2.4 ff  Cmax = 223.3 ff  G =   44  
ABC: Path  2 --     544 : 3    1 AOI21X1 A =   2.82  Df =  99.8  -15.6 ps  S =  30.7 ps  Cin =  2.6 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  112  
ABC: Path  3 --     545 : 3    1 NAND3X1 A =   2.35  Df = 135.2  -34.2 ps  S =  41.9 ps  Cin =  2.7 ff  Cout =   3.3 ff  Cmax =   0.0 ff  G =  122  
ABC: Path  4 --     546 : 3    1 NOR3X1  A =   2.82  Df = 162.5  -36.6 ps  S =  49.1 ps  Cin =  3.1 ff  Cout =   2.0 ff  Cmax =  96.9 ff  G =   63  
ABC: Path  5 --     547 : 2    1 NAND2X1 A =   1.88  Df = 183.6  -27.1 ps  S =  38.9 ps  Cin =  2.0 ff  Cout =   3.3 ff  Cmax =   0.0 ff  G =  163  
ABC: Path  6 --     548 : 3    1 NOR3X1  A =   2.82  Df = 210.7  -26.9 ps  S =  51.9 ps  Cin =  3.1 ff  Cout =   2.5 ff  Cmax =  96.9 ff  G =   76  
ABC: Path  7 --     590 : 3    1 NAND3X1 A =   2.35  Df = 254.6  -26.8 ps  S =  40.3 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  113  
ABC: Path  8 --     736 : 3    3 NOR3X1  A =   2.82  Df = 310.7   -9.0 ps  S =  85.7 ps  Cin =  3.1 ff  Cout =   9.5 ff  Cmax =  96.9 ff  G =  300  
ABC: Path  9 --     769 : 1   10 BUFX4   A =   2.82  Df = 376.4  -28.8 ps  S =  54.1 ps  Cin =  3.9 ff  Cout =  39.8 ff  Cmax = 999.3 ff  G = 1000  
ABC: Path 10 --     770 : 1   10 BUFX4   A =   2.82  Df = 438.4  -41.8 ps  S =  54.5 ps  Cin =  3.9 ff  Cout =  41.2 ff  Cmax = 999.3 ff  G = 1017  
ABC: Path 11 --     771 : 3    1 MUX2X1  A =   3.75  Df = 474.1   -4.5 ps  S =  30.4 ps  Cin =  3.1 ff  Cout =   0.0 ff  Cmax =  75.1 ff  G =    0  
ABC: Start-point = pi256 (\in2[3] [0]).  End-point = po10 (\out[3] [10]).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.19.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       26
ABC RESULTS:           AOI21X1 cells:       11
ABC RESULTS:           AOI22X1 cells:       36
ABC RESULTS:             BUFX2 cells:        1
ABC RESULTS:             BUFX4 cells:       13
ABC RESULTS:             INVX1 cells:      278
ABC RESULTS:            MUX2X1 cells:      128
ABC RESULTS:           NAND2X1 cells:       93
ABC RESULTS:           NAND3X1 cells:       99
ABC RESULTS:            NOR2X1 cells:        1
ABC RESULTS:            NOR3X1 cells:       74
ABC RESULTS:           OAI21X1 cells:        2
ABC RESULTS:             OR2X1 cells:        3
ABC RESULTS:           XNOR2X1 cells:      208
ABC RESULTS:            XOR2X1 cells:      103
ABC RESULTS:        internal signals:     1024
ABC RESULTS:           input signals:      384
ABC RESULTS:          output signals:      130
Removing temp directory.

33.20. Extracting gate netlist of module `\way3ua_voter(W=2)' to `<abc-temp-dir>/input.blif'..
Extracted 72 gates and 98 wires to a netlist network with 24 inputs and 10 outputs.

33.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     63 ( 27.0 %)   Cap =  5.1 ff (  0.3 %)   Area =      200.86 ( 98.4 %)   Delay =   238.73 ps  ( 34.9 %)               
ABC: Path  0 --      24 : 0    2 pi      A =   0.00  Df =  26.4   -5.9 ps  S =  35.7 ps  Cin =  0.0 ff  Cout =  11.2 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      40 : 2    1 XNOR2X1 A =   4.69  Df =  77.3  -18.6 ps  S =  40.0 ps  Cin =  5.1 ff  Cout =   2.5 ff  Cmax = 228.3 ff  G =   47  
ABC: Path  2 --      43 : 3    1 NAND3X1 A =   2.35  Df = 100.5   -0.5 ps  S =  40.8 ps  Cin =  2.7 ff  Cout =   3.1 ff  Cmax =   0.0 ff  G =  115  
ABC: Path  3 --      48 : 3    1 NOR3X1  A =   2.82  Df = 154.1  -17.5 ps  S =  58.5 ps  Cin =  3.1 ff  Cout =   4.0 ff  Cmax =  96.9 ff  G =  125  
ABC: Path  4 --      49 : 1    9 BUFX4   A =   2.82  Df = 198.8   -2.6 ps  S =  48.7 ps  Cin =  3.9 ff  Cout =  36.0 ff  Cmax = 999.3 ff  G =  891  
ABC: Path  5 --      97 : 3    1 NOR3X1  A =   2.82  Df = 238.7   -0.4 ps  S =  39.2 ps  Cin =  3.1 ff  Cout =   0.0 ff  Cmax =  96.9 ff  G =    0  
ABC: Start-point = pi23 (\in2[0] [1]).  End-point = po9 (\error2_o).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.20.2. Re-integrating ABC results.
ABC RESULTS:             BUFX4 cells:        1
ABC RESULTS:             INVX1 cells:       16
ABC RESULTS:            MUX2X1 cells:        8
ABC RESULTS:           NAND2X1 cells:        4
ABC RESULTS:           NAND3X1 cells:        6
ABC RESULTS:            NOR3X1 cells:        4
ABC RESULTS:           XNOR2X1 cells:       24
ABC RESULTS:        internal signals:       64
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:       10
Removing temp directory.

33.21. Extracting gate netlist of module `\way3ua_voter(W=64)' to `<abc-temp-dir>/input.blif'..
Extracted 2304 gates and 3074 wires to a netlist network with 768 inputs and 258 outputs.

33.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "gscl45nm" from "/home/gcabo/PDKs/FreePDK45/osu_soc/lib/files/gscl45nm.lib" has 25 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + read_constr -v /home/gcabo/BSC/bsc_pmu/synth/yosys/FT-PMU-comp/synth.constr 
ABC: Setting driving cell to be "INVX1".
ABC: Setting output load to be 0.015000.
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 10 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 10 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 10 
ABC: + dnsize -D 10 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   2106 ( 27.6 %)   Cap =  5.1 ff (  1.0 %)   Area =     6427.06 ( 97.2 %)   Delay =   549.58 ps  ( 14.0 %)               
ABC: Path  0 --     705 : 0    2 pi      A =   0.00  Df =  26.7   -6.0 ps  S =  36.0 ps  Cin =  0.0 ff  Cout =  11.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    1210 : 2    1 XOR2X1  A =   4.69  Df =  77.2  -15.9 ps  S =  43.2 ps  Cin =  5.3 ff  Cout =   2.4 ff  Cmax = 223.3 ff  G =   44  
ABC: Path  2 --    1211 : 3    1 AOI21X1 A =   2.82  Df =  99.8  -15.6 ps  S =  30.7 ps  Cin =  2.6 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  112  
ABC: Path  3 --    1212 : 3    1 NAND3X1 A =   2.35  Df = 134.4  -33.7 ps  S =  40.6 ps  Cin =  2.7 ff  Cout =   3.0 ff  Cmax =   0.0 ff  G =  113  
ABC: Path  4 --    1225 : 3    1 NOR3X1  A =   2.82  Df = 177.0   -0.9 ps  S =  51.9 ps  Cin =  3.1 ff  Cout =   2.5 ff  Cmax =  96.9 ff  G =   76  
ABC: Path  5 --    1246 : 3    1 NAND3X1 A =   2.35  Df = 220.9  -18.8 ps  S =  41.6 ps  Cin =  2.7 ff  Cout =   3.3 ff  Cmax =   0.0 ff  G =  122  
ABC: Path  6 --    1247 : 3    1 NOR3X1  A =   2.82  Df = 249.9  -12.7 ps  S =  54.0 ps  Cin =  3.1 ff  Cout =   3.0 ff  Cmax =  96.9 ff  G =   93  
ABC: Path  7 --    1248 : 3    1 NAND3X1 A =   2.35  Df = 287.1  -28.1 ps  S =  40.5 ps  Cin =  2.7 ff  Cout =   3.1 ff  Cmax =   0.0 ff  G =  115  
ABC: Path  8 --    1292 : 3    1 NOR3X1  A =   2.82  Df = 319.3  -22.3 ps  S =  48.3 ps  Cin =  3.1 ff  Cout =   1.8 ff  Cmax =  96.9 ff  G =   57  
ABC: Path  9 --    1487 : 2    1 AND2X2  A =   2.82  Df = 357.9  -23.9 ps  S =  14.6 ps  Cin =  1.8 ff  Cout =   4.0 ff  Cmax = 505.1 ff  G =  216  
ABC: Path 10 --    1488 : 1    5 BUFX4   A =   2.82  Df = 403.1  -38.2 ps  S =  21.9 ps  Cin =  3.9 ff  Cout =  15.0 ff  Cmax = 999.3 ff  G =  377  
ABC: Path 11 --    1581 : 1   10 BUFX4   A =   2.82  Df = 456.9  -42.2 ps  S =  51.7 ps  Cin =  3.9 ff  Cout =  39.8 ff  Cmax = 999.3 ff  G = 1000  
ABC: Path 12 --    1582 : 1   10 BUFX4   A =   2.82  Df = 514.6  -50.8 ps  S =  54.5 ps  Cin =  3.9 ff  Cout =  41.2 ff  Cmax = 999.3 ff  G = 1017  
ABC: Path 13 --    1583 : 3    1 MUX2X1  A =   3.75  Df = 549.6   -4.7 ps  S =  30.4 ps  Cin =  3.1 ff  Cout =   0.0 ff  Cmax =  75.1 ff  G =    0  
ABC: Start-point = pi704 (\in2[0] [0]).  End-point = po30 (\out[3] [30]).
ABC: + write_blif <abc-temp-dir>/output.blif 

33.21.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       29
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:           AOI21X1 cells:       37
ABC RESULTS:           AOI22X1 cells:       41
ABC RESULTS:             BUFX2 cells:        2
ABC RESULTS:             BUFX4 cells:       27
ABC RESULTS:             INVX1 cells:      553
ABC RESULTS:            MUX2X1 cells:      256
ABC RESULTS:           NAND2X1 cells:      127
ABC RESULTS:           NAND3X1 cells:      195
ABC RESULTS:            NOR2X1 cells:        7
ABC RESULTS:            NOR3X1 cells:      142
ABC RESULTS:           OAI21X1 cells:       20
ABC RESULTS:             OR2X1 cells:        4
ABC RESULTS:           XNOR2X1 cells:      460
ABC RESULTS:            XOR2X1 cells:      204
ABC RESULTS:        internal signals:     2048
ABC RESULTS:           input signals:      768
ABC RESULTS:          output signals:      258
Removing temp directory.

34. Printing statistics.

=== MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) ===

   Number of wires:               5041
   Number of wire bits:          10020
   Number of public wires:          73
   Number of public wire bits:    1897
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2932
     AND2X1                        171
     AND2X2                         10
     AOI21X1                        98
     AOI22X1                       133
     BUFX2                          77
     BUFX4                           3
     DFFPOSX1                      168
     INVX1                         289
     NAND2X1                       892
     NAND3X1                       393
     NOR2X1                         54
     NOR3X1                         80
     OAI21X1                        73
     OR2X1                         150
     XNOR2X1                       220
     XOR2X1                        119
     way3ua_voter                    1
     way3ua_voter(W=64)              1

   Area for cell type \way3ua_voter(W=64) is unknown!
   Area for cell type \way3ua_voter is unknown!

   Chip area for module '\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)': 8175.675300

=== PMU_counters(N_COUNTERS=24) ===

   Number of wires:               7838
   Number of wire bits:          13069
   Number of public wires:         103
   Number of public wire bits:    3102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5545
     AND2X1                        793
     AND2X2                          1
     AOI21X1                        54
     BUFX2                         261
     DFFPOSX1                      768
     INVX1                         412
     NAND2X1                      1246
     NAND3X1                       282
     NOR2X1                        143
     NOR3X1                        216
     OAI21X1                       628
     OR2X1                         239
     XNOR2X1                       315
     XOR2X1                        187

   Chip area for module '\PMU_counters(N_COUNTERS=24)': 17964.804000

=== PMU_overflow(N_COUNTERS=24) ===

   Number of wires:               1579
   Number of wire bits:           3103
   Number of public wires:          35
   Number of public wire bits:     894
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                620
     AND2X1                        139
     AND2X2                          8
     AOI21X1                         9
     BUFX2                           4
     DFFPOSX1                       24
     INVX1                          27
     NAND2X1                        77
     NAND3X1                       206
     NOR2X1                         32
     NOR3X1                         78
     OAI21X1                         9
     OR2X1                           7

   Chip area for module '\PMU_overflow(N_COUNTERS=24)': 1577.317300

=== PMU_quota(N_COUNTERS=24) ===

   Number of wires:               2920
   Number of wire bits:           9747
   Number of public wires:          59
   Number of public wire bits:    1664
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1697
     AND2X1                         80
     AND2X2                          2
     AOI21X1                        32
     AOI22X1                       403
     BUFX2                         133
     BUFX4                           4
     DFFPOSX1                       67
     INVX1                         163
     INVX8                           1
     MUX2X1                         44
     NAND2X1                       106
     NAND3X1                       235
     NOR2X1                         22
     NOR3X1                         46
     OAI21X1                       155
     OR2X1                         159
     OR2X2                           2
     XNOR2X1                        33
     XOR2X1                         10

   Chip area for module '\PMU_quota(N_COUNTERS=24)': 4811.732900

=== PMU_raw(N_COUNTERS=24,FT=1) ===

   Number of wires:                489
   Number of wire bits:           5700
   Number of public wires:         269
   Number of public wire bits:    5381
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                133
     AND2X1                         52
     AOI21X1                        23
     BUFX2                           1
     BUFX4                          10
     DFFPOSX1                        1
     INVX1                          26
     INVX2                           1
     MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)      1
     NAND2X1                         2
     NOR2X1                          1
     NOR3X1                          3
     OAI21X1                         1
     PMU_counters(N_COUNTERS=24)      1
     PMU_overflow(N_COUNTERS=24)      1
     PMU_quota(N_COUNTERS=24)        1
     RDC_default                     3
     crossbar_default                1
     triple_reg(IN_WIDTH=1)          1
     way3_voter(IN_WIDTH=1)          1
     way3u2a_voter(W=8,D=2)          1
     way3ua_voter(W=2)               1

   Area for cell type \triple_reg(IN_WIDTH=1) is unknown!
   Area for cell type \way3_voter(IN_WIDTH=1) is unknown!
   Area for cell type \crossbar_default is unknown!
   Area for cell type \PMU_counters(N_COUNTERS=24) is unknown!
   Area for cell type \PMU_overflow(N_COUNTERS=24) is unknown!
   Area for cell type \PMU_quota(N_COUNTERS=24) is unknown!
   Area for cell type \MCCU(N_CORES=4,FT=1,CORE_EVENTS=2) is unknown!
   Area for cell type \RDC_default is unknown!
   Area for cell type \way3ua_voter(W=2) is unknown!
   Area for cell type \way3u2a_voter(W=8,D=2) is unknown!

   Chip area for module '\PMU_raw(N_COUNTERS=24,FT=1)': 281.110700

=== RDC_default ===

   Number of wires:               1820
   Number of wire bits:           2670
   Number of public wires:          51
   Number of public wire bits:     325
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1038
     AND2X1                         80
     AND2X2                         20
     AOI21X1                       114
     AOI22X1                        68
     BUFX2                          50
     BUFX4                          11
     DFFPOSX1                      137
     INVX1                         164
     MUX2X1                         38
     NAND2X1                        91
     NAND3X1                        41
     NOR2X1                         41
     NOR3X1                         10
     OAI21X1                        95
     OR2X1                          34
     XNOR2X1                        38
     XOR2X1                          6

   Chip area for module '\RDC_default': 3348.455500

=== crossbar_default ===

   Number of wires:               1684
   Number of wire bits:           5577
   Number of public wires:          29
   Number of public wire bits:     202
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1382
     AND2X1                          1
     AND2X2                         13
     AOI21X1                       249
     AOI22X1                         5
     BUFX2                         135
     BUFX4                          58
     DFFPOSX1                       24
     INVX1                          68
     MUX2X1                        258
     NAND2X1                        39
     NAND3X1                        34
     NOR2X1                         97
     NOR3X1                         68
     OAI21X1                       282
     OR2X1                          41
     OR2X2                          10

   Chip area for module '\crossbar_default': 3982.949100

=== hamming32t26d_dec_default ===

   Number of wires:                284
   Number of wire bits:            431
   Number of public wires:           4
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                147
     AND2X1                          2
     AND2X2                          4
     BUFX2                          17
     BUFX4                           5
     MUX2X1                          1
     NAND2X1                         2
     NAND3X1                        26
     NOR2X1                          2
     OAI21X1                         1
     XNOR2X1                        75
     XOR2X1                         12

   Chip area for module '\hamming32t26d_dec_default': 554.243300

=== hamming32t26d_enc_default ===

   Number of wires:                106
   Number of wire bits:            235
   Number of public wires:           4
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 58
     BUFX2                           1
     XNOR2X1                        45
     XOR2X1                         12

   Chip area for module '\hamming32t26d_enc_default': 269.847500

=== pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) ===

   Number of wires:              17347
   Number of wire bits:          47430
   Number of public wires:         289
   Number of public wire bits:   16466
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              13521
     AND2X1                       1999
     AND2X2                          2
     AOI21X1                       342
     AOI22X1                       469
     BUFX2                        1268
     BUFX4                          78
     DFFPOSX1                     1852
     INVX1                         728
     INVX2                           2
     MUX2X1                        693
     NAND2X1                      2805
     NAND3X1                       303
     NOR2X1                         51
     NOR3X1                        145
     OAI21X1                      2452
     OR2X1                         210
     OR2X2                           1
     PMU_raw(N_COUNTERS=24,FT=1)      1
     hamming32t26d_dec_default      58
     hamming32t26d_enc_default      58
     triple_reg(IN_WIDTH=1)          2
     triple_reg(IN_WIDTH=2)          1
     triple_reg(IN_WIDTH=32)         1

   Area for cell type \triple_reg(IN_WIDTH=1) is unknown!
   Area for cell type \triple_reg(IN_WIDTH=32) is unknown!
   Area for cell type \hamming32t26d_enc_default is unknown!
   Area for cell type \hamming32t26d_dec_default is unknown!
   Area for cell type \triple_reg(IN_WIDTH=2) is unknown!
   Area for cell type \PMU_raw(N_COUNTERS=24,FT=1) is unknown!

   Chip area for module '\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)': 42705.361400

=== top_ft ===

   Number of wires:                 22
   Number of wire bits:            158
   Number of public wires:          22
   Number of public wire bits:     158
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)      1

   Area for cell type \pmu_ahb(haddr=-2146435072,hmask=4095,FT=1) is unknown!

=== triple_reg(IN_WIDTH=1) ===

   Number of wires:                 20
   Number of wire bits:             20
   Number of public wires:          16
   Number of public wire bits:      16
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     AND2X2                          1
     DFFPOSX1                        1
     way3_voter(IN_WIDTH=1)          1

   Area for cell type \way3_voter(IN_WIDTH=1) is unknown!

   Chip area for module '\triple_reg(IN_WIDTH=1)': 10.793900

=== triple_reg(IN_WIDTH=2) ===

   Number of wires:                 23
   Number of wire bits:             33
   Number of public wires:          16
   Number of public wire bits:      26
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     AND2X2                          2
     DFFPOSX1                        2
     way3_voter(IN_WIDTH=2)          1

   Area for cell type \way3_voter(IN_WIDTH=2) is unknown!

   Chip area for module '\triple_reg(IN_WIDTH=2)': 21.587800

=== triple_reg(IN_WIDTH=32) ===

   Number of wires:                117
   Number of wire bits:            427
   Number of public wires:          16
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 69
     AND2X1                         30
     AND2X2                          2
     BUFX4                           4
     DFFPOSX1                       32
     way3_voter                      1

   Area for cell type \way3_voter is unknown!

   Chip area for module '\triple_reg(IN_WIDTH=32)': 342.589000

=== way3_voter ===

   Number of wires:                385
   Number of wire bits:            742
   Number of public wires:           6
   Number of public wire bits:     130
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                262
     AND2X1                          9
     AND2X2                          3
     AOI21X1                         9
     BUFX4                           3
     INVX1                          66
     MUX2X1                         32
     NAND2X1                        16
     NAND3X1                        12
     NOR3X1                         19
     OAI21X1                         3
     XNOR2X1                        57
     XOR2X1                         33

   Chip area for module '\way3_voter': 818.928500

=== way3_voter(IN_WIDTH=1) ===

   Number of wires:                 22
   Number of wire bits:             22
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     AND2X2                          1
     AOI21X1                         1
     NAND2X1                         2
     NOR3X1                          1
     OAI21X1                         1

   Chip area for module '\way3_voter(IN_WIDTH=1)': 15.017600

=== way3_voter(IN_WIDTH=2) ===

   Number of wires:                 38
   Number of wire bits:             47
   Number of public wires:           6
   Number of public wire bits:      10
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     AND2X1                          2
     AOI21X1                         1
     INVX1                           2
     MUX2X1                          1
     NAND2X1                         2
     NOR3X1                          1
     OAI21X1                         2
     OR2X1                           1
     XNOR2X1                         4
     XOR2X1                          1

   Chip area for module '\way3_voter(IN_WIDTH=2)': 52.092300

=== way3u2a_voter(W=8,D=2) ===

   Number of wires:                774
   Number of wire bits:           1484
   Number of public wires:          34
   Number of public wire bits:     258
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                524
     AND2X1                         24
     AOI21X1                        10
     BUFX2                           1
     BUFX4                           6
     INVX1                         130
     MUX2X1                         64
     NAND2X1                        27
     NAND3X1                        45
     NOR3X1                         33
     OAI21X1                         7
     OR2X1                           2
     XNOR2X1                       128
     XOR2X1                         47

   Chip area for module '\way3u2a_voter(W=8,D=2)': 1621.900800

=== way3ua_voter ===

   Number of wires:               1505
   Number of wire bits:           2996
   Number of public wires:          18
   Number of public wire bits:     514
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1076
     AND2X1                         26
     AOI21X1                        11
     AOI22X1                        36
     BUFX2                           1
     BUFX4                          13
     INVX1                         278
     MUX2X1                        128
     NAND2X1                        93
     NAND3X1                        99
     NOR2X1                          1
     NOR3X1                         74
     OAI21X1                         2
     OR2X1                           3
     XNOR2X1                       208
     XOR2X1                        103

   Chip area for module '\way3ua_voter': 3210.950600

=== way3ua_voter(W=2) ===

   Number of wires:                120
   Number of wire bits:            183
   Number of public wires:          18
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     BUFX4                           1
     INVX1                          16
     MUX2X1                          8
     NAND2X1                         4
     NAND3X1                         6
     NOR3X1                          4
     XNOR2X1                        24

   Chip area for module '\way3ua_voter(W=2)': 200.860400

=== way3ua_voter(W=64) ===

   Number of wires:               2922
   Number of wire bits:           5946
   Number of public wires:          18
   Number of public wire bits:    1026
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2106
     AND2X1                         29
     AND2X2                          2
     AOI21X1                        37
     AOI22X1                        41
     BUFX2                           2
     BUFX4                          27
     INVX1                         553
     MUX2X1                        256
     NAND2X1                       127
     NAND3X1                       195
     NOR2X1                          7
     NOR3X1                        142
     OAI21X1                        20
     OR2X1                           4
     XNOR2X1                       460
     XOR2X1                        204

   Chip area for module '\way3ua_voter(W=64)': 6427.063500

=== design hierarchy ===

   top_ft                            1
     pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)      1
       PMU_raw(N_COUNTERS=24,FT=1)      1
         MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)      1
           way3ua_voter              1
           way3ua_voter(W=64)        1
         PMU_counters(N_COUNTERS=24)      1
         PMU_overflow(N_COUNTERS=24)      1
         PMU_quota(N_COUNTERS=24)      1
         RDC_default                 3
         crossbar_default            1
         triple_reg(IN_WIDTH=1)      1
           way3_voter(IN_WIDTH=1)      1
         way3_voter(IN_WIDTH=1)      1
         way3u2a_voter(W=8,D=2)      1
         way3ua_voter(W=2)           1
       hamming32t26d_dec_default     58
       hamming32t26d_enc_default     58
       triple_reg(IN_WIDTH=1)        2
         way3_voter(IN_WIDTH=1)      1
       triple_reg(IN_WIDTH=2)        1
         way3_voter(IN_WIDTH=2)      1
       triple_reg(IN_WIDTH=32)       1
         way3_voter                  1

   Number of wires:              71032
   Number of wire bits:         153448
   Number of public wires:        1700
   Number of public wire bits:   40559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              44849
     AND2X1                       3711
     AND2X2                        344
     AOI21X1                      1221
     AOI22X1                      1291
     BUFX2                        3077
     BUFX4                         530
     DFFPOSX1                     3352
     INVX1                        3250
     INVX2                           3
     INVX8                           1
     MUX2X1                       1656
     NAND2X1                      5833
     NAND3X1                      3441
     NOR2X1                        647
     NOR3X1                        943
     OAI21X1                      3981
     OR2X1                         918
     OR2X2                          13
     XNOR2X1                      8523
     XOR2X1                       2114

   Chip area for top module '\top_ft': 150130.008600

Removed 0 unused cells and 20536 unused wires.

35. Executing Verilog backend.
Dumping module `\MCCU(N_CORES=4,FT=1,CORE_EVENTS=2)'.
Dumping module `\PMU_counters(N_COUNTERS=24)'.
Dumping module `\PMU_overflow(N_COUNTERS=24)'.
Dumping module `\PMU_quota(N_COUNTERS=24)'.
Dumping module `\PMU_raw(N_COUNTERS=24,FT=1)'.
Dumping module `\RDC_default'.
Dumping module `\crossbar_default'.
Dumping module `\hamming32t26d_dec_default'.
Dumping module `\hamming32t26d_enc_default'.
Dumping module `\pmu_ahb(haddr=-2146435072,hmask=4095,FT=1)'.
Dumping module `\top_ft'.
Dumping module `\triple_reg(IN_WIDTH=1)'.
Dumping module `\triple_reg(IN_WIDTH=2)'.
Dumping module `\triple_reg(IN_WIDTH=32)'.
Dumping module `\way3_voter'.
Dumping module `\way3_voter(IN_WIDTH=1)'.
Dumping module `\way3_voter(IN_WIDTH=2)'.
Dumping module `\way3u2a_voter(W=8,D=2)'.
Dumping module `\way3ua_voter'.
Dumping module `\way3ua_voter(W=2)'.
Dumping module `\way3ua_voter(W=64)'.

End of script. Logfile hash: b54f029625, CPU: user 12.41s system 0.09s, MEM: 482.42 MB peak
Yosys 0.9+4081 (git sha1 862e84eb, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 27% 1x abc (4 sec), 12% 35x opt_expr (1 sec), ...
