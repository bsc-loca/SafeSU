$date
	Tue Jul 30 13:01:17 2019
$end
$version
	QuestaSim Version 10.7c
$end
$timescale
	1ps
$end

$scope module tb_MCCU $end

$scope module dut_MCCU $end
$var parameter 32 ! DATA_WIDTH $end
$var parameter 32 " WEIGHTS_WIDTH $end
$var parameter 32 # N_CORES $end
$var parameter 32 $ CORE_EVENTS $end
$var parameter 32 % OVERFLOW_PROT $end
$var parameter 32 & O_D_0PAD $end
$var parameter 32 ' D_W_0PAD $end
$var parameter 32 ( O_W_0PAD $end
$var wire 1 ) clk_i $end
$var wire 1 * rstn_i $end
$var wire 1 + enable_i $end
$var wire 1 , events_i [0] $end
$var wire 1 - quota_i [0] $end
$var wire 1 . quota_i [1] $end
$var wire 1 / quota_i [2] $end
$var wire 1 0 quota_i [3] $end
$var wire 1 1 quota_i [4] $end
$var wire 1 2 quota_i [5] $end
$var wire 1 3 quota_i [6] $end
$var wire 1 4 quota_i [7] $end
$var wire 1 5 quota_i [8] $end
$var wire 1 6 quota_i [9] $end
$var wire 1 7 quota_i [10] $end
$var wire 1 8 quota_i [11] $end
$var wire 1 9 quota_i [12] $end
$var wire 1 : quota_i [13] $end
$var wire 1 ; quota_i [14] $end
$var wire 1 < quota_i [15] $end
$var wire 1 = quota_i [16] $end
$var wire 1 > quota_i [17] $end
$var wire 1 ? quota_i [18] $end
$var wire 1 @ quota_i [19] $end
$var wire 1 A quota_i [20] $end
$var wire 1 B quota_i [21] $end
$var wire 1 C quota_i [22] $end
$var wire 1 D quota_i [23] $end
$var wire 1 E quota_i [24] $end
$var wire 1 F quota_i [25] $end
$var wire 1 G quota_i [26] $end
$var wire 1 H quota_i [27] $end
$var wire 1 I quota_i [28] $end
$var wire 1 J quota_i [29] $end
$var wire 1 K quota_i [30] $end
$var wire 1 L quota_i [31] $end
$var wire 1 M update_quota_i [0] $end
$var wire 1 N quota_o [0] $end
$var wire 1 O quota_o [1] $end
$var wire 1 P quota_o [2] $end
$var wire 1 Q quota_o [3] $end
$var wire 1 R quota_o [4] $end
$var wire 1 S quota_o [5] $end
$var wire 1 T quota_o [6] $end
$var wire 1 U quota_o [7] $end
$var wire 1 V quota_o [8] $end
$var wire 1 W quota_o [9] $end
$var wire 1 X quota_o [10] $end
$var wire 1 Y quota_o [11] $end
$var wire 1 Z quota_o [12] $end
$var wire 1 [ quota_o [13] $end
$var wire 1 \ quota_o [14] $end
$var wire 1 ] quota_o [15] $end
$var wire 1 ^ quota_o [16] $end
$var wire 1 _ quota_o [17] $end
$var wire 1 ` quota_o [18] $end
$var wire 1 a quota_o [19] $end
$var wire 1 b quota_o [20] $end
$var wire 1 c quota_o [21] $end
$var wire 1 d quota_o [22] $end
$var wire 1 e quota_o [23] $end
$var wire 1 f quota_o [24] $end
$var wire 1 g quota_o [25] $end
$var wire 1 h quota_o [26] $end
$var wire 1 i quota_o [27] $end
$var wire 1 j quota_o [28] $end
$var wire 1 k quota_o [29] $end
$var wire 1 l quota_o [30] $end
$var wire 1 m quota_o [31] $end
$var wire 1 n events_weights_i [0] $end
$var wire 1 o events_weights_i [1] $end
$var wire 1 p events_weights_i [2] $end
$var wire 1 q events_weights_i [3] $end
$var wire 1 r events_weights_i [4] $end
$var wire 1 s events_weights_i [5] $end
$var wire 1 t events_weights_i [6] $end
$var wire 1 u interruption_quota_o [0] $end
$var wire 1 v events_weights_int [0] $end
$var wire 1 w events_weights_int [1] $end
$var wire 1 x events_weights_int [2] $end
$var wire 1 y events_weights_int [3] $end
$var wire 1 z events_weights_int [4] $end
$var wire 1 { events_weights_int [5] $end
$var wire 1 | events_weights_int [6] $end
$var integer 32 } i $end
$var integer 32 ~ j $end

$scope begin InterruptionQuota[0] $end
$var parameter 32 !! x $end
$upscope $end

$scope begin SetEventsWeights[0] $end
$var parameter 32 "! x $end

$scope begin genblk1[0] $end
$var parameter 32 #! y $end
$upscope $end
$upscope $end

$scope begin AsyncReset $end
$var reg 64 $! tmp_ccc_suma_int [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 !
b111 "
b1 #
b1 $
b1000000 %
b100000 &
b11001 '
b111001 (
b0 "!
b0 #!
b0 !!
b1 }
b1 ~
b0 $!
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0u
0v
0w
0x
0y
0z
0{
0|
0n
0o
0p
0q
0r
0s
0t
0M
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0,
0+
0*
1)
$end
#1000
0)
#2000
1)
b0 }
b1 }
b0 }
b1 }
1*
#3000
0)
#4000
1+
1.
1/
11
14
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 ~
b1 ~
b1 }
1M
#5000
0)
#6000
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 ~
b1 ~
b1 }
1O
1P
1R
1U
0M
#7000
0)
#8000
0.
0/
10
01
13
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 ~
b1 ~
b1 }
1M
#9000
0)
#10000
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 ~
b1 ~
b1 }
0O
0P
1Q
0R
1T
0M
#11000
0)
#12000
0+
1)
b0 }
b1 }
b0 }
b0 ~
b1 ~
b1 }
#13000
0)
#14000
1o
1q
1)
#15000
0)
#16000
1,
1w
1y
1)
b0 }
b1 }
b0 }
b0 ~
b1010 $!
b1 ~
b1 }
#17000
0)
#18000
1+
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 $!
b0 ~
b1010 $!
b1 ~
b1 }
1O
1P
1R
1S
0T
#19000
0)
#20000
0,
0w
0y
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 $!
b0 ~
b1 ~
b1 }
0O
0Q
#21000
0)
#22000
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 ~
b1 ~
b1 }
#23000
0)
#24000
1)
0*
b0 }
b1 }
b0 }
b1 }
0P
0R
0S
0U
#25000
0)
#26000
1)
b0 }
b1 }
b0 }
b1 }
1*
#27000
0)
#28000
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 ~
b1 ~
b1 }
#29000
0)
#30000
1)
#31000
0)
#32000
1,
1w
1y
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 ~
b1010 $!
b1 ~
b1 }
1u
#33000
0)
#34000
1)
b0 }
b0 ~
b1 ~
b1 }
b0 }
b0 $!
b0 ~
b1010 $!
b1 ~
b1 }
#35000
0)
#36000
1)
#37000
0)
#38000
1)
#39000
0)
#40000
1)
